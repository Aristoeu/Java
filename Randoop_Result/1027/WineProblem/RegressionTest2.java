package WineProblem;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray50 = new int[][] { intArray29, intArray34, intArray39, intArray44, intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 1, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, (int) (short) 0, (int) (short) 0);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, 0, (int) (short) 1, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 52, 0, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray28 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray37 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (byte) 0, (int) (short) 1, intArray60);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 1, 0, intArray60);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 2191, intArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2191 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) -1, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        int[] intArray0 = new int[] {};
        int[] intArray4 = new int[] { '4' };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 0, 0);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[][] intArray55 = new int[][] { intArray45, intArray48, intArray51, intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (byte) 0, 0, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 0, (int) (short) 1, intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 1, 0, intArray55);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) (byte) 0, 710, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2000 + "'", int33 == 2000);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass21 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, (int) (byte) 0, 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, (int) (byte) 0);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray50 = new int[][] { intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, 0, 1, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (short) 0, 0, intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, (int) (short) 1, intArray50);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, 100, intArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 30 + "'", int53 == 30);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        java.lang.Class<?> wildcardClass10 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 896 + "'", int9 == 896);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[][] intArray30 = new int[][] {};
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 0, intArray30);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 2191, 100, intArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2191 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray24 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray29 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray45 = new int[][] { intArray24, intArray29, intArray34, intArray39, intArray44 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, 1, intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray63 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray70 = new int[] { '4' };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[][] intArray86 = new int[][] { intArray76, intArray79, intArray82, intArray85 };
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, (int) (byte) 0, 0, intArray86);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, (int) (short) 1, intArray86);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (short) 1, 0, intArray86);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 0, (int) (short) 0, intArray86);
        // The following exception was thrown during execution in test generation
        try {
            int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-3), 1, intArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -3 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 30 + "'", int46 == 30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[52]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 52 + "'", int87 == 52);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 319 + "'", int88 == 319);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 100 + "'", int89 == 100);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-3) + "'", int90 == (-3));
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-3), 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 100, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray37 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray56 = new int[][] { intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 0, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, 1, (int) (byte) 1, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 10, (int) (short) 0, intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass15 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray46 = new int[] { (short) -1, 10, (byte) 100 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray57 = new int[] { (short) -1, 10, (byte) 100 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray71 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray76 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray81 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray86 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray87 = new int[][] { intArray66, intArray71, intArray76, intArray81, intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (short) 1, 1, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (short) 1, (int) (byte) 0, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-1), 2000, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 30 + "'", int88 == 30);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 100 + "'", int89 == 100);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        int[] intArray2 = new int[] { (byte) -1, 500 };
        int[] intArray6 = new int[] { '4' };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray15 = new int[] { '4' };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, (int) (byte) 0, 0);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, 0, (int) (byte) 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray34 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray50 = new int[] { '4' };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[][] intArray66 = new int[][] { intArray56, intArray59, intArray62, intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (byte) 0, 0, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (byte) 0, (int) (short) 1, intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (short) 1, 0, intArray66);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 0, 0, intArray66);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (byte) 1, 0, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray2, 710, (-3), intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[-1, 500]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[52]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[52]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[52]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray48 = new int[] { (short) -1, 10, (byte) 100 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray61, (int) (byte) 0, 0);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray61, 0, (int) (byte) 0);
        int[] intArray74 = new int[] { '4' };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray74);
        int[] intArray83 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray84 = new int[][] { intArray83 };
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray74, 0, 1, intArray84);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (short) 0, 0, intArray84);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (short) 1, (int) (short) 1, intArray84);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 710, 10, intArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[52]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 30 + "'", int87 == 30);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray14 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray27 = new int[] { (byte) 100, 319 };
        int[] intArray30 = new int[] { (byte) 100, 319 };
        int[] intArray33 = new int[] { (byte) 100, 319 };
        int[] intArray36 = new int[] { (byte) 100, 319 };
        int[][] intArray37 = new int[][] { intArray27, intArray30, intArray33, intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 0, (int) (short) 1, intArray37);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-3), 4, intArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -3 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2000 + "'", int17 == 2000);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[][] intArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 10, 0, intArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass21 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 10, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, (int) (byte) 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, (int) (byte) 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (short) 0, 0, intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 1, 0, intArray61);
        int[][] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 710, (int) (short) -1, intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray30 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray46 = new int[][] { intArray25, intArray30, intArray35, intArray40, intArray45 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 1, 1, intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray55 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray64 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray71 = new int[] { '4' };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[][] intArray87 = new int[][] { intArray77, intArray80, intArray83, intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, (int) (byte) 0, 0, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, (int) (short) 1, intArray87);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (short) 1, 0, intArray87);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, (int) (short) 0, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 4, 100, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 30 + "'", int47 == 30);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[52]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 52 + "'", int88 == 52);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 319 + "'", int89 == 319);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 100 + "'", int90 == 100);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-3) + "'", int91 == (-3));
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        int[] intArray70 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray77 = new int[][] { intArray70, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) (short) 1, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 52, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 97 + "'", int78 == 97);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-5) + "'", int79 == (-5));
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass16 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 4, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int[] intArray35 = new int[] { (short) -1, 10, (byte) 100 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray55 = new int[][] { intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (byte) 0, 0, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, 0, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-3) + "'", int57 == (-3));
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (short) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray24 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray46 = new int[] { (byte) 100, 319 };
        int[] intArray49 = new int[] { (byte) 100, 319 };
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[][] intArray56 = new int[][] { intArray46, intArray49, intArray52, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (byte) 0, 0, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (byte) 0, (int) (short) 1, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 0, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) -1, 2003, intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int[] intArray50 = new int[] { (short) -1, 10, (byte) 100 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray61 = new int[] { (short) -1, 10, (byte) 100 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray70 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray75 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray80 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray85 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray90 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray91 = new int[][] { intArray70, intArray75, intArray80, intArray85, intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (short) 1, 1, intArray91);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (short) 1, (int) (byte) 0, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 710, (-3), intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 30 + "'", int92 == 30);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray33 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray46 = new int[] { (byte) 100, 319 };
        int[] intArray49 = new int[] { (byte) 100, 319 };
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[][] intArray56 = new int[][] { intArray46, intArray49, intArray52, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (byte) 0, 0, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (byte) 0, (int) (short) 1, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 1, 0, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 4, 496, intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray61 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray62 = new int[][] { intArray41, intArray46, intArray51, intArray56, intArray61 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, 1, intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (short) 1, (int) (byte) 0, intArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 100, 4, intArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 30 + "'", int63 == 30);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass22 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass37 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 100, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray34 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray47 = new int[] { (byte) 100, 319 };
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[][] intArray57 = new int[][] { intArray47, intArray50, intArray53, intArray56 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (byte) 0, 0, intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (byte) 0, (int) (short) 1, intArray57);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 1, 0, intArray57);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 710, 319, intArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, (int) (short) 0, (int) (short) 0);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray55 = new int[] { '4' };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[][] intArray71 = new int[][] { intArray61, intArray64, intArray67, intArray70 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (byte) 0, 0, intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, (int) (short) 1, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 2000, (int) (byte) 0, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2000 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-3) + "'", int49 == (-3));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[52]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[][] intArray34 = new int[][] {};
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 0, intArray34);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) ' ', intArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-3) + "'", int35 == (-3));
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) -1, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray22 = new int[] { '4' };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray31 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray32 = new int[][] { intArray31 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, 0, 1, intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (byte) 1, (int) (byte) 1, intArray32);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 0, (-1), intArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[52]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray46 = new int[][] { intArray45 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 0, 1, intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (byte) 0, 0, intArray46);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) '#', intArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        int[] intArray70 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray77 = new int[][] { intArray70, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) (short) 1, intArray77);
        java.lang.Class<?> wildcardClass80 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 97 + "'", int78 == 97);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-5) + "'", int79 == (-5));
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[][] intArray33 = new int[][] { intArray23, intArray26, intArray29, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 0, 0, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, (int) (short) 0, intArray74);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) '4', (int) (byte) 0, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        java.lang.Class<?> wildcardClass26 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (byte) 0, 0, intArray39);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 896, intArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 896 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-3) + "'", int41 == (-3));
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[][] intArray18 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 493, (int) '#', intArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, (int) (short) 0, (int) (short) 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, (int) (short) 1);
        int[] intArray28 = new int[] { (short) -1, 10, (byte) 100 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray39 = new int[] { (short) -1, 10, (byte) 100 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray58 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray63 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray68 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray69 = new int[][] { intArray48, intArray53, intArray58, intArray63, intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (short) 1, 1, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 1, (int) (byte) 0, intArray69);
        int[] intArray79 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray85 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray86 = new int[][] { intArray79, intArray85 };
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 1, (int) (byte) 0, intArray86);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, (int) (short) 1, intArray86);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 896, intArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 896 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-5) + "'", int19 == (-5));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22 == (-4));
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 30 + "'", int70 == 30);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 97 + "'", int87 == 97);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-5) + "'", int88 == (-5));
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 319, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass14 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray57 = new int[][] { intArray36, intArray41, intArray46, intArray51, intArray56 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (short) 1, 1, intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 1, (int) (byte) 0, intArray57);
        int[] intArray67 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray73 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray74 = new int[][] { intArray67, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 1, (int) (byte) 0, intArray74);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 1, 496, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 97 + "'", int75 == 97);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        java.lang.Class<?> wildcardClass43 = intArray39.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass32 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[] intArray38 = new int[] { (byte) 100, 319 };
        int[] intArray41 = new int[] { (byte) 100, 319 };
        int[] intArray44 = new int[] { (byte) 100, 319 };
        int[][] intArray45 = new int[][] { intArray35, intArray38, intArray41, intArray44 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, 0, intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 1, intArray45);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 1, 0, intArray45);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) 'a', 97, intArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) '4', 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        java.lang.Class<?> wildcardClass17 = intArray15.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (-4), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray53 = new int[] { (short) -1, 10, (byte) 100 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray66, (int) (byte) 0, 0);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray66, 0, (int) (byte) 0);
        int[] intArray79 = new int[] { '4' };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray79);
        int[] intArray88 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray89 = new int[][] { intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray79, 0, 1, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (short) 0, 0, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 1, (int) (short) 1, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) 'a', 496, intArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[52]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 10 + "'", int90 == 10);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 30 + "'", int92 == 30);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray29 = new int[][] { intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, (int) (byte) 1, intArray29);
        java.lang.Class<?> wildcardClass32 = intArray29.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass55 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-1), (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass5 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass15 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray23 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, (int) (short) 0, (int) (short) 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, (int) (short) 1);
        int[] intArray37 = new int[] { (short) -1, 10, (byte) 100 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray48 = new int[] { (short) -1, 10, (byte) 100 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray77 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray78 = new int[][] { intArray57, intArray62, intArray67, intArray72, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (short) 1, 1, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, (int) (byte) 0, intArray78);
        int[] intArray88 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray94 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray95 = new int[][] { intArray88, intArray94 };
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, (int) (byte) 0, intArray95);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, (int) (short) 1, intArray95);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) -1, 52, intArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 710 + "'", int24 == 710);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 710 + "'", int25 == 710);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-5) + "'", int28 == (-5));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-4) + "'", int31 == (-4));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 30 + "'", int79 == 30);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 97 + "'", int96 == 97);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-5) + "'", int97 == (-5));
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray22 = new int[] { 2003, (byte) 100, 52, 493, 97 };
        int[] intArray28 = new int[] { 2003, (byte) 100, 52, 493, 97 };
        int[][] intArray29 = new int[][] { intArray22, intArray28 };
        // The following exception was thrown during execution in test generation
        try {
            int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 100, 52, intArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[2003, 100, 52, 493, 97]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[2003, 100, 52, 493, 97]");
        org.junit.Assert.assertNotNull(intArray29);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray28 = new int[] { (short) -1, 10, (byte) 100 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, (int) (byte) 0, 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, 0, (int) (byte) 0);
        int[] intArray54 = new int[] { '4' };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray63 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray64 = new int[][] { intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, 0, 1, intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (short) 0, 0, intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 1, (int) (short) 1, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-3), (int) (short) 1, intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -3 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[52]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 30 + "'", int67 == 30);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray34 = new int[] { '4' };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray44 = new int[][] { intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 0, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 1, (int) (byte) 1, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 100, 10, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[52]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 30 + "'", int46 == 30);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray21 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray26 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray31 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray42 = new int[][] { intArray21, intArray26, intArray31, intArray36, intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (short) 1, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray60 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray67 = new int[] { '4' };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[][] intArray83 = new int[][] { intArray73, intArray76, intArray79, intArray82 };
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray67, (int) (byte) 0, 0, intArray83);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (byte) 0, (int) (short) 1, intArray83);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (short) 1, 0, intArray83);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (short) 0, (int) (short) 0, intArray83);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-3), 2130, intArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -3 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[52]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 52 + "'", int84 == 52);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 319 + "'", int85 == 319);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 100 + "'", int86 == 100);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-3) + "'", int87 == (-3));
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 52, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) ' ', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 4, 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int[] intArray22 = new int[] { '4' };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray28 = new int[] { (byte) 100, 319 };
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[][] intArray38 = new int[][] { intArray28, intArray31, intArray34, intArray37 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, 0, intArray38);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) '#', 319, intArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[52]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass19 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (-4), 493);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray46 = new int[][] { intArray45 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 0, 1, intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 1, (int) (byte) 1, intArray46);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 319, 500, intArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 319 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, (int) (short) 0);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, 0);
        int[] intArray43 = new int[] { '4' };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray53 = new int[][] { intArray52 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, 0, 1, intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (byte) 0, (int) (short) 1, intArray53);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 493, (int) (short) 100, intArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 493 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-3) + "'", int33 == (-3));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[52]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray21 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[] intArray43 = new int[] { (byte) 100, 319 };
        int[][] intArray44 = new int[][] { intArray34, intArray37, intArray40, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (byte) 0, 0, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, (int) (short) 1, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 97, (int) (short) 10, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 4, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray33 = new int[] { '4' };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray42 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray43 = new int[][] { intArray42 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, 0, 1, intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, (int) (byte) 1, intArray43);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 319, (int) (byte) -1, intArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 319 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[52]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 1, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray15 = new int[] { '4' };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray40, (int) (byte) 0, 0);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray40, 0, (int) (byte) 0);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray68 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray75 = new int[] { '4' };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[] intArray90 = new int[] { (byte) 100, 319 };
        int[][] intArray91 = new int[][] { intArray81, intArray84, intArray87, intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray75, (int) (byte) 0, 0, intArray91);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, (int) (byte) 0, (int) (short) 1, intArray91);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (short) 1, 0, intArray91);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (short) 0, 0, intArray91);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (byte) 1, 0, intArray91);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, 0, 0, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2130, (int) ' ', intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2130 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[52]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[52]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 319 + "'", int93 == 319);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 52 + "'", int95 == 52);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 100 + "'", int96 == 100);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 52 + "'", int97 == 52);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray34 = new int[] { '4' };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[] intArray43 = new int[] { (byte) 100, 319 };
        int[] intArray46 = new int[] { (byte) 100, 319 };
        int[] intArray49 = new int[] { (byte) 100, 319 };
        int[][] intArray50 = new int[][] { intArray40, intArray43, intArray46, intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (byte) 0, 0, intArray50);
        // The following exception was thrown during execution in test generation
        try {
            int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 100, 496, intArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[52]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, (int) (byte) 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, (int) (byte) 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (short) 0, 0, intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 1, 0, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 500, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 52, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-4), (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-4), 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 2130, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass20 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray47 = new int[] { '4' };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray56 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray57 = new int[][] { intArray56 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, 0, 1, intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, 1, (int) (byte) 1, intArray57);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (-1), intArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[52]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 4 + "'", int59 == 4);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray29 = new int[][] { intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, (int) (byte) 1, intArray29);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 1, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray11, (int) (byte) 0, 0);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray11, 0, (int) (byte) 0);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray30 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[][] intArray62 = new int[][] { intArray52, intArray55, intArray58, intArray61 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (byte) 0, 0, intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (byte) 0, (int) (short) 1, intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 0, intArray62);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (short) 0, 0, intArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 500, intArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 500 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass16 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray8 = new int[] { '4' };
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray8, (int) (byte) 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray8, 0, (int) (byte) 0);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int[] intArray27 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray43 = new int[] { '4' };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray49 = new int[] { (byte) 100, 319 };
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[][] intArray59 = new int[][] { intArray49, intArray52, intArray55, intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (byte) 0, 0, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, (int) (short) 1, intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (short) 1, 0, intArray59);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray8, (int) (short) 0, 0, intArray59);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 100, (int) ' ', intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[52]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[52]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray52);
        java.lang.Class<?> wildcardClass57 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, (int) (byte) 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, (int) (byte) 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (short) 0, 0, intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 1, 0, intArray61);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 319, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 1, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 493, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray12, 0, (int) (short) 0);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray12, 0, 0);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray42 = new int[][] { intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, 0, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (byte) 0, (int) (short) 1, intArray42);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 30, 2003, intArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 30 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-3) + "'", int22 == (-3));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-3) + "'", int28 == (-3));
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { (short) -1, 10, (byte) 100 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray43 = new int[][] { intArray22, intArray27, intArray32, intArray37, intArray42 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 1, 1, intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray52 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray61 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray68 = new int[] { '4' };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[][] intArray84 = new int[][] { intArray74, intArray77, intArray80, intArray83 };
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, (int) (byte) 0, 0, intArray84);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, (int) (short) 1, intArray84);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (short) 1, 0, intArray84);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 0, (int) (short) 0, intArray84);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 97, 2130, intArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[52]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 52 + "'", int85 == 52);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 319 + "'", int86 == 319);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-3) + "'", int88 == (-3));
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 896, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray17, (int) (byte) 0, 0);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray17, 0, (int) (byte) 0);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray36 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray52 = new int[] { '4' };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[][] intArray68 = new int[][] { intArray58, intArray61, intArray64, intArray67 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (byte) 0, 0, intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, (int) (short) 1, intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 1, 0, intArray68);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 0, 0, intArray68);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 4, 30, intArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[52]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray17, 0, (int) (short) 0);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray17, 0, 0);
        int[] intArray37 = new int[] { '4' };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray47 = new int[][] { intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, 0, 1, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 0, (int) (short) 1, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 10, 0, intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-3) + "'", int27 == (-3));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-3) + "'", int33 == (-3));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[52]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray13, (int) (byte) 0, 0);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray13, 0, (int) (byte) 0);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray36 = new int[][] { intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, 0, 1, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 0, 0, intArray36);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 100, 710, intArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) '#', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass16 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 52, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 493, 2191, intArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 493 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray77);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 500, (-1), intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 500 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        int[] intArray0 = null;
        int[][] intArray3 = new int[][] {};
        // The following exception was thrown during execution in test generation
        try {
            int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 2003, (-3), intArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 319, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int[] intArray43 = new int[] { '4' };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray49 = new int[] { (byte) 100, 319 };
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[][] intArray59 = new int[][] { intArray49, intArray52, intArray55, intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (byte) 0, 0, intArray59);
        int[] intArray66 = new int[] { (short) -1, 10, (byte) 100 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray75 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray80 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray85 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray90 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray95 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray96 = new int[][] { intArray75, intArray80, intArray85, intArray90, intArray95 };
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (short) 1, 1, intArray96);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 0, 0, intArray96);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (-5), 493, intArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[52]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 30 + "'", int97 == 30);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 52 + "'", int98 == 52);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 1, intArray60);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[][] intArray82 = new int[][] { intArray72, intArray75, intArray78, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, 0, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-5), 0, intArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 1, 10, intArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 10, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray50 = new int[] { (byte) 100 };
        int[] intArray52 = new int[] { (byte) 100 };
        int[] intArray54 = new int[] { (byte) 100 };
        int[] intArray56 = new int[] { (byte) 100 };
        int[] intArray58 = new int[] { (byte) 100 };
        int[] intArray60 = new int[] { (byte) 100 };
        int[][] intArray61 = new int[][] { intArray50, intArray52, intArray54, intArray56, intArray58, intArray60 };
        // The following exception was thrown during execution in test generation
        try {
            int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 10, (int) (short) -1, intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100]");
        org.junit.Assert.assertNotNull(intArray61);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 1, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray28 = new int[] { (short) -1, 10, (byte) 100 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[][] intArray40 = new int[][] {};
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (byte) 0, (int) (short) 0, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '4', (int) (byte) 10, intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-3) + "'", int41 == (-3));
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { (short) -1, 10, (byte) 100 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray55 = new int[] { (short) -1, 10, (byte) 100 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray64 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray69 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray74 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray79 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray84 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray85 = new int[][] { intArray64, intArray69, intArray74, intArray79, intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (short) 1, 1, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (short) 1, (int) (byte) 0, intArray85);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 100, 28, intArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 30 + "'", int86 == 30);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) -1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) ' ', 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 500, 496, intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 500 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) -1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass84 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray8 = new int[] { (short) -1, 10, (byte) 100 };
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray36 = new int[] { (byte) 100, 319 };
        int[] intArray39 = new int[] { (byte) 100, 319 };
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[][] intArray46 = new int[][] { intArray36, intArray39, intArray42, intArray45 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 0, 0, intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (byte) 0, (int) (short) 1, intArray46);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray8, 1, 0, intArray46);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 710, 0, intArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass9 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray42 = new int[][] { intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, 0, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 1, (int) (byte) 1, intArray42);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 319, 0, intArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 319 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray25 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray34 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray47 = new int[] { (byte) 100, 319 };
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[][] intArray57 = new int[][] { intArray47, intArray50, intArray53, intArray56 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (byte) 0, 0, intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (byte) 0, (int) (short) 1, intArray57);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, 0, intArray57);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) (byte) 10, intArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray37 = new int[][] { intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 1, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 1, (int) (byte) 1, intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray37);
        java.lang.Class<?> wildcardClass41 = intArray37.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (byte) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 100, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) 'a', 2130, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray40 = new int[][] { intArray39 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 0, 1, intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 1, (int) (byte) 1, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (-3), (int) 'a', intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -3 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) -1, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray27 = new int[] { (byte) 100, 319 };
        int[] intArray30 = new int[] { (byte) 100, 319 };
        int[] intArray33 = new int[] { (byte) 100, 319 };
        int[] intArray36 = new int[] { (byte) 100, 319 };
        int[][] intArray37 = new int[][] { intArray27, intArray30, intArray33, intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 0, (int) (short) 1, intArray37);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 500, 52, intArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 500 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2000 + "'", int17 == 2000);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass10 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int[] intArray40 = new int[] { (short) -1, 10, (byte) 100 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray53 = new int[] { '4' };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray53, (int) (byte) 0, 0);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray53, 0, (int) (byte) 0);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray75 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray76 = new int[][] { intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, 0, 1, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 0, 0, intArray76);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (short) 1, (int) (short) 1, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 2130, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2130 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[52]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 30 + "'", int79 == 30);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray77);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, 0, intArray77);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) '4', 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray26 = new int[][] { intArray25 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 1, intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (byte) 0, 0, intArray26);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 1, 493, intArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-3) + "'", int28 == (-3));
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        int[] intArray0 = null;
        int[] intArray4 = new int[] { '4' };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 0, 0);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray29 = new int[] { (short) -1, 10, (byte) 100 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray58 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray59 = new int[][] { intArray38, intArray43, intArray48, intArray53, intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 1, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, (int) (byte) 0, intArray59);
        int[] intArray69 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray75 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray76 = new int[][] { intArray69, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, (int) (byte) 0, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 0, 1, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 4, (int) (byte) 10, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 30 + "'", int60 == 30);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 97 + "'", int77 == 97);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-5) + "'", int78 == (-5));
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray9 = new int[] { '4' };
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int[] intArray15 = new int[] { (byte) 100, 319 };
        int[] intArray18 = new int[] { (byte) 100, 319 };
        int[] intArray21 = new int[] { (byte) 100, 319 };
        int[] intArray24 = new int[] { (byte) 100, 319 };
        int[][] intArray25 = new int[][] { intArray15, intArray18, intArray21, intArray24 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray9, (int) (byte) 0, 0, intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int[] intArray34 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray50 = new int[] { '4' };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[][] intArray66 = new int[][] { intArray56, intArray59, intArray62, intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (byte) 0, 0, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (byte) 0, (int) (short) 1, intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (short) 1, 0, intArray66);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray9, (int) (short) 1, (int) (short) 0, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 10, (int) 'a', intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[52]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[52]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray33 = new int[] { (short) -1, 10, (byte) 100 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray63 = new int[][] { intArray42, intArray47, intArray52, intArray57, intArray62 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 1, 1, intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 1, (int) (byte) 0, intArray63);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) -1, 493, intArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray49 = new int[][] { intArray28, intArray33, intArray38, intArray43, intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, 1, intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, (int) (short) 0, (int) (short) 0);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[][] intArray76 = new int[][] { intArray66, intArray69, intArray72, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (byte) 0, 0, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, (int) (short) 1, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 10, (int) (byte) 0, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-3) + "'", int54 == (-3));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 0, 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 97, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray77);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, 0, intArray77);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 0, intArray77);
        java.lang.Class<?> wildcardClass84 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass18 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-3), (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (byte) 1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray37 = new int[][] { intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 1, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 1, (int) (byte) 1, intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray37);
        java.lang.Class<?> wildcardClass41 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        java.lang.Class<?> wildcardClass43 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[][] intArray33 = new int[][] { intArray23, intArray26, intArray29, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 0, 0, intArray33);
        int[] intArray40 = new int[] { (short) -1, 10, (byte) 100 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray64 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray69 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray70 = new int[][] { intArray49, intArray54, intArray59, intArray64, intArray69 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (short) 1, 1, intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 0, 0, intArray70);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2000, 319, intArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2000 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 30 + "'", int71 == 30);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { (short) 1, 710, 30 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, (int) (byte) 0, 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, 0, (int) (byte) 0);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray60 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray69 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray76 = new int[] { '4' };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray76);
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[] intArray91 = new int[] { (byte) 100, 319 };
        int[][] intArray92 = new int[][] { intArray82, intArray85, intArray88, intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray76, (int) (byte) 0, 0, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, (int) (short) 1, intArray92);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (short) 1, 0, intArray92);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (short) 0, 0, intArray92);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 1, 0, intArray92);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, 1, (int) (byte) 1, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-5), (int) (short) 10, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2191 + "'", int27 == 2191);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2191 + "'", int28 == 2191);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[52]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 100 + "'", int95 == 100);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 52 + "'", int96 == 52);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 100 + "'", int97 == 100);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 2130 + "'", int98 == 2130);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[][] intArray27 = new int[][] {};
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (byte) 0, (int) (short) 0, intArray27);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, 100, intArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-3) + "'", int28 == (-3));
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (short) 10, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray28, (int) (byte) 0, 0);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray28, 0, (int) (byte) 0);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray50 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray51 = new int[][] { intArray50 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, 0, 1, intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 0, 0, intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (short) 1, intArray51);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 10, 28, intArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray22 = new int[] { (byte) 100, 319 };
        int[] intArray25 = new int[] { (byte) 100, 319 };
        int[] intArray28 = new int[] { (byte) 100, 319 };
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[][] intArray32 = new int[][] { intArray22, intArray25, intArray28, intArray31 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (byte) 0, 0, intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray41 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray50 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray57 = new int[] { '4' };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[][] intArray73 = new int[][] { intArray63, intArray66, intArray69, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (byte) 0, 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (byte) 0, (int) (short) 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (short) 1, 0, intArray73);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 1, (int) (short) 0, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 1, 4389, intArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4389 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[52]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 319 + "'", int75 == 319);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray61 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray62 = new int[][] { intArray41, intArray46, intArray51, intArray56, intArray61 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, 1, intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (short) 1, (int) (byte) 0, intArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 10, 97, intArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 30 + "'", int63 == 30);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray48 = new int[][] { intArray27, intArray32, intArray37, intArray42, intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, 1, intArray48);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) '4', (int) (short) -1, intArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray36 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray52 = new int[] { '4' };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[][] intArray68 = new int[][] { intArray58, intArray61, intArray64, intArray67 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (byte) 0, 0, intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, (int) (short) 1, intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 1, 0, intArray68);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (short) 1, (int) (short) 0, intArray68);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 496, 52, intArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[52]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 28, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray21 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[] intArray43 = new int[] { (byte) 100, 319 };
        int[][] intArray44 = new int[][] { intArray34, intArray37, intArray40, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (byte) 0, 0, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, (int) (short) 1, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 1, 0, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) '#', 2000, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass27 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray42 = new int[][] { intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, 0, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (byte) 1, (int) (byte) 1, intArray42);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) '#', 493, intArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[] intArray19 = new int[] { (byte) 100, 319 };
        int[] intArray22 = new int[] { (byte) 100, 319 };
        int[] intArray25 = new int[] { (byte) 100, 319 };
        int[][] intArray26 = new int[][] { intArray16, intArray19, intArray22, intArray25 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (byte) 0, 0, intArray26);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) -1, 0, intArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        int[] intArray0 = null;
        int[] intArray5 = new int[] { (short) 10, 4389 };
        int[][] intArray6 = new int[][] { intArray5 };
        // The following exception was thrown during execution in test generation
        try {
            int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) (byte) 1, (int) (byte) -1, intArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 4389]");
        org.junit.Assert.assertNotNull(intArray6);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        java.lang.Class<?> wildcardClass23 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 10, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int[][] intArray41 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) -1, 2003, intArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[][] intArray58 = new int[][] { intArray48, intArray51, intArray54, intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 0, 0, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (byte) 0, (int) (short) 1, intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 0, intArray58);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 1, (int) (short) 0, intArray58);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) -1, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 10, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass16 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray28 = new int[] { (short) -1, 10, (byte) 100 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray28, 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray28, 0, 0);
        int[] intArray48 = new int[] { '4' };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray58 = new int[][] { intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, 0, 1, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (byte) 0, (int) (short) 1, intArray58);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-3) + "'", int44 == (-3));
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[52]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[][] intArray18 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 100, (int) '#', intArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray48 = new int[][] { intArray27, intArray32, intArray37, intArray42, intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, 1, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[][] intArray89 = new int[][] { intArray79, intArray82, intArray85, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, (int) (byte) 0, 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, (int) (short) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (short) 1, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, (int) (short) 0, intArray89);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, 1, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 319 + "'", int91 == 319);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-3) + "'", int93 == (-3));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray47 = new int[] { (short) -1, 10, (byte) 100 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray60, (int) (byte) 0, 0);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray60, 0, (int) (byte) 0);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray82 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray83 = new int[][] { intArray82 };
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, 0, 1, intArray83);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (short) 0, 0, intArray83);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (short) 1, (int) (short) 1, intArray83);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 2003, 896, intArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2003 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 10 + "'", int84 == 10);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 52 + "'", int85 == 52);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 30 + "'", int86 == 30);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int[][] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 500, (int) ' ', intArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass38 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray54 = new int[][] { intArray33, intArray38, intArray43, intArray48, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray54);
        java.lang.Class<?> wildcardClass57 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray54 = new int[][] { intArray33, intArray38, intArray43, intArray48, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray54);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) '4', 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 1, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        int[] intArray66 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray73 = new int[][] { intArray66, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) -1, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 97 + "'", int74 == 97);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[][] intArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 100, 896, intArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 10, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray54 = new int[][] { intArray33, intArray38, intArray43, intArray48, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray54);
        java.lang.Class<?> wildcardClass57 = intArray54.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray77);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, 0, intArray77);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 0, intArray77);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass85 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 52 + "'", int84 == 52);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray13 = new int[] { (short) -1, 10, (byte) 100 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray48 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray49 = new int[][] { intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, 0, 1, intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 1, (int) (short) 1, intArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 1, 10, intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 30 + "'", int52 == 30);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray29 = new int[][] { intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, (int) (byte) 1, intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray36 = new int[] { (short) -1, 10, (byte) 100 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray60 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray65 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray66 = new int[][] { intArray45, intArray50, intArray55, intArray60, intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 1, 1, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, (int) (byte) 0, intArray66);
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray82 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray83 = new int[][] { intArray76, intArray82 };
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, (int) (byte) 0, intArray83);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 4, 30, intArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 30 + "'", int67 == 30);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 97 + "'", int84 == 97);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray38 = new int[] { (short) -1, 10, (byte) 100 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray68 = new int[][] { intArray47, intArray52, intArray57, intArray62, intArray67 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (short) 1, 1, intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (short) 1, (int) (byte) 0, intArray68);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-1), 0, intArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 30 + "'", int69 == 30);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray53 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray54 = new int[][] { intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, 0, 1, intArray54);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) ' ', 100, intArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray15 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray20 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray25 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray30 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray36 = new int[][] { intArray15, intArray20, intArray25, intArray30, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, 1, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, (int) (short) 0, (int) (short) 0);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray47 = new int[] { '4' };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[][] intArray63 = new int[][] { intArray53, intArray56, intArray59, intArray62 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (byte) 0, 0, intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 0, (int) (short) 1, intArray63);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (-1), (int) (short) 1, intArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-3) + "'", int41 == (-3));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[52]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray15 = new int[] { '4' };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, (int) (byte) 0, 0);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, 0, (int) (byte) 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray34 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray50 = new int[] { '4' };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[][] intArray66 = new int[][] { intArray56, intArray59, intArray62, intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (byte) 0, 0, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (byte) 0, (int) (short) 1, intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (short) 1, 0, intArray66);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 0, 0, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4, (int) '4', intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[52]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[52]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { '4' };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray71 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray72 = new int[][] { intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, 0, 1, intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, 1, (int) (byte) 1, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 500, (int) (short) 0, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 500 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[52]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 4 + "'", int74 == 4);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 493, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        int[] intArray70 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray77 = new int[][] { intArray70, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) (short) 1, intArray77);
        java.lang.Class<?> wildcardClass80 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 97 + "'", int78 == 97);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-5) + "'", int79 == (-5));
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, (int) 'a', 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray50 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray51 = new int[][] { intArray50 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, 0, 1, intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 1, (int) (byte) 1, intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, 0, intArray51);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 97, (int) (short) 10, intArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 30 + "'", int53 == 30);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray28 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray37 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (byte) 0, (int) (short) 1, intArray60);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 1, 0, intArray60);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 100, intArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray48 = new int[][] { intArray27, intArray32, intArray37, intArray42, intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, 1, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (short) 0, (int) (short) 0);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray59 = new int[] { '4' };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[][] intArray75 = new int[][] { intArray65, intArray68, intArray71, intArray74 };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, 0, intArray75);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 0, (int) (short) 1, intArray75);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) -1, 4, intArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-3) + "'", int53 == (-3));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[52]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 319 + "'", int77 == 319);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, (int) (byte) 0, 0);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray37 = new int[] { (short) -1, 10, (byte) 100 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray48 = new int[] { (short) -1, 10, (byte) 100 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray77 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray78 = new int[][] { intArray57, intArray62, intArray67, intArray72, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (short) 1, 1, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, (int) (byte) 0, intArray78);
        int[] intArray88 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray94 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray95 = new int[][] { intArray88, intArray94 };
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, (int) (byte) 0, intArray95);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray95);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) '4', 30, intArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 30 + "'", int79 == 30);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 97 + "'", int96 == 97);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-5) + "'", int97 == (-5));
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-1), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass22 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 1, 0, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 896, 2191, intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 896 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray27 = new int[][] { intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, 0, 1, intArray27);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) '#', 28, intArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-1), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass43 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (-3), (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 10, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass15 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray29 = new int[][] { intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, (int) (byte) 1, intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass33 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 28, (int) 'a', intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 28 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray55 = new int[][] { intArray34, intArray39, intArray44, intArray49, intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, (int) (byte) 0, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-5), 496, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 1, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray24 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { '4' };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray42 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray43 = new int[][] { intArray42 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, 0, 1, intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, 1, (int) (byte) 1, intArray43);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) 'a', (int) (byte) -1, intArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[52]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 4 + "'", int45 == 4);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass13 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 496, 100, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray55 = new int[][] { intArray34, intArray39, intArray44, intArray49, intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, (int) (byte) 0, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 496, 28, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray55 = new int[] { (short) 0, (short) -1, 52, 2003, 30, 2003 };
        int[] intArray62 = new int[] { (short) 0, (short) -1, 52, 2003, 30, 2003 };
        int[] intArray69 = new int[] { (short) 0, (short) -1, 52, 2003, 30, 2003 };
        int[] intArray76 = new int[] { (short) 0, (short) -1, 52, 2003, 30, 2003 };
        int[][] intArray77 = new int[][] { intArray55, intArray62, intArray69, intArray76 };
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-1), (int) (short) 100, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, -1, 52, 2003, 30, 2003]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, -1, 52, 2003, 30, 2003]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, -1, 52, 2003, 30, 2003]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, -1, 52, 2003, 30, 2003]");
        org.junit.Assert.assertNotNull(intArray77);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray37 = new int[][] { intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 1, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 1, (int) (byte) 1, intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray37);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray44, (int) (byte) 0, 0);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray44, 0, (int) (byte) 0);
        int[] intArray57 = new int[] { '4' };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray67 = new int[][] { intArray66 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, 0, 1, intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (short) 0, 0, intArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 97, (int) 'a', intArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[52]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray14 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 1, (int) (byte) 1, intArray33);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 319, 28, intArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 319 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2000 + "'", int17 == 2000);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2000 + "'", int18 == 2000);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray31 = new int[] { (short) -1, 10, (byte) 100 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray60 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray61 = new int[][] { intArray40, intArray45, intArray50, intArray55, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (short) 1, 1, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, (int) (byte) 0, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 12390, 493, intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 12390 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 30 + "'", int62 == 30);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray49 = new int[] { '4' };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray49, (int) (byte) 0, 0);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray49, 0, (int) (byte) 0);
        int[] intArray62 = new int[] { '4' };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray71 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray72 = new int[][] { intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, 0, 1, intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, (int) (short) 0, 0, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4, (-3), intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[52]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[52]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) '4', 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass17 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray28 = new int[] { (short) -1, 10, (byte) 100 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray58 = new int[][] { intArray37, intArray42, intArray47, intArray52, intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 1, 1, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, (int) (byte) 0, intArray58);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-3), 896, intArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -3 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 30 + "'", int59 == 30);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { 97, (short) 100, 493 };
        int[] intArray19 = new int[] { 97, (short) 100, 493 };
        int[] intArray23 = new int[] { 97, (short) 100, 493 };
        int[] intArray27 = new int[] { 97, (short) 100, 493 };
        int[] intArray31 = new int[] { 97, (short) 100, 493 };
        int[] intArray35 = new int[] { 97, (short) 100, 493 };
        int[][] intArray36 = new int[][] { intArray15, intArray19, intArray23, intArray27, intArray31, intArray35 };
        // The following exception was thrown during execution in test generation
        try {
            int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 2191, 0, intArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2191 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[97, 100, 493]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 493]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[97, 100, 493]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 493]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 493]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 493]");
        org.junit.Assert.assertNotNull(intArray36);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) -1, 0, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray42, (int) (byte) 0, 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray42, 0, (int) (byte) 0);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray61 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray70 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray77 = new int[] { '4' };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray77);
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[] intArray89 = new int[] { (byte) 100, 319 };
        int[] intArray92 = new int[] { (byte) 100, 319 };
        int[][] intArray93 = new int[][] { intArray83, intArray86, intArray89, intArray92 };
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray77, (int) (byte) 0, 0, intArray93);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, (int) (byte) 0, (int) (short) 1, intArray93);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (short) 1, 0, intArray93);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 0, 0, intArray93);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (byte) 0, intArray93);
        java.lang.Class<?> wildcardClass99 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2000 + "'", int73 == 2000);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[52]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 319 + "'", int95 == 319);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 100 + "'", int96 == 100);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 52 + "'", int97 == 52);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-3) + "'", int98 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray39 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[][] intArray62 = new int[][] { intArray52, intArray55, intArray58, intArray61 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (byte) 0, 0, intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (byte) 0, (int) (short) 1, intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, 1, 0, intArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 710, (-3), intArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray25 = new int[] { (byte) 100, 319 };
        int[] intArray28 = new int[] { (byte) 100, 319 };
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[][] intArray35 = new int[][] { intArray25, intArray28, intArray31, intArray34 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (byte) 0, 0, intArray35);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-4), 493, intArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -4 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray56, (int) (byte) 0, 0);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray56, 0, (int) (byte) 0);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray78 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray79 = new int[][] { intArray78 };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, 0, 1, intArray79);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (short) 0, 0, intArray79);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 1, (int) (short) 1, intArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, 4389, intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4389 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 10 + "'", int80 == 10);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 30 + "'", int82 == 30);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 12390, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 496, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray37 = new int[] { '4' };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray47 = new int[][] { intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, 0, 1, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 1, (int) (byte) 1, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-4), (int) (short) 0, intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -4 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[52]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray15 = new int[] { (short) 1, 710, 30 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, (int) (byte) 0, 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, 0, (int) (byte) 0);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray49 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray58 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray65 = new int[] { '4' };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[][] intArray81 = new int[][] { intArray71, intArray74, intArray77, intArray80 };
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, (int) (byte) 0, 0, intArray81);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, (int) (short) 1, intArray81);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, (int) (short) 1, 0, intArray81);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 0, 0, intArray81);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 1, 0, intArray81);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, 1, (int) (byte) 1, intArray81);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) -1, (-3), intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2191 + "'", int16 == 2191);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2191 + "'", int17 == 2191);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[52]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 52 + "'", int82 == 52);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 52 + "'", int85 == 52);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 100 + "'", int86 == 100);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2130 + "'", int87 == 2130);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray36 = new int[] { (short) -1, 10, (byte) 100 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray60 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray65 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray66 = new int[][] { intArray45, intArray50, intArray55, intArray60, intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 1, 1, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '4', 28, intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 30 + "'", int67 == 30);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, (int) (short) 0, (int) (short) 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, (int) (short) 1);
        int[] intArray37 = new int[] { (short) -1, 10, (byte) 100 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray48 = new int[] { (short) -1, 10, (byte) 100 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray77 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray78 = new int[][] { intArray57, intArray62, intArray67, intArray72, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (short) 1, 1, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, (int) (byte) 0, intArray78);
        int[] intArray88 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray94 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray95 = new int[][] { intArray88, intArray94 };
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, (int) (byte) 0, intArray95);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, (int) (short) 1, intArray95);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 30, (int) ' ', intArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 30 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 710 + "'", int24 == 710);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 710 + "'", int25 == 710);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-5) + "'", int28 == (-5));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-4) + "'", int31 == (-4));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 30 + "'", int79 == 30);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 97 + "'", int96 == 97);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-5) + "'", int97 == (-5));
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, 0, (int) (short) 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, 0, 0);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray50 = new int[][] { intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, 0, 1, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, (int) (short) 1, intArray50);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) 'a', 493, intArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 100, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass18 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[][] intArray33 = new int[][] { intArray23, intArray26, intArray29, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 0, 0, intArray33);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 496, 2003, intArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-1), (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (-1), 896);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-3), (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 100, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, 0, (int) (byte) 0);
        int[] intArray38 = new int[] { '4' };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray47 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray48 = new int[][] { intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, 0, 1, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 0, 0, intArray48);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (short) 1, (int) (short) 1, intArray48);
        // The following exception was thrown during execution in test generation
        try {
            int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 4, (int) (byte) 10, intArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[52]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray13, (int) (byte) 0, 0);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray13, 0, (int) (byte) 0);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray32 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray48 = new int[] { '4' };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[][] intArray64 = new int[][] { intArray54, intArray57, intArray60, intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (byte) 0, 0, intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (byte) 0, (int) (short) 1, intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, 0, intArray64);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 0, 0, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 28, 97, intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 28 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 896 + "'", int9 == 896);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2000 + "'", int33 == 2000);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[52]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 1, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 100, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray33 = new int[] { '4' };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray39 = new int[] { (byte) 100, 319 };
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[][] intArray49 = new int[][] { intArray39, intArray42, intArray45, intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (byte) 0, 0, intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (byte) 0, (int) (short) 1, intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, 0, intArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 710, (int) '4', intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2000 + "'", int18 == 2000);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[52]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 52, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray57 = new int[] { (short) -1, 10, (byte) 100 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray57, 0, (int) (short) 0);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray75 = new int[] { (short) -1, 10, (byte) 100 };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int[] intArray85 = new int[] { '4' };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray85);
        int[] intArray94 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray95 = new int[][] { intArray94 };
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray85, 0, 1, intArray95);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray75, (int) (byte) 0, 0, intArray95);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, 0, 4, intArray95);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 10, (int) (short) 10, intArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-3) + "'", int67 == (-3));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 319 + "'", int77 == 319);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[52]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 10 + "'", int96 == 10);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-3) + "'", int97 == (-3));
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        java.lang.Class<?> wildcardClass36 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[][] intArray24 = new int[][] {};
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (byte) 0, (int) (short) 0, intArray24);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2000, 4389, intArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2000 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        int[] intArray0 = null;
        int[] intArray4 = new int[] { '4' };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 0, 0);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[][] intArray55 = new int[][] { intArray45, intArray48, intArray51, intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (byte) 0, 0, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 0, (int) (short) 1, intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 1, 0, intArray55);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 896, (int) (short) -1, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2000 + "'", int33 == 2000);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { (short) -1, 10, (byte) 100 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, 0, intArray33);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 500, 2191, intArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 500 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-3) + "'", int35 == (-3));
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) 'a', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray49 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 97, (int) '#', intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-3), (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray37 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray38 = new int[][] { intArray37 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, 0, 1, intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, 0, intArray38);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '4', 710, intArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-3) + "'", int40 == (-3));
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) '4', 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, (int) (byte) 0, 0);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, 0, (int) (byte) 0);
        int[] intArray48 = new int[] { '4' };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray58 = new int[][] { intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, 0, 1, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 0, 0, intArray58);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) ' ', (int) (byte) 10, intArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[52]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray36 = new int[] { (short) -1, 10, (byte) 100 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray60 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray65 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray66 = new int[][] { intArray45, intArray50, intArray55, intArray60, intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 1, 1, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, (int) (short) 0, (int) (short) 0);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray77 = new int[] { '4' };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray77);
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[] intArray89 = new int[] { (byte) 100, 319 };
        int[] intArray92 = new int[] { (byte) 100, 319 };
        int[][] intArray93 = new int[][] { intArray83, intArray86, intArray89, intArray92 };
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray77, (int) (byte) 0, 0, intArray93);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 0, (int) (short) 1, intArray93);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4389, 1, intArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4389 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 30 + "'", int67 == 30);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-3) + "'", int71 == (-3));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[52]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 319 + "'", int95 == 319);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, (int) (short) 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 0, 0, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 4, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) '4', 100, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-3) + "'", int24 == (-3));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-3) + "'", int54 == (-3));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray21 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray26 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray31 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray42 = new int[][] { intArray21, intArray26, intArray31, intArray36, intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (short) 1, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray60 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray67 = new int[] { '4' };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[][] intArray83 = new int[][] { intArray73, intArray76, intArray79, intArray82 };
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray67, (int) (byte) 0, 0, intArray83);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (byte) 0, (int) (short) 1, intArray83);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (short) 1, 0, intArray83);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (short) 0, (int) (short) 0, intArray83);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 4, 28, intArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[52]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 52 + "'", int84 == 52);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 319 + "'", int85 == 319);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 100 + "'", int86 == 100);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-3) + "'", int87 == (-3));
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-4), 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, (int) (byte) 0, 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, (int) (byte) 0);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray50 = new int[][] { intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, 0, 1, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (short) 0, 0, intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, (int) (short) 1, intArray50);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 30, (int) ' ', intArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 30 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 30 + "'", int53 == 30);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray33 = new int[] { (byte) 100, 319 };
        int[] intArray36 = new int[] { (byte) 100, 319 };
        int[] intArray39 = new int[] { (byte) 100, 319 };
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[][] intArray43 = new int[][] { intArray33, intArray36, intArray39, intArray42 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (byte) 0, 0, intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray52 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray61 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray68 = new int[] { '4' };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[][] intArray84 = new int[][] { intArray74, intArray77, intArray80, intArray83 };
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, (int) (byte) 0, 0, intArray84);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, (int) (short) 1, intArray84);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (short) 1, 0, intArray84);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (short) 1, (int) (short) 0, intArray84);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 496, intArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[52]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 52 + "'", int85 == 52);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 319 + "'", int86 == 319);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray54 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray60 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass86 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 319 + "'", int85 == 319);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray24 = new int[] { (byte) 100, 319 };
        int[] intArray27 = new int[] { (byte) 100, 319 };
        int[] intArray30 = new int[] { (byte) 100, 319 };
        int[] intArray33 = new int[] { (byte) 100, 319 };
        int[][] intArray34 = new int[][] { intArray24, intArray27, intArray30, intArray33 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, 0, intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray43 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray59 = new int[] { '4' };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[][] intArray75 = new int[][] { intArray65, intArray68, intArray71, intArray74 };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, 0, intArray75);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (byte) 0, (int) (short) 1, intArray75);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 1, 0, intArray75);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, (int) (short) 0, intArray75);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (-5), intArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[52]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 319 + "'", int77 == 319);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 100, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass57 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray33 = new int[] { (short) -1, 10, (byte) 100 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray33, 0, (int) (short) 0);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray33, 0, 0);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray33, 0, 1);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[][] intArray82 = new int[][] { intArray72, intArray75, intArray78, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, 0, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, (int) (short) 1, intArray82);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, 0, 0, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (-1), (-3), intArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-3) + "'", int49 == (-3));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 28 + "'", int52 == 28);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-3) + "'", int85 == (-3));
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray49 = new int[][] { intArray28, intArray33, intArray38, intArray43, intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, 1, intArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 710, 12390, intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray16 = new int[] { (short) 1, 710, 30 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray22 = new int[] { '4' };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray31, (int) (byte) 0, 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray31, 0, (int) (byte) 0);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray50 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[][] intArray82 = new int[][] { intArray72, intArray75, intArray78, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, 0, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, (int) (short) 1, intArray82);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (short) 1, 0, intArray82);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (short) 0, 0, intArray82);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 1, 0, intArray82);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 1, (int) (byte) 1, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 10, (int) (short) -1, intArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2191 + "'", int17 == 2191);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2191 + "'", int18 == 2191);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[52]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2130 + "'", int88 == 2130);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[][] intArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4, (int) ' ', intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 28 + "'", int44 == 28);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, (int) (byte) 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, (int) (byte) 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (short) 0, 0, intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 1, 0, intArray61);
        int[] intArray70 = new int[] { '4' };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[][] intArray86 = new int[][] { intArray76, intArray79, intArray82, intArray85 };
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, (int) (byte) 0, 0, intArray86);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 100, (-3), intArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[52]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 52 + "'", int87 == 52);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 30, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray54 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray60 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) '4', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray24 = new int[] { '4' };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray34 = new int[][] { intArray33 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, 0, 1, intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 0, 0, intArray34);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 0, (int) '4', intArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[52]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 1, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass85 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) '#', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        int[] intArray66 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray73 = new int[][] { intArray66, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[][] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 28, 0, intArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 97 + "'", int74 == 97);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[][] intArray34 = new int[][] {};
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 0, intArray34);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 319, (int) (byte) 0, intArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 319 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-3) + "'", int35 == (-3));
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[][] intArray20 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) -1, 97, intArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 896, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray20 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray25 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray30 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray41 = new int[][] { intArray20, intArray25, intArray30, intArray35, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (short) 1, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray50 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[][] intArray82 = new int[][] { intArray72, intArray75, intArray78, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, 0, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, (int) (short) 1, intArray82);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (short) 1, 0, intArray82);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (short) 0, (int) (short) 0, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 0, 896, intArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 896 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-3) + "'", int86 == (-3));
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, (int) (short) 0, (int) (short) 0);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, 0, (int) (short) 1);
        int[] intArray29 = new int[] { (short) -1, 10, (byte) 100 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray40 = new int[] { (short) -1, 10, (byte) 100 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray64 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray69 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray70 = new int[][] { intArray49, intArray54, intArray59, intArray64, intArray69 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (short) 1, 1, intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, (int) (byte) 0, intArray70);
        int[] intArray80 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray86 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray87 = new int[][] { intArray80, intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, (int) (byte) 0, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, 0, (int) (short) 1, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 52, 4389, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-5) + "'", int20 == (-5));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-4) + "'", int23 == (-4));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 30 + "'", int71 == 30);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 97 + "'", int88 == 97);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-5) + "'", int89 == (-5));
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) 'a', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray21 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[] intArray43 = new int[] { (byte) 100, 319 };
        int[][] intArray44 = new int[][] { intArray34, intArray37, intArray40, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (byte) 0, 0, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, (int) (short) 1, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 4389, 2003, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4389 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[][] intArray76 = new int[][] { intArray66, intArray69, intArray72, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (byte) 0, 0, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, (int) (short) 1, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 710, 4389, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray17, 0, (int) (short) 0);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray35 = new int[] { (short) -1, 10, (byte) 100 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray55 = new int[][] { intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (byte) 0, 0, intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, 0, 4, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 28, 12390, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 28 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-3) + "'", int27 == (-3));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-3) + "'", int57 == (-3));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 52, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) ' ', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) -1, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-1), (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray34 = new int[] { '4' };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray44 = new int[][] { intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 0, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 1, (int) (byte) 1, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 100, 493, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[52]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 30 + "'", int46 == 30);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray22 = new int[] { '4' };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray31 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray32 = new int[][] { intArray31 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, 0, 1, intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (byte) 0, 0, intArray32);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-1), 2191, intArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[52]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) ' ', 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { (short) -1, 10, (byte) 100 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray77 = new int[] { '4' };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray77);
        int[] intArray86 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray87 = new int[][] { intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray77, 0, 1, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 1, (int) (byte) 1, intArray87);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (short) 0, 0, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, 30, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[52]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 10 + "'", int88 == 10);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 30 + "'", int89 == 30);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 2000 + "'", int90 == 2000);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, (int) (byte) 0, 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray33 = new int[] { (short) -1, 10, (byte) 100 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray44 = new int[] { (short) -1, 10, (byte) 100 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray58 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray63 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray68 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray73 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray74 = new int[][] { intArray53, intArray58, intArray63, intArray68, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (short) 1, 1, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 1, (int) (byte) 0, intArray74);
        int[] intArray84 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray90 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray91 = new int[][] { intArray84, intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 1, (int) (byte) 0, intArray91);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) -1, (int) (byte) -1, intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 30 + "'", int75 == 30);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 97 + "'", int92 == 97);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-5) + "'", int93 == (-5));
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, (int) (byte) 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, (int) (byte) 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (short) 0, 0, intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 1, 0, intArray61);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass69 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray21 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray28 = new int[] { (short) -1, 10, (byte) 100 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray53 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray54 = new int[][] { intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, 0, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (byte) 1, (int) (byte) 1, intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (short) 0, 0, intArray54);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) '4', (int) (byte) -1, intArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray50 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray57 = new int[] { (short) -1, 10, (byte) 100 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray82 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray83 = new int[][] { intArray82 };
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, 0, 1, intArray83);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (byte) 1, (int) (byte) 1, intArray83);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (short) 0, 0, intArray83);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 100, 2000, intArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 10 + "'", int84 == 10);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 30 + "'", int85 == 30);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2000 + "'", int86 == 2000);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray26 = new int[][] { intArray25 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 1, intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 1, intArray26);
        java.lang.Class<?> wildcardClass29 = intArray26.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, 0, (int) (short) 0);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, 0, 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, 0, 1);
        int[] intArray32 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[][] intArray55 = new int[][] { intArray45, intArray48, intArray51, intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (byte) 0, 0, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 0, (int) (short) 1, intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 0, 0, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 97, 100, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-3) + "'", int22 == (-3));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 28 + "'", int25 == 28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2000 + "'", int33 == 2000);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-3) + "'", int58 == (-3));
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray26 = new int[][] { intArray25 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 1, intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 1, intArray26);
        java.lang.Class<?> wildcardClass29 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 10, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[][] intArray31 = new int[][] {};
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 319, (int) (short) 100, intArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 319 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray31);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) '4', 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 97, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray37 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray53 = new int[] { '4' };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[][] intArray69 = new int[][] { intArray59, intArray62, intArray65, intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, 0, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (byte) 0, (int) (short) 1, intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, 0, intArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 10, 1, intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[52]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (byte) 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-1), (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass87 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 319 + "'", int85 == 319);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 319 + "'", int86 == 319);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray29 = new int[] { (short) -1, 10, (byte) 100 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray58 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray59 = new int[][] { intArray38, intArray43, intArray48, intArray53, intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 1, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, (int) (byte) 0, intArray59);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 493, 2000, intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 493 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 30 + "'", int60 == 30);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 100, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray34 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray47 = new int[] { (byte) 100, 319 };
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[][] intArray57 = new int[][] { intArray47, intArray50, intArray53, intArray56 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (byte) 0, 0, intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (byte) 0, (int) (short) 1, intArray57);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 1, 0, intArray57);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) -1, (int) (short) -1, intArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray30 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray31 = new int[][] { intArray30 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, 0, 1, intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray31);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-3), 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 1, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray40 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray47 = new int[] { '4' };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[][] intArray63 = new int[][] { intArray53, intArray56, intArray59, intArray62 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (byte) 0, 0, intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (byte) 0, (int) (short) 1, intArray63);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, 1, 0, intArray63);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 1, (-5), intArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[52]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-4), 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        int[] intArray66 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray73 = new int[][] { intArray66, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass78 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 97 + "'", int74 == 97);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 319, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray37 = new int[] { '4' };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray37, (int) (byte) 0, 0);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray37, 0, (int) (byte) 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray65 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray72 = new int[] { '4' };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray72);
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[][] intArray88 = new int[][] { intArray78, intArray81, intArray84, intArray87 };
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray72, (int) (byte) 0, 0, intArray88);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, (int) (byte) 0, (int) (short) 1, intArray88);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (short) 1, 0, intArray88);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 0, 0, intArray88);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 319, (int) ' ', intArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 319 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[52]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[52]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 52 + "'", int89 == 52);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 319 + "'", int90 == 319);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray37 = new int[][] { intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 1, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 1, (int) (byte) 1, intArray37);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 30, 896, intArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 30 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 4 + "'", int39 == 4);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[][] intArray85 = new int[][] { intArray75, intArray78, intArray81, intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, 0, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, (int) (short) 1, intArray85);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 1, 0, intArray85);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 0, (int) (short) 0, intArray85);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) (short) 0, intArray85);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 28, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-3) + "'", int89 == (-3));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { '4' };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray64 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray65 = new int[][] { intArray64 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, 0, 1, intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 1, (int) (byte) 1, intArray65);
        // The following exception was thrown during execution in test generation
        try {
            int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4, (int) (short) 0, intArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[52]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass17 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass43 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass28 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) -1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        int[] intArray0 = null;
        int[] intArray4 = new int[] { '4' };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 0, 0);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray29 = new int[] { (short) -1, 10, (byte) 100 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray58 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray59 = new int[][] { intArray38, intArray43, intArray48, intArray53, intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 1, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, (int) (byte) 0, intArray59);
        int[] intArray69 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray75 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray76 = new int[][] { intArray69, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, (int) (byte) 0, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 0, 1, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 52, 2000, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 30 + "'", int60 == 30);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 97 + "'", int77 == 97);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-5) + "'", int78 == (-5));
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray54 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray60 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-4), (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-4), 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, (int) (byte) 0, 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, 0, (int) (byte) 0);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray39 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray48 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray55 = new int[] { '4' };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[][] intArray71 = new int[][] { intArray61, intArray64, intArray67, intArray70 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (byte) 0, 0, intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (byte) 0, (int) (short) 1, intArray71);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (short) 1, 0, intArray71);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 0, 0, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) -1, (-5), intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[52]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray52);
        java.lang.Class<?> wildcardClass56 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 496 + "'", int14 == 496);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray43 = new int[] { '4' };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, (int) (byte) 0, 0);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, (int) (byte) 0);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray65 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray66 = new int[][] { intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, 0, 1, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 0, 0, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 496, 52, intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[52]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray42, (int) (byte) 0, 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray42, 0, (int) (byte) 0);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray61 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray70 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray77 = new int[] { '4' };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray77);
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[] intArray89 = new int[] { (byte) 100, 319 };
        int[] intArray92 = new int[] { (byte) 100, 319 };
        int[][] intArray93 = new int[][] { intArray83, intArray86, intArray89, intArray92 };
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray77, (int) (byte) 0, 0, intArray93);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, (int) (byte) 0, (int) (short) 1, intArray93);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (short) 1, 0, intArray93);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 0, 0, intArray93);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (byte) 0, intArray93);
        int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2000 + "'", int73 == 2000);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[52]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 319 + "'", int95 == 319);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 100 + "'", int96 == 100);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 52 + "'", int97 == 52);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-3) + "'", int98 == (-3));
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 319 + "'", int99 == 319);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray43 = new int[] { '4' };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray53 = new int[][] { intArray52 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, 0, 1, intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (byte) 1, (int) (byte) 1, intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 0, 0, intArray53);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, (int) ' ', intArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[52]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray48 = new int[] { (short) -1, 10, (byte) 100 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray48, 0, (int) (short) 0);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray66 = new int[] { (short) -1, 10, (byte) 100 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray76 = new int[] { '4' };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray76);
        int[] intArray85 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray86 = new int[][] { intArray85 };
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray76, 0, 1, intArray86);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, 0, intArray86);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, 0, 4, intArray86);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '4', (int) '#', intArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-3) + "'", int58 == (-3));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[52]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 10 + "'", int87 == 10);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-3) + "'", int88 == (-3));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 896, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, (int) (short) 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, 0);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, 1);
        int[] intArray47 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray54 = new int[] { '4' };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[][] intArray70 = new int[][] { intArray60, intArray63, intArray66, intArray69 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, 0, intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (byte) 0, (int) (short) 1, intArray70);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, 0, 0, intArray70);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (-5), intArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 28 + "'", int40 == 28);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[52]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-3) + "'", int73 == (-3));
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 97, 500, intArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, (int) (byte) 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, (int) (byte) 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (short) 0, 0, intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 1, 0, intArray61);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 2130, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray22 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray31 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray38 = new int[] { '4' };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray44 = new int[] { (byte) 100, 319 };
        int[] intArray47 = new int[] { (byte) 100, 319 };
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[][] intArray54 = new int[][] { intArray44, intArray47, intArray50, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, 0, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (byte) 0, (int) (short) 1, intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 1, 0, intArray54);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 10, (-3), intArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2000 + "'", int33 == 2000);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[52]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) '#', 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray24 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray46 = new int[] { (byte) 100, 319 };
        int[] intArray49 = new int[] { (byte) 100, 319 };
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[][] intArray56 = new int[][] { intArray46, intArray49, intArray52, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (byte) 0, 0, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (byte) 0, (int) (short) 1, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 0, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 2130, 0, intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2130 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-3), (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, 0, (int) (short) 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, 0, 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, 0, 1);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray53 = new int[] { '4' };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[][] intArray69 = new int[][] { intArray59, intArray62, intArray65, intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, 0, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (byte) 0, (int) (short) 1, intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, 0, 0, intArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 100, (-4), intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 28 + "'", int39 == 28);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[52]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-3) + "'", int72 == (-3));
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, 0, (int) (short) 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray33 = new int[] { '4' };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray42 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray43 = new int[][] { intArray42 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, 0, 1, intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (short) 1, intArray43);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 2000, (-4), intArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2000 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 896 + "'", int9 == 896);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[52]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray28 = new int[] { (short) -1, 10, (byte) 100 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray58 = new int[][] { intArray37, intArray42, intArray47, intArray52, intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 1, 1, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, (int) (byte) 0, intArray58);
        int[] intArray68 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray74 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray75 = new int[][] { intArray68, intArray74 };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, (int) (byte) 0, intArray75);
        // The following exception was thrown during execution in test generation
        try {
            int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 100, (int) '4', intArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 30 + "'", int59 == 30);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 97 + "'", int76 == 97);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, (int) (byte) 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, (int) (byte) 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (short) 0, 0, intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 1, 0, intArray61);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass68 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 10, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[][] intArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 97, (int) (short) 0, intArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) 'a', 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 2003, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray30 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray46 = new int[][] { intArray25, intArray30, intArray35, intArray40, intArray45 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 1, 1, intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray55 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray64 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray71 = new int[] { '4' };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[][] intArray87 = new int[][] { intArray77, intArray80, intArray83, intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, (int) (byte) 0, 0, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, (int) (short) 1, intArray87);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (short) 1, 0, intArray87);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, (int) (short) 0, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 10, (int) 'a', intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 30 + "'", int47 == 30);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[52]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 52 + "'", int88 == 52);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 319 + "'", int89 == 319);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 100 + "'", int90 == 100);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-3) + "'", int91 == (-3));
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray50 = new int[][] { intArray29, intArray34, intArray39, intArray44, intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 1, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray68 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray75 = new int[] { '4' };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[] intArray90 = new int[] { (byte) 100, 319 };
        int[][] intArray91 = new int[][] { intArray81, intArray84, intArray87, intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray75, (int) (byte) 0, 0, intArray91);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, (int) (byte) 0, (int) (short) 1, intArray91);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (short) 1, 0, intArray91);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 0, (int) (short) 0, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) '#', 493, intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[52]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 319 + "'", int93 == 319);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-3) + "'", int95 == (-3));
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 28, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 12390 + "'", int7 == 12390);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 12390 + "'", int8 == 12390);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray50 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[][] intArray82 = new int[][] { intArray72, intArray75, intArray78, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, 0, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, (int) (short) 1, intArray82);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (short) 1, 0, intArray82);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (byte) 1, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) -1, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 319 + "'", int86 == 319);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray19 = new int[] { (byte) 100, 319 };
        int[] intArray22 = new int[] { (byte) 100, 319 };
        int[] intArray25 = new int[] { (byte) 100, 319 };
        int[] intArray28 = new int[] { (byte) 100, 319 };
        int[][] intArray29 = new int[][] { intArray19, intArray22, intArray25, intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, 0, intArray29);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 493, 12390, intArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 493 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (-1), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray32, (int) (byte) 0, 0);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray32, 0, (int) (byte) 0);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray55 = new int[][] { intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 0, 0, intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (short) 1, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, 2000, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2000 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray48 = new int[][] { intArray27, intArray32, intArray37, intArray42, intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, 1, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[][] intArray89 = new int[][] { intArray79, intArray82, intArray85, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, (int) (byte) 0, 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, (int) (short) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (short) 1, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, (int) (short) 0, intArray89);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, 1, intArray89);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass96 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 319 + "'", int91 == 319);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-3) + "'", int93 == (-3));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 710 + "'", int95 == 710);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[][] intArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-1), (int) (byte) -1, intArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-5), (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) '#', 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        java.lang.Class<?> wildcardClass31 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass11 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, (int) (byte) 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, (int) (byte) 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (short) 0, 0, intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 1, 0, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-5), 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, 0, (int) (short) 0);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray34 = new int[] { '4' };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray44 = new int[][] { intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 0, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (byte) 0, 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 0, 4, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 0, (int) (short) 10, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[52]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-3) + "'", int46 == (-3));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray48 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray49 = new int[][] { intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, 0, 1, intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (byte) 1, (int) (byte) 1, intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 97, 30, intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2000 + "'", int17 == 2000);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, (int) (byte) 0, 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, 0, (int) (byte) 0);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray42 = new int[][] { intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, 0, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 0, 0, intArray42);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) '#', intArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass29 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray43 = new int[] { '4' };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray53 = new int[][] { intArray52 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, 0, 1, intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (byte) 1, (int) (byte) 1, intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 0, 0, intArray53);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-5), 2003, intArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[52]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[][] intArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 30, 0, intArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, (int) (short) 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, 0);
        int[] intArray34 = new int[] { '4' };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray44 = new int[][] { intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 0, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 0, (int) (short) 1, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-5), 1, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-3) + "'", int24 == (-3));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[52]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-1), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 12390 + "'", int7 == 12390);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 12390 + "'", int8 == 12390);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray17 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray36 = new int[][] { intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, 0, 1, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, 1, (int) (byte) 1, intArray36);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2003, (int) (short) 1, intArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2003 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2000 + "'", int18 == 2000);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 4 + "'", int38 == 4);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 0, 1);
        java.lang.Class<?> wildcardClass15 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 496 + "'", int14 == 496);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 100, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        java.lang.Class<?> wildcardClass45 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 28 + "'", int44 == 28);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray27 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray34 = new int[] { '4' };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[] intArray43 = new int[] { (byte) 100, 319 };
        int[] intArray46 = new int[] { (byte) 100, 319 };
        int[] intArray49 = new int[] { (byte) 100, 319 };
        int[][] intArray50 = new int[][] { intArray40, intArray43, intArray46, intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (byte) 0, 0, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (byte) 0, (int) (short) 1, intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, 1, 0, intArray50);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 319, (int) 'a', intArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 319 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[52]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 100, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 1, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-3), 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-4), 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int[][] intArray11 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 319, 500, intArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray52 = new int[] { (short) -1, 10, (byte) 100 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray61 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray66 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray71 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray76 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray81 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray82 = new int[][] { intArray61, intArray66, intArray71, intArray76, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (short) 1, 1, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 896, 4, intArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 896 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 30 + "'", int83 == 30);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass57 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-3), 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray36 = new int[] { (byte) 100, 319 };
        int[] intArray39 = new int[] { (byte) 100, 319 };
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[][] intArray46 = new int[][] { intArray36, intArray39, intArray42, intArray45 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 0, 0, intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (byte) 0, (int) (short) 1, intArray46);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 28, 10, intArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 28 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 493, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray54 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray60 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray71 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray78 = new int[] { '4' };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray78);
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[] intArray90 = new int[] { (byte) 100, 319 };
        int[] intArray93 = new int[] { (byte) 100, 319 };
        int[][] intArray94 = new int[][] { intArray84, intArray87, intArray90, intArray93 };
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray78, (int) (byte) 0, 0, intArray94);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, (int) (byte) 0, (int) (short) 1, intArray94);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4389, (int) ' ', intArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4389 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2000 + "'", int73 == 2000);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2000 + "'", int74 == 2000);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[52]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 52 + "'", int95 == 52);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 319 + "'", int96 == 319);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[][] intArray55 = new int[][] { intArray45, intArray48, intArray51, intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (byte) 0, 0, intArray55);
        int[] intArray62 = new int[] { (short) -1, 10, (byte) 100 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray71 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray76 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray81 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray86 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray91 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray92 = new int[][] { intArray71, intArray76, intArray81, intArray86, intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (short) 1, 1, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (short) 0, 0, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 319, 100, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 319 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 30 + "'", int93 == 30);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 0, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray77);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, 0, intArray77);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 0, intArray77);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass86 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 52 + "'", int84 == 52);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 52 + "'", int85 == 52);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[][] intArray85 = new int[][] { intArray75, intArray78, intArray81, intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, 0, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, (int) (short) 1, intArray85);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 1, 0, intArray85);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 0, (int) (short) 0, intArray85);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) (short) 0, intArray85);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 1, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-3) + "'", int89 == (-3));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray40 = new int[][] { intArray39 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 0, 1, intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2191, (int) (byte) -1, intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2191 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-3) + "'", int42 == (-3));
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { 52, '4', '#' };
        int[] intArray20 = new int[] { 52, '4', '#' };
        int[] intArray24 = new int[] { 52, '4', '#' };
        int[] intArray28 = new int[] { 52, '4', '#' };
        int[] intArray32 = new int[] { 52, '4', '#' };
        int[] intArray36 = new int[] { 52, '4', '#' };
        int[][] intArray37 = new int[][] { intArray16, intArray20, intArray24, intArray28, intArray32, intArray36 };
        // The following exception was thrown during execution in test generation
        try {
            int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) -1, (int) ' ', intArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52, 52, 35]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52, 52, 35]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[52, 52, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52, 52, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52, 52, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52, 52, 35]");
        org.junit.Assert.assertNotNull(intArray37);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass48 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, 0, (int) (short) 0);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, 0, 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, 0, 1);
        int[] intArray32 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[][] intArray55 = new int[][] { intArray45, intArray48, intArray51, intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (byte) 0, 0, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 0, (int) (short) 1, intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 0, 0, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 710, (int) ' ', intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-3) + "'", int22 == (-3));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 28 + "'", int25 == 28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2000 + "'", int33 == 2000);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-3) + "'", int58 == (-3));
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (byte) 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[][] intArray32 = new int[][] {};
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, (int) (short) 0, intArray32);
        int[] intArray39 = new int[] { (short) -1, 10, (byte) 100 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray39, 0, (int) (short) 0);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray39, 0, 0);
        int[] intArray59 = new int[] { '4' };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray68 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray69 = new int[][] { intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, 0, 1, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (byte) 0, (int) (short) 1, intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, (int) (short) 1, intArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) ' ', (-4), intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-3) + "'", int33 == (-3));
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-3) + "'", int49 == (-3));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[52]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 30 + "'", int72 == 30);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, 0, (int) (short) 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray38 = new int[] { (short) -1, 10, (byte) 100 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray48 = new int[] { '4' };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray58 = new int[][] { intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, 0, 1, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, 0, intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, 0, 4, intArray58);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 1, (int) '4', intArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[52]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-3) + "'", int60 == (-3));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 2000, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        int[] intArray5 = new int[] { 30, (-4), (byte) 100, 12390, (byte) 10 };
        int[] intArray9 = new int[] { '4' };
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int[] intArray15 = new int[] { (byte) 100, 319 };
        int[] intArray18 = new int[] { (byte) 100, 319 };
        int[] intArray21 = new int[] { (byte) 100, 319 };
        int[] intArray24 = new int[] { (byte) 100, 319 };
        int[][] intArray25 = new int[][] { intArray15, intArray18, intArray21, intArray24 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray9, (int) (byte) 0, 0, intArray25);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 1, 500, intArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 500 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[30, -4, 100, 12390, 10]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[52]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, (int) (byte) 0, 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, 0, (int) (byte) 0);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray39 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray48 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray55 = new int[] { '4' };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[][] intArray71 = new int[][] { intArray61, intArray64, intArray67, intArray70 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (byte) 0, 0, intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (byte) 0, (int) (short) 1, intArray71);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (short) 1, 0, intArray71);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 0, 0, intArray71);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 1, 0, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 710, 0, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[52]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray15 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray24 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[] intArray43 = new int[] { (byte) 100, 319 };
        int[] intArray46 = new int[] { (byte) 100, 319 };
        int[][] intArray47 = new int[][] { intArray37, intArray40, intArray43, intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (byte) 0, 0, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (byte) 0, (int) (short) 1, intArray47);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, 0, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 30, 2191, intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 30 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2000 + "'", int17 == 2000);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray8 = new int[] { '4' };
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray8, (int) (byte) 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray33 = new int[] { (short) -1, 10, (byte) 100 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray63 = new int[][] { intArray42, intArray47, intArray52, intArray57, intArray62 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 1, 1, intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 1, (int) (byte) 0, intArray63);
        int[] intArray73 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray79 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray80 = new int[][] { intArray73, intArray79 };
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 1, (int) (byte) 0, intArray80);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray8, 0, 1, intArray80);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 496, intArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[52]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 97 + "'", int81 == 97);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-5) + "'", int82 == (-5));
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray13 = new int[][] {};
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 493, 28, intArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 493 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertNotNull(intArray13);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray29 = new int[][] { intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, (int) (byte) 1, intArray29);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, (int) (byte) 0, 0);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, 0, (int) (byte) 0);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray63 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray70 = new int[] { '4' };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[][] intArray86 = new int[][] { intArray76, intArray79, intArray82, intArray85 };
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, (int) (byte) 0, 0, intArray86);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, (int) (short) 1, intArray86);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (short) 1, 0, intArray86);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 0, 0, intArray86);
        // The following exception was thrown during execution in test generation
        try {
            int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 896, intArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 896 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[52]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 52 + "'", int87 == 52);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 319 + "'", int88 == 319);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 100 + "'", int89 == 100);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray52);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray60, (int) (byte) 0, 0);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray60, 0, (int) (byte) 0);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray82 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray83 = new int[][] { intArray82 };
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, 0, 1, intArray83);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (short) 0, 0, intArray83);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-1), 319, intArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 10 + "'", int84 == 10);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 52 + "'", int85 == 52);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-4), 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 0, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 100, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, (int) (short) 0, (int) (short) 0);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, (int) (short) 1);
        int[] intArray35 = new int[] { (short) -1, 10, (byte) 100 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray46 = new int[] { (short) -1, 10, (byte) 100 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray60 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray65 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray70 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray75 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray76 = new int[][] { intArray55, intArray60, intArray65, intArray70, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (short) 1, 1, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 1, (int) (byte) 0, intArray76);
        int[] intArray86 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray92 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray93 = new int[][] { intArray86, intArray92 };
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 1, (int) (byte) 0, intArray93);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, 0, (int) (short) 1, intArray93);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 896, 496, intArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 896 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 710 + "'", int22 == 710);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 710 + "'", int23 == 710);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-5) + "'", int26 == (-5));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-4) + "'", int29 == (-4));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 30 + "'", int77 == 30);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 97 + "'", int94 == 97);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-5) + "'", int95 == (-5));
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray17, (int) (byte) 0, 0);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray17, 0, (int) (byte) 0);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray40 = new int[][] { intArray39 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 0, 1, intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 0, 0, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4, (-1), intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-3), 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray24 = new int[] { (byte) 100, 319 };
        int[] intArray27 = new int[] { (byte) 100, 319 };
        int[] intArray30 = new int[] { (byte) 100, 319 };
        int[] intArray33 = new int[] { (byte) 100, 319 };
        int[][] intArray34 = new int[][] { intArray24, intArray27, intArray30, intArray33 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, 0, intArray34);
        int[] intArray41 = new int[] { (short) -1, 10, (byte) 100 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray60 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray65 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray70 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray71 = new int[][] { intArray50, intArray55, intArray60, intArray65, intArray70 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (short) 1, 1, intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, 0, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 500, (int) (byte) 10, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 500 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 30 + "'", int72 == 30);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 493, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray22 = new int[] { (short) 1, 710, 30 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray37 = new int[] { '4' };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray37, (int) (byte) 0, 0);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray37, 0, (int) (byte) 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray65 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray72 = new int[] { '4' };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray72);
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[][] intArray88 = new int[][] { intArray78, intArray81, intArray84, intArray87 };
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray72, (int) (byte) 0, 0, intArray88);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, (int) (byte) 0, (int) (short) 1, intArray88);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (short) 1, 0, intArray88);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 0, 0, intArray88);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (byte) 1, 0, intArray88);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, 1, (int) (byte) 1, intArray88);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 1, 896, intArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 896 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2191 + "'", int23 == 2191);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2191 + "'", int24 == 2191);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[52]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[52]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 52 + "'", int89 == 52);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 319 + "'", int90 == 319);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 2130 + "'", int94 == 2130);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray54 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray60 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray70 = new int[] { (short) -1, 10, (byte) 100 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray86 = new int[] { '4' };
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray86);
        int[] intArray95 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray96 = new int[][] { intArray95 };
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray86, 0, 1, intArray96);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, (int) (byte) 1, (int) (byte) 1, intArray96);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 100, 710, intArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 319 + "'", int75 == 319);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 319 + "'", int77 == 319);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[52]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 52 + "'", int87 == 52);
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 10 + "'", int97 == 10);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 30 + "'", int98 == 30);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 500, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        int[] intArray0 = null;
        int[] intArray7 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray7);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray7);
        int[] intArray16 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[] intArray38 = new int[] { (byte) 100, 319 };
        int[][] intArray39 = new int[][] { intArray29, intArray32, intArray35, intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (byte) 0, 0, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (byte) 0, (int) (short) 1, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray7, (int) (short) 1, 0, intArray39);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 97, 496, intArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2000 + "'", int17 == 2000);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2000 + "'", int18 == 2000);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 2003, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray36 = new int[][] { intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, 0, 1, intArray36);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2003, 2191, intArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2003 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        int[] intArray0 = null;
        int[] intArray4 = new int[] { '4' };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray14 = new int[][] { intArray13 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 0, 1, intArray14);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 500, 4389, intArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray38 = new int[] { (byte) 100, 319 };
        int[] intArray41 = new int[] { (byte) 100, 319 };
        int[] intArray44 = new int[] { (byte) 100, 319 };
        int[] intArray47 = new int[] { (byte) 100, 319 };
        int[][] intArray48 = new int[][] { intArray38, intArray41, intArray44, intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 0, 0, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[][] intArray89 = new int[][] { intArray79, intArray82, intArray85, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, (int) (byte) 0, 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, (int) (short) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (short) 1, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, (int) (short) 0, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 97, (int) (byte) 100, intArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 319 + "'", int91 == 319);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray33 = new int[] { (short) -1, 10, (byte) 100 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray63 = new int[][] { intArray42, intArray47, intArray52, intArray57, intArray62 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 1, 1, intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 1, (int) (byte) 0, intArray63);
        int[] intArray73 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray79 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray80 = new int[][] { intArray73, intArray79 };
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 1, (int) (byte) 0, intArray80);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) -1, 30, intArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 97 + "'", int81 == 97);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) -1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (short) 0);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray34 = new int[] { '4' };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray44 = new int[][] { intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 0, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 1, (int) (short) 1, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-1), 496, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-3) + "'", int26 == (-3));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[52]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 30 + "'", int46 == 30);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 1, intArray60);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray68 = new int[] { '4' };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[][] intArray84 = new int[][] { intArray74, intArray77, intArray80, intArray83 };
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, (int) (byte) 0, 0, intArray84);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 896, (int) '#', intArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 896 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[52]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 52 + "'", int85 == 52);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray44 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray45 = new int[][] { intArray44 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, 0, 1, intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, 1, (int) (byte) 1, intArray45);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 10, (int) (short) 100, intArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, 0, (int) (short) 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, 0, 0);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray44 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray45 = new int[][] { intArray44 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, 0, 1, intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (byte) 0, (int) (short) 1, intArray45);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 2000, (-1), intArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2000 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 52, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[][] intArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 710, 97, intArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray15 = new int[] { '4' };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray21 = new int[] { (byte) 100, 319 };
        int[] intArray24 = new int[] { (byte) 100, 319 };
        int[] intArray27 = new int[] { (byte) 100, 319 };
        int[] intArray30 = new int[] { (byte) 100, 319 };
        int[][] intArray31 = new int[][] { intArray21, intArray24, intArray27, intArray30 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (byte) 0, 0, intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray40 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[][] intArray72 = new int[][] { intArray62, intArray65, intArray68, intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, 0, intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, (int) (byte) 0, (int) (short) 1, intArray72);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (short) 1, 0, intArray72);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (short) 0, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 10, 4389, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[52]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 52, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (short) 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, 0);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray52);
        int[] intArray61 = new int[] { (short) -1, 10, (byte) 100 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray70 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray75 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray80 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray85 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray90 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray91 = new int[][] { intArray70, intArray75, intArray80, intArray85, intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (short) 1, 1, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) -1, 2000, intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 30 + "'", int92 == 30);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray31 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray47 = new int[][] { intArray26, intArray31, intArray36, intArray41, intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, 1, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 496, 28, intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass24 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 2003, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, (int) (byte) 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, (int) (byte) 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (short) 0, 0, intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 1, 0, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 10, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray13 = new int[] { (short) 1, 710, 30 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray28, (int) (byte) 0, 0);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray28, 0, (int) (byte) 0);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray47 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[][] intArray79 = new int[][] { intArray69, intArray72, intArray75, intArray78 };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, 0, intArray79);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, (int) (short) 1, intArray79);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (short) 1, 0, intArray79);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 0, 0, intArray79);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (byte) 1, 0, intArray79);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 1, (int) (byte) 1, intArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-1), (-4), intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2191 + "'", int14 == 2191);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2191 + "'", int15 == 2191);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2130 + "'", int85 == 2130);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, 0, (int) (short) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, 0, 0);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray55 = new int[][] { intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, (int) (short) 1, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) ' ', 100, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-3) + "'", int35 == (-3));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-3) + "'", int41 == (-3));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray34 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray47 = new int[] { (byte) 100, 319 };
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[][] intArray57 = new int[][] { intArray47, intArray50, intArray53, intArray56 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (byte) 0, 0, intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (byte) 0, (int) (short) 1, intArray57);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 1, 0, intArray57);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 100, 0, intArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray11, 0, (int) (short) 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray11, 0, 0);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray11, 0, 1);
        int[] intArray37 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (byte) 0, (int) (short) 1, intArray60);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, 0, 0, intArray60);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 12390, (int) (byte) 10, intArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 12390 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2191 + "'", int5 == 2191);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-3) + "'", int21 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-3) + "'", int27 == (-3));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 28 + "'", int30 == 28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-3) + "'", int63 == (-3));
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray45 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray45, 0, 0);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray65 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray66 = new int[][] { intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, 0, 1, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 1, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 10, (-5), intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 500 + "'", int48 == 500);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 493 + "'", int49 == 493);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 493 + "'", int50 == 493);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 493 + "'", int51 == 493);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 493 + "'", int52 == 493);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray22 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray29 = new int[] { (short) -1, 10, (byte) 100 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray55 = new int[][] { intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 1, (int) (byte) 1, intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 0, 0, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 10, (int) 'a', intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 2003, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 319 + "'", int85 == 319);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 319 + "'", int86 == 319);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 1, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 97, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { '4' };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray71 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray72 = new int[][] { intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, 0, 1, intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, 1, (int) (byte) 1, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 496, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[52]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 4 + "'", int74 == 4);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, 0, (int) (byte) 0);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray44 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[][] intArray76 = new int[][] { intArray66, intArray69, intArray72, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (byte) 0, 0, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, (int) (short) 1, intArray76);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (short) 1, 0, intArray76);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 0, 0, intArray76);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (byte) 1, 0, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 809, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 809 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray50 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[][] intArray82 = new int[][] { intArray72, intArray75, intArray78, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, 0, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, (int) (short) 1, intArray82);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (short) 1, 0, intArray82);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (byte) 1, intArray82);
        java.lang.Class<?> wildcardClass87 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 319 + "'", int86 == 319);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray25 = new int[] { (byte) 100, 319 };
        int[] intArray28 = new int[] { (byte) 100, 319 };
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[][] intArray35 = new int[][] { intArray25, intArray28, intArray31, intArray34 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (byte) 0, 0, intArray35);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 4389, 28, intArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4389 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, 0, (int) (short) 0);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray42 = new int[] { (short) -1, 10, (byte) 100 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray52 = new int[] { '4' };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray61 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray62 = new int[][] { intArray61 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, 0, 1, intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 0, 0, intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, 0, 4, intArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 496, 97, intArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[52]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-3) + "'", int64 == (-3));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }
}

