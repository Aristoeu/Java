package WineProblem;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray49 = new int[] { '4' };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray58 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray59 = new int[][] { intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, 0, 1, intArray59);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) '4', intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[52]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        int[] intArray0 = null;
        int[] intArray8 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray8, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, 0, (int) (short) 0);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, 0, 0);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, 0, 1);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[][] intArray79 = new int[][] { intArray69, intArray72, intArray75, intArray78 };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, 0, intArray79);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, (int) (short) 1, intArray79);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 0, 0, intArray79);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray8, (int) (byte) 0, (int) (short) 0, intArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 2003, (int) (short) 10, intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 500 + "'", int11 == 500);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 493 + "'", int22 == 493);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 493 + "'", int23 == 493);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 493 + "'", int24 == 493);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-3) + "'", int40 == (-3));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-3) + "'", int46 == (-3));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 28 + "'", int49 == 28);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-3) + "'", int82 == (-3));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 500 + "'", int83 == 500);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { (short) -1, 10, (byte) 100 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[][] intArray56 = new int[][] {};
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, (int) (short) 0, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 710, (-1), intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-3) + "'", int57 == (-3));
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        int[] intArray5 = new int[] { 2191, 30, 710, (-4), 12390 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[2191, 30, 710, -4, 12390]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 66315 + "'", int6 == 66315);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, 0, (int) (short) 0);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray24 = new int[] { '4' };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray34 = new int[][] { intArray33 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, 0, 1, intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, (int) (short) 1, intArray34);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 0, 2003, intArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[52]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass30 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray24 = new int[] { (short) 10, 28 };
        int[] intArray27 = new int[] { (short) 10, 28 };
        int[][] intArray28 = new int[][] { intArray24, intArray27 };
        // The following exception was thrown during execution in test generation
        try {
            int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 2130, 500, intArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 28]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 28]");
        org.junit.Assert.assertNotNull(intArray28);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-3), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        int[] intArray0 = null;
        int[] intArray4 = new int[] { '4' };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 0, 0);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 0);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray27 = new int[][] { intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, 0, 1, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray27);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 100, (-5), intArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        int[] intArray0 = null;
        int[][] intArray3 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) (byte) 1, (int) ' ', intArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        int[] intArray0 = null;
        int[] intArray8 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray8, (int) (short) 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray33 = new int[] { (short) -1, 10, (byte) 100 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray49 = new int[] { '4' };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray58 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray59 = new int[][] { intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, 0, 1, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (byte) 1, (int) (byte) 1, intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray59);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray8, 0, 0, intArray59);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (-5), 66315, intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[52]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-5) + "'", int63 == (-5));
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray22 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray29 = new int[] { (short) -1, 10, (byte) 100 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray55 = new int[][] { intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 1, (int) (byte) 1, intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 0, 0, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 100, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass58 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '4', (int) '4', intArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (-5), (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray39 = new int[] { (short) -1, 10, (byte) 100 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray52 = new int[] { '4' };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray52, (int) (byte) 0, 0);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray52, 0, (int) (byte) 0);
        int[] intArray65 = new int[] { '4' };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray74 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray75 = new int[][] { intArray74 };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, 0, 1, intArray75);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (short) 0, 0, intArray75);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (short) 1, (int) (short) 1, intArray75);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 710, (int) (byte) 100, intArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[52]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[52]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 30 + "'", int78 == 30);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 4389, 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass21 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray19 = new int[] { (byte) 100, 319 };
        int[] intArray22 = new int[] { (byte) 100, 319 };
        int[] intArray25 = new int[] { (byte) 100, 319 };
        int[] intArray28 = new int[] { (byte) 100, 319 };
        int[][] intArray29 = new int[][] { intArray19, intArray22, intArray25, intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, 0, intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray47 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray54 = new int[] { '4' };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[][] intArray70 = new int[][] { intArray60, intArray63, intArray66, intArray69 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, 0, intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (byte) 0, (int) (short) 1, intArray70);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (short) 1, 0, intArray70);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 1, (int) (short) 0, intArray70);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 12564, (int) '4', intArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[52]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int[] intArray36 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray55 = new int[][] { intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 1, (int) (byte) 1, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 896, (int) (byte) 1, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 4 + "'", int57 == 4);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 1, intArray60);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, (int) (byte) 0, 0);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, (int) (byte) 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 0, 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 1, 0, intArray74);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (-4), 12564, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) -1, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray54 = new int[][] { intArray33, intArray38, intArray43, intArray48, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass59 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[][] intArray29 = new int[][] {};
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 0, (int) (short) 0, intArray29);
        int[] intArray36 = new int[] { (short) -1, 10, (byte) 100 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, (int) (short) 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, 0);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray65 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray66 = new int[][] { intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, 0, 1, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, (int) (short) 1, intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, (int) (short) 1, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, 319, intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-3) + "'", int46 == (-3));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-3) + "'", int52 == (-3));
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 30 + "'", int69 == 30);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-3), 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 710, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray15 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray20 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray25 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray30 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray36 = new int[][] { intArray15, intArray20, intArray25, intArray30, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, 1, intArray36);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) (byte) 100, 66315, intArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray22 = new int[] { '4' };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray31 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray32 = new int[][] { intArray31 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, 0, 1, intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (byte) 1, (int) (byte) 1, intArray32);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 100, (int) (short) 0, intArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[52]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray29 = new int[][] { intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, (int) (byte) 1, intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 10, 2003, intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray22 = new int[] { (byte) 100, 319 };
        int[] intArray25 = new int[] { (byte) 100, 319 };
        int[] intArray28 = new int[] { (byte) 100, 319 };
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[][] intArray32 = new int[][] { intArray22, intArray25, intArray28, intArray31 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (byte) 0, 0, intArray32);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '4', (int) (byte) 1, intArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, 0, (int) (short) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray53 = new int[] { '4' };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray63 = new int[][] { intArray62 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, 0, 1, intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (byte) 0, 0, intArray63);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, 0, 4, intArray63);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 1, 66315, intArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-3) + "'", int35 == (-3));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[52]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-3) + "'", int65 == (-3));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray73 = new int[][] { intArray52, intArray57, intArray62, intArray67, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 1, 1, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 0, 0, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 100, 2000, intArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 30 + "'", int74 == 30);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[][] intArray32 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 4, 0, intArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray27 = new int[][] { intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, 0, 1, intArray27);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 10, 10, intArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[][] intArray58 = new int[][] { intArray48, intArray51, intArray54, intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 0, 0, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (byte) 0, (int) (short) 1, intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 0, intArray58);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 1, (int) (short) 0, intArray58);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 0, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        int[] intArray70 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray77 = new int[][] { intArray70, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 10, 4, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 97 + "'", int78 == 97);
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray22 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray29 = new int[] { (short) -1, 10, (byte) 100 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray55 = new int[][] { intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 1, (int) (byte) 1, intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 0, 0, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) ' ', 1, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) -1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, (int) (short) 0);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, 0);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, 1);
        int[] intArray69 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray76 = new int[] { '4' };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray76);
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[] intArray91 = new int[] { (byte) 100, 319 };
        int[][] intArray92 = new int[][] { intArray82, intArray85, intArray88, intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray76, (int) (byte) 0, 0, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, (int) (short) 1, intArray92);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, 0, 0, intArray92);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, (int) (short) 0, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2130, 2003, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 500 + "'", int24 == 500);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 493 + "'", int25 == 493);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 493 + "'", int26 == 493);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 493 + "'", int27 == 493);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 493 + "'", int28 == 493);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 493 + "'", int29 == 493);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 493 + "'", int30 == 493);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 493 + "'", int31 == 493);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 493 + "'", int32 == 493);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 493 + "'", int33 == 493);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 493 + "'", int34 == 493);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 493 + "'", int35 == 493);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 493 + "'", int36 == 493);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 493 + "'", int37 == 493);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-3) + "'", int53 == (-3));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-3) + "'", int59 == (-3));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 28 + "'", int62 == 28);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[52]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-3) + "'", int95 == (-3));
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 500 + "'", int96 == 500);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 100, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass50 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray16 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray34 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray35 = new int[][] { intArray34 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, 0, 1, intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 1, (int) (byte) 1, intArray35);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (byte) -1, (int) (byte) -1, intArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 896 + "'", int9 == 896);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2000 + "'", int17 == 2000);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2000 + "'", int18 == 2000);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 4 + "'", int37 == 4);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass44 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass33 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray37 = new int[][] { intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 1, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 1, (int) (byte) 1, intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray50 = new int[] { 12390, 4292, 4389, (short) 1, 1, 4389 };
        int[] intArray57 = new int[] { 12390, 4292, 4389, (short) 1, 1, 4389 };
        int[] intArray64 = new int[] { 12390, 4292, 4389, (short) 1, 1, 4389 };
        int[] intArray71 = new int[] { 12390, 4292, 4389, (short) 1, 1, 4389 };
        int[] intArray78 = new int[] { 12390, 4292, 4389, (short) 1, 1, 4389 };
        int[][] intArray79 = new int[][] { intArray50, intArray57, intArray64, intArray71, intArray78 };
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 100, (-4), intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[12390, 4292, 4389, 1, 1, 4389]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[12390, 4292, 4389, 1, 1, 4389]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[12390, 4292, 4389, 1, 1, 4389]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[12390, 4292, 4389, 1, 1, 4389]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[12390, 4292, 4389, 1, 1, 4389]");
        org.junit.Assert.assertNotNull(intArray79);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray42, (int) (byte) 0, 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray42, 0, (int) (byte) 0);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray61 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray70 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray77 = new int[] { '4' };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray77);
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[] intArray89 = new int[] { (byte) 100, 319 };
        int[] intArray92 = new int[] { (byte) 100, 319 };
        int[][] intArray93 = new int[][] { intArray83, intArray86, intArray89, intArray92 };
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray77, (int) (byte) 0, 0, intArray93);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, (int) (byte) 0, (int) (short) 1, intArray93);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (short) 1, 0, intArray93);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 0, 0, intArray93);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) -1, (int) (short) 10, intArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2000 + "'", int73 == 2000);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[52]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 319 + "'", int95 == 319);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 100 + "'", int96 == 100);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 52 + "'", int97 == 52);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        int[] intArray4 = new int[] { '4', 809, 710, 2191 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass7 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 809, 710, 2191]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 12564 + "'", int5 == 12564);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12564 + "'", int6 == 12564);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray56 = new int[][] { intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 0, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 1, (int) (byte) 1, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 0, 0, intArray56);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 0, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 10, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-5) + "'", int60 == (-5));
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, (int) (short) 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 100, 66315, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        int[] intArray2 = new int[] { ' ', 2130 };
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray2);
        int[] intArray9 = new int[] { (short) -1, 10, (byte) 100 };
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int[] intArray18 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray39 = new int[][] { intArray18, intArray23, intArray28, intArray33, intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray9, (int) (short) 1, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int[] intArray48 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray64 = new int[] { '4' };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[][] intArray80 = new int[][] { intArray70, intArray73, intArray76, intArray79 };
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, 0, intArray80);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (byte) 0, (int) (short) 1, intArray80);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (short) 1, 0, intArray80);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray9, (int) (short) 0, (int) (short) 0, intArray80);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray2, 97, 52, intArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[32, 2130]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4292 + "'", int3 == 4292);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 30 + "'", int40 == 30);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[52]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-3) + "'", int84 == (-3));
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, 0, (int) (short) 0);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, 0, 0);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, 0, 1);
        int[] intArray50 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray57 = new int[] { '4' };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[][] intArray73 = new int[][] { intArray63, intArray66, intArray69, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (byte) 0, 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (byte) 0, (int) (short) 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, 0, 0, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (byte) 10, intArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-3) + "'", int40 == (-3));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 28 + "'", int43 == 28);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[52]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 319 + "'", int75 == 319);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-3) + "'", int76 == (-3));
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[] intArray38 = new int[] { (byte) 100, 319 };
        int[][] intArray39 = new int[][] { intArray29, intArray32, intArray35, intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (byte) 0, 0, intArray39);
        int[] intArray46 = new int[] { (short) -1, 10, (byte) 100 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray60 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray65 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray70 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray75 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray76 = new int[][] { intArray55, intArray60, intArray65, intArray70, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (short) 1, 1, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 0, 0, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 319, (int) (short) 10, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 30 + "'", int77 == 30);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 1, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray25 = new int[] { (byte) 100, 319 };
        int[] intArray28 = new int[] { (byte) 100, 319 };
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[][] intArray35 = new int[][] { intArray25, intArray28, intArray31, intArray34 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (byte) 0, 0, intArray35);
        int[] intArray42 = new int[] { (short) -1, 10, (byte) 100 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray61 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray66 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray71 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray72 = new int[][] { intArray51, intArray56, intArray61, intArray66, intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 1, intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 0, 0, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 100, 4389, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 30 + "'", int73 == 30);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray49 = new int[][] { intArray28, intArray33, intArray38, intArray43, intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, 1, intArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 809, (-3), intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray46 = new int[][] { intArray45 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 0, 1, intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 1, (int) (byte) 1, intArray46);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 353164, (int) (byte) 100, intArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 2000, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, (int) (byte) 0, 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, 0, (int) (byte) 0);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray60 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray69 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray76 = new int[] { '4' };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray76);
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[] intArray91 = new int[] { (byte) 100, 319 };
        int[][] intArray92 = new int[][] { intArray82, intArray85, intArray88, intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray76, (int) (byte) 0, 0, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, (int) (short) 1, intArray92);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (short) 1, 0, intArray92);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (short) 0, 0, intArray92);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 1, 0, intArray92);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 0, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 710, 28, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[52]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 100 + "'", int95 == 100);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 52 + "'", int96 == 52);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 100 + "'", int97 == 100);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 52 + "'", int98 == 52);
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray34 = new int[] { (short) -1, 10, (byte) 100 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray58 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray63 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray64 = new int[][] { intArray43, intArray48, intArray53, intArray58, intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (short) 1, 1, intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 1, (int) (byte) 0, intArray64);
        int[] intArray74 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray80 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray81 = new int[][] { intArray74, intArray80 };
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 1, (int) (byte) 0, intArray81);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 500, 52, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 30 + "'", int65 == 30);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 97 + "'", int82 == 97);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int[] intArray54 = new int[] { (byte) 100, '#', 66315, 4292 };
        int[] intArray59 = new int[] { (byte) 100, '#', 66315, 4292 };
        int[] intArray64 = new int[] { (byte) 100, '#', 66315, 4292 };
        int[] intArray69 = new int[] { (byte) 100, '#', 66315, 4292 };
        int[][] intArray70 = new int[][] { intArray54, intArray59, intArray64, intArray69 };
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 66315, (int) (short) 100, intArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-3) + "'", int47 == (-3));
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 35, 66315, 4292]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 35, 66315, 4292]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 35, 66315, 4292]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 35, 66315, 4292]");
        org.junit.Assert.assertNotNull(intArray70);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[][] intArray26 = new int[][] {};
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 0, (int) (short) 0, intArray26);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 809, intArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-3) + "'", int27 == (-3));
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray22 = new int[] { (byte) 100, 319 };
        int[] intArray25 = new int[] { (byte) 100, 319 };
        int[] intArray28 = new int[] { (byte) 100, 319 };
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[][] intArray32 = new int[][] { intArray22, intArray25, intArray28, intArray31 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (byte) 0, 0, intArray32);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 493, 0, intArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray48 = new int[][] { intArray27, intArray32, intArray37, intArray42, intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, 1, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (short) 0, (int) (short) 0);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray59 = new int[] { '4' };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[][] intArray75 = new int[][] { intArray65, intArray68, intArray71, intArray74 };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, 0, intArray75);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 0, (int) (short) 1, intArray75);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 500, (int) (short) -1, intArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-3) + "'", int53 == (-3));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[52]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 319 + "'", int77 == 319);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray48 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray49 = new int[][] { intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, 0, 1, intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (byte) 1, (int) (byte) 1, intArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 100, (int) (short) 1, intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray20 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, 0, 0);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray42 = new int[] { (short) -1, 10, (byte) 100 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray42, 0, (int) (short) 0);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray42, 0, 0);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray42, 0, 1);
        int[] intArray68 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray75 = new int[] { '4' };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[] intArray90 = new int[] { (byte) 100, 319 };
        int[][] intArray91 = new int[][] { intArray81, intArray84, intArray87, intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray75, (int) (byte) 0, 0, intArray91);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, (int) (byte) 0, (int) (short) 1, intArray91);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 0, intArray91);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, (int) (short) 0, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 4, (int) (byte) 100, intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 500 + "'", int23 == 500);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 493 + "'", int24 == 493);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 493 + "'", int25 == 493);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 493 + "'", int26 == 493);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 493 + "'", int27 == 493);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 493 + "'", int28 == 493);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 493 + "'", int29 == 493);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 493 + "'", int30 == 493);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 493 + "'", int31 == 493);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 493 + "'", int32 == 493);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 493 + "'", int33 == 493);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 493 + "'", int34 == 493);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 493 + "'", int35 == 493);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 493 + "'", int36 == 493);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-3) + "'", int52 == (-3));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-3) + "'", int58 == (-3));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 28 + "'", int61 == 28);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[52]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 319 + "'", int93 == 319);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-3) + "'", int94 == (-3));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 500 + "'", int95 == 500);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) ' ', 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) -1, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        int[] intArray70 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray77 = new int[][] { intArray70, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass83 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 97 + "'", int78 == 97);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-5) + "'", int79 == (-5));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 710 + "'", int80 == 710);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 710 + "'", int81 == 710);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 710 + "'", int82 == 710);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass41 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 4389, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray54 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray60 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray69 = new int[] { (short) -1, 10, (byte) 100 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[][] intArray81 = new int[][] {};
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, (int) (short) 0, intArray81);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) 'a', 66315, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 319 + "'", int75 == 319);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 319 + "'", int77 == 319);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-3) + "'", int82 == (-3));
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        int[] intArray70 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray77 = new int[][] { intArray70, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass81 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 97 + "'", int78 == 97);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-5) + "'", int79 == (-5));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 710 + "'", int80 == 710);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 28, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray28, (int) (byte) 0, 0);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray28, 0, (int) (byte) 0);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray47 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[][] intArray79 = new int[][] { intArray69, intArray72, intArray75, intArray78 };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, 0, intArray79);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, (int) (short) 1, intArray79);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (short) 1, 0, intArray79);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 0, 0, intArray79);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (byte) 1, 0, intArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 100, (int) (short) 1, intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        int[] intArray2 = new int[] { ' ', 2130 };
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray2);
        java.lang.Class<?> wildcardClass4 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[32, 2130]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4292 + "'", int3 == 4292);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray15 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, (int) (short) 0, (int) (short) 0);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray33 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray40 = new int[] { (short) -1, 10, (byte) 100 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray65 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray66 = new int[][] { intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, 0, 1, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (byte) 1, (int) (byte) 1, intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 0, 0, intArray66);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, 0, 0, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 100, 896, intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 12390 + "'", int7 == 12390);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-5) + "'", int20 == (-5));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 710 + "'", int22 == 710);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 710 + "'", int23 == 710);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 710 + "'", int24 == 710);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 710 + "'", int25 == 710);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 710 + "'", int26 == 710);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-5) + "'", int70 == (-5));
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[][] intArray31 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 52, 319, intArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray13 = new int[] { (short) -1, 10, (byte) 100 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray48 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray49 = new int[][] { intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, 0, 1, intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 1, (int) (short) 1, intArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 896, (-3), intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 896 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 30 + "'", int52 == 30);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 319, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 28 + "'", int44 == 28);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray24 = new int[] { '4' };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, (int) (byte) 0, 0);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, 0, (int) (byte) 0);
        int[] intArray37 = new int[] { '4' };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray47 = new int[][] { intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, 0, 1, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 0, 0, intArray47);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (short) 1, (int) (short) 1, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) -1, 4, intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[52]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[52]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, (int) (byte) 0, 0);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, 0, (int) (byte) 0);
        int[] intArray48 = new int[] { '4' };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray58 = new int[][] { intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, 0, 1, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 0, 0, intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 1, (int) (short) 1, intArray58);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4, 319, intArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[52]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 10, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (short) 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) ' ', 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) -1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { '4' };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, (int) (byte) 0, 0);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (byte) 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray41 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray50 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray57 = new int[] { '4' };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[][] intArray73 = new int[][] { intArray63, intArray66, intArray69, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (byte) 0, 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (byte) 0, (int) (short) 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (short) 1, 0, intArray73);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 0, 0, intArray73);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 1, 0, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 493, 319, intArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 493 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[52]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[52]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 319 + "'", int75 == 319);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, 1);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass47 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 28 + "'", int45 == 28);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        int[] intArray5 = new int[] { 2191, 30, 710, (-4), 12390 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass8 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[2191, 30, 710, -4, 12390]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 66315 + "'", int6 == 66315);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 66315 + "'", int7 == 66315);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 97, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray48 = new int[][] { intArray27, intArray32, intArray37, intArray42, intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, 1, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[][] intArray89 = new int[][] { intArray79, intArray82, intArray85, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, (int) (byte) 0, 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, (int) (short) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (short) 1, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, (int) (short) 0, intArray89);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, 1, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4292);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 319 + "'", int91 == 319);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-3) + "'", int93 == (-3));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray41 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray48 = new int[] { '4' };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[][] intArray64 = new int[][] { intArray54, intArray57, intArray60, intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (byte) 0, 0, intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (byte) 0, (int) (short) 1, intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, 1, 0, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-1), 0, intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[52]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) 'a', 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        int[] intArray66 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray73 = new int[][] { intArray66, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 97, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 97 + "'", int74 == 97);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-4), 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (-1), (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray41 = new int[] { (byte) 100, 319 };
        int[] intArray44 = new int[] { (byte) 100, 319 };
        int[] intArray47 = new int[] { (byte) 100, 319 };
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[][] intArray51 = new int[][] { intArray41, intArray44, intArray47, intArray50 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (byte) 0, 0, intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (byte) 0, (int) (short) 1, intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, 0, intArray51);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 809, 12564, intArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 809 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray39 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[][] intArray62 = new int[][] { intArray52, intArray55, intArray58, intArray61 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (byte) 0, 0, intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (byte) 0, (int) (short) 1, intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, 1, 0, intArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 319, 12390, intArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 319 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 710, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray40 = new int[][] { intArray39 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 0, 1, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) '#', 809, intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray34 = new int[] { (short) -1, 10, (byte) 100 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray34, 0, (int) (short) 0);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray34, 0, 0);
        int[] intArray54 = new int[] { '4' };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray63 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray64 = new int[][] { intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, 0, 1, intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (byte) 0, (int) (short) 1, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) -1, 0, intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-3) + "'", int44 == (-3));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-3) + "'", int50 == (-3));
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[52]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray18 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 0, 1, intArray39);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 500, intArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 500 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 500 + "'", int21 == 500);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 493 + "'", int22 == 493);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 493 + "'", int23 == 493);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 493 + "'", int24 == 493);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 493 + "'", int25 == 493);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { (short) -1, 10, (byte) 100 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray74 = new int[] { '4' };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray74);
        int[] intArray83 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray84 = new int[][] { intArray83 };
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray74, 0, 1, intArray84);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 1, (int) (byte) 1, intArray84);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (short) 0, 0, intArray84);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4389, 12564, intArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4389 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[52]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 30 + "'", int86 == 30);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2000 + "'", int87 == 2000);
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass59 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray47 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[][] intArray79 = new int[][] { intArray69, intArray72, intArray75, intArray78 };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, 0, intArray79);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, (int) (short) 1, intArray79);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (short) 1, 0, intArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 10, intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 12390, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-1), 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray42, (int) (byte) 0, 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray42, 0, (int) (byte) 0);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray61 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray70 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray77 = new int[] { '4' };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray77);
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[] intArray89 = new int[] { (byte) 100, 319 };
        int[] intArray92 = new int[] { (byte) 100, 319 };
        int[][] intArray93 = new int[][] { intArray83, intArray86, intArray89, intArray92 };
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray77, (int) (byte) 0, 0, intArray93);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, (int) (byte) 0, (int) (short) 1, intArray93);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (short) 1, 0, intArray93);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 0, 0, intArray93);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (byte) 0, intArray93);
        java.lang.Class<?> wildcardClass99 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2000 + "'", int73 == 2000);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[52]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 319 + "'", int95 == 319);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 100 + "'", int96 == 100);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 52 + "'", int97 == 52);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-3) + "'", int98 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray20 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, 0, 0);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, 0, 1, intArray41);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) -1, 4, intArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 500 + "'", int23 == 500);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 493 + "'", int24 == 493);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 493 + "'", int25 == 493);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 493 + "'", int26 == 493);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 493 + "'", int27 == 493);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, (int) (byte) 0, 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, 0, (int) (byte) 0);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray39 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray48 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray55 = new int[] { '4' };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[][] intArray71 = new int[][] { intArray61, intArray64, intArray67, intArray70 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (byte) 0, 0, intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (byte) 0, (int) (short) 1, intArray71);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (short) 1, 0, intArray71);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 0, 0, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-5), 2003, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[52]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) ' ', 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray32, (int) (byte) 0, 0);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray32, 0, (int) (byte) 0);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray55 = new int[][] { intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 0, 0, intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (short) 1, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) '#', 809, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass41 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray17 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray33 = new int[] { '4' };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray39 = new int[] { (byte) 100, 319 };
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[][] intArray49 = new int[][] { intArray39, intArray42, intArray45, intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (byte) 0, 0, intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (byte) 0, (int) (short) 1, intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, 0, intArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) ' ', 28, intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2000 + "'", int18 == 2000);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[52]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray50 = new int[][] { intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, 0, 1, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (byte) 1, (int) (byte) 1, intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 0, 0, intArray50);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 4389, 4292, intArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2000 + "'", int18 == 2000);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 30 + "'", int52 == 30);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 0);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass59 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-3) + "'", int57 == (-3));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 1, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass14 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass18 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 10, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass23 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        int[] intArray2 = new int[] { ' ', 2130 };
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray2);
        int[] intArray9 = new int[] { (short) -1, 10, (byte) 100 };
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int[] intArray22 = new int[] { '4' };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, (int) (byte) 0, 0);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (byte) 0);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray44 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray45 = new int[][] { intArray44 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, 0, 1, intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 0, 0, intArray45);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray9, (int) (short) 1, (int) (short) 1, intArray45);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray65 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray72 = new int[] { '4' };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray72);
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[][] intArray88 = new int[][] { intArray78, intArray81, intArray84, intArray87 };
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray72, (int) (byte) 0, 0, intArray88);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, (int) (byte) 0, (int) (short) 1, intArray88);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (short) 1, 0, intArray88);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray9, (int) (short) 0, (int) (byte) 1, intArray88);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray2, 500, 500, intArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[32, 2130]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4292 + "'", int3 == 4292);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[52]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[52]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 52 + "'", int89 == 52);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 319 + "'", int90 == 319);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 319 + "'", int92 == 319);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-1), 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 4, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass27 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        int[] intArray0 = null;
        int[] intArray4 = new int[] { '4' };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 0, 0);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 0);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray27 = new int[][] { intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, 0, 1, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray27);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) '#', 28, intArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) ' ', 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 28 + "'", int45 == 28);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 66315, 66315);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-4), 710, intArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray53 = new int[] { '4' };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray63 = new int[][] { intArray62 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, 0, 1, intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, 1, (int) (byte) 1, intArray63);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 66315, 1, intArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[52]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 4 + "'", int65 == 4);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int[][] intArray47 = null;
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass51 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 493, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray54 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray60 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 10, (-1), intArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray37 = new int[] { (short) -1, 10, (byte) 100 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray48 = new int[] { (short) -1, 10, (byte) 100 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray77 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray78 = new int[][] { intArray57, intArray62, intArray67, intArray72, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (short) 1, 1, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, (int) (byte) 0, intArray78);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 52, (int) (byte) 100, intArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 30 + "'", int79 == 30);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (byte) 100, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray54 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray60 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, (int) (byte) 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, (int) (byte) 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (short) 0, 0, intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 1, 0, intArray61);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 28, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray33 = new int[] { (short) -1, 10, (byte) 100 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray63 = new int[][] { intArray42, intArray47, intArray52, intArray57, intArray62 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 1, 1, intArray63);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 896, (int) '4', intArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray16 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray48 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray49 = new int[][] { intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, 0, 1, intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (byte) 1, (int) (byte) 1, intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 496, (int) (byte) 1, intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2000 + "'", int17 == 2000);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 1, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 500, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray36 = new int[] { (short) -1, 10, (byte) 100 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray60 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray65 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray66 = new int[][] { intArray45, intArray50, intArray55, intArray60, intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 1, 1, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, (int) (short) 0, (int) (short) 0);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray77 = new int[] { '4' };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray77);
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[] intArray89 = new int[] { (byte) 100, 319 };
        int[] intArray92 = new int[] { (byte) 100, 319 };
        int[][] intArray93 = new int[][] { intArray83, intArray86, intArray89, intArray92 };
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray77, (int) (byte) 0, 0, intArray93);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 0, (int) (short) 1, intArray93);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 809, (int) ' ', intArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 30 + "'", int67 == 30);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-3) + "'", int71 == (-3));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[52]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 319 + "'", int95 == 319);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 809, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray29 = new int[] { (short) -1, 10, (byte) 100 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray58 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray59 = new int[][] { intArray38, intArray43, intArray48, intArray53, intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 1, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, (int) (byte) 0, intArray59);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-3), 2003, intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 30 + "'", int60 == 30);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-1), 809);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray38 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray38, (int) (short) 0, (int) (short) 0);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray63 = new int[] { (short) -1, 10, (byte) 100 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray79 = new int[] { '4' };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray79);
        int[] intArray88 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray89 = new int[][] { intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray79, 0, 1, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 1, (int) (byte) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (short) 0, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, 0, 0, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 0, (-1), intArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 710 + "'", int39 == 710);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 710 + "'", int40 == 710);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-5) + "'", int43 == (-5));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 710 + "'", int44 == 710);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 710 + "'", int45 == 710);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 710 + "'", int46 == 710);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 710 + "'", int47 == 710);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 710 + "'", int48 == 710);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 710 + "'", int49 == 710);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 319 + "'", int75 == 319);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[52]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 10 + "'", int90 == 10);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 30 + "'", int91 == 30);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 2000 + "'", int92 == 2000);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-5) + "'", int93 == (-5));
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-5), 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass34 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        int[] intArray70 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray77 = new int[][] { intArray70, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass85 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 97 + "'", int78 == 97);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-5) + "'", int79 == (-5));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 710 + "'", int80 == 710);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 710 + "'", int81 == 710);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 710 + "'", int82 == 710);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 710 + "'", int83 == 710);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 710 + "'", int84 == 710);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray57 = new int[][] { intArray36, intArray41, intArray46, intArray51, intArray56 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (short) 1, 1, intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 1, (int) (byte) 0, intArray57);
        int[] intArray67 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray73 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray74 = new int[][] { intArray67, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 1, (int) (byte) 0, intArray74);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 319, (int) (short) 1, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 97 + "'", int75 == 97);
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) -1, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, 0, (int) (byte) 0);
        int[] intArray38 = new int[] { '4' };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray47 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray48 = new int[][] { intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, 0, 1, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 0, 0, intArray48);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (short) 1, (int) (short) 1, intArray48);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray68 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray75 = new int[] { '4' };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[] intArray90 = new int[] { (byte) 100, 319 };
        int[][] intArray91 = new int[][] { intArray81, intArray84, intArray87, intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray75, (int) (byte) 0, 0, intArray91);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, (int) (byte) 0, (int) (short) 1, intArray91);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (short) 1, 0, intArray91);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (short) 0, (int) (byte) 1, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 66315, 97, intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[52]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[52]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 319 + "'", int93 == 319);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 319 + "'", int95 == 319);
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray54 = new int[] { (short) -1, 10, (byte) 100 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray64 = new int[] { '4' };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray73 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray74 = new int[][] { intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, 0, 1, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, 0, intArray74);
        // The following exception was thrown during execution in test generation
        try {
            int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-4), 0, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[52]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-3) + "'", int76 == (-3));
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray53 = new int[] { (short) -1, 10, (byte) 100 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray77 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray82 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray83 = new int[][] { intArray62, intArray67, intArray72, intArray77, intArray82 };
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 1, 1, intArray83);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) -1, 97, intArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 30 + "'", int84 == 30);
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass17 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray17, 0, (int) (short) 0);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray37 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray56 = new int[][] { intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 0, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, 1, (int) (byte) 1, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, 1, (int) (byte) 1, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 319, (int) '4', intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-3) + "'", int27 == (-3));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 30 + "'", int59 == 30);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray32, (int) (byte) 0, 0);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray32, 0, (int) (byte) 0);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray55 = new int[][] { intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 0, 0, intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (short) 1, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2130, 100, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (short) 0, (int) (short) 0);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray67 = new int[] { '4' };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[][] intArray83 = new int[][] { intArray73, intArray76, intArray79, intArray82 };
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray67, (int) (byte) 0, 0, intArray83);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, 0, (int) (short) 1, intArray83);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 30, intArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-3) + "'", int61 == (-3));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[52]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 52 + "'", int84 == 52);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 319 + "'", int85 == 319);
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        int[] intArray70 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray77 = new int[][] { intArray70, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray85 = new int[] { '4' };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray85);
        int[] intArray94 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray95 = new int[][] { intArray94 };
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray85, 0, 1, intArray95);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) ' ', 0, intArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 97 + "'", int78 == 97);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-5) + "'", int79 == (-5));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 710 + "'", int80 == 710);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 710 + "'", int81 == 710);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[52]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 10 + "'", int96 == 10);
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (byte) -1, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, (int) (short) 0);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, 0);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, 1);
        int[] intArray69 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray76 = new int[] { '4' };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray76);
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[] intArray91 = new int[] { (byte) 100, 319 };
        int[][] intArray92 = new int[][] { intArray82, intArray85, intArray88, intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray76, (int) (byte) 0, 0, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, (int) (short) 1, intArray92);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, 0, 0, intArray92);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, (int) (short) 0, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2130, 10, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 500 + "'", int24 == 500);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 493 + "'", int25 == 493);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 493 + "'", int26 == 493);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 493 + "'", int27 == 493);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 493 + "'", int28 == 493);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 493 + "'", int29 == 493);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 493 + "'", int30 == 493);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 493 + "'", int31 == 493);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 493 + "'", int32 == 493);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 493 + "'", int33 == 493);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 493 + "'", int34 == 493);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 493 + "'", int35 == 493);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 493 + "'", int36 == 493);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 493 + "'", int37 == 493);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-3) + "'", int53 == (-3));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-3) + "'", int59 == (-3));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 28 + "'", int62 == 28);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[52]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-3) + "'", int95 == (-3));
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 500 + "'", int96 == 500);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 10, 4292);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[][] intArray24 = new int[][] {};
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (byte) 0, (int) (short) 0, intArray24);
        int[] intArray31 = new int[] { (short) -1, 10, (byte) 100 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray31, 0, (int) (short) 0);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray31, 0, 0);
        int[] intArray51 = new int[] { '4' };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray60 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray61 = new int[][] { intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, 0, 1, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (short) 1, (int) (short) 1, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2000, (int) (short) -1, intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-3) + "'", int41 == (-3));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-3) + "'", int47 == (-3));
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[52]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray29 = new int[] { (short) -1, 10, (byte) 100 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[][] intArray41 = new int[][] {};
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 0, intArray41);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 710, 500, intArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-3) + "'", int42 == (-3));
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray31 = new int[] { (short) -1, 10, (byte) 100 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray60 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray61 = new int[][] { intArray40, intArray45, intArray50, intArray55, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (short) 1, 1, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, (int) (byte) 0, intArray61);
        int[] intArray71 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray77 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray78 = new int[][] { intArray71, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, (int) (byte) 0, intArray78);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 493, 496, intArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 30 + "'", int62 == 30);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 97 + "'", int79 == 97);
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        java.lang.Class<?> wildcardClass18 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        java.lang.Class<?> wildcardClass17 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 1, (int) (short) 1);
        int[] intArray50 = new int[] { '4' };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray50, (int) (byte) 0, 0);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray50, 0, (int) (byte) 0);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray72 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray73 = new int[][] { intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, 0, 1, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (short) 0, 0, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (-3), 353164, intArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[52]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-3), 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 28 + "'", int44 == 28);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 809, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        int[] intArray4 = new int[] { '4', 809, 710, 2191 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray19 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray20 = new int[][] { intArray19 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, 0, 1, intArray20);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (-1), 353164, intArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 809, 710, 2191]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 12564 + "'", int5 == 12564);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12564 + "'", int6 == 12564);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 0);
        java.lang.Class<?> wildcardClass40 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int[][] intArray47 = null;
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray47);
        int[][] intArray51 = new int[][] {};
        // The following exception was thrown during execution in test generation
        try {
            int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 710, 2003, intArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
        org.junit.Assert.assertNotNull(intArray51);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray25 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, (int) (short) 0, (int) (short) 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray43 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray50 = new int[] { (short) -1, 10, (byte) 100 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray75 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray76 = new int[][] { intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, 0, 1, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (byte) 1, (int) (byte) 1, intArray76);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 0, 0, intArray76);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, 0, 0, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 100, 809, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 710 + "'", int26 == 710);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 710 + "'", int27 == 710);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-5) + "'", int30 == (-5));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 710 + "'", int31 == 710);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 710 + "'", int32 == 710);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 710 + "'", int33 == 710);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 710 + "'", int34 == 710);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 710 + "'", int35 == 710);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 710 + "'", int36 == 710);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 30 + "'", int78 == 30);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2000 + "'", int79 == 2000);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-5) + "'", int80 == (-5));
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray15 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray20 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray25 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray30 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray36 = new int[][] { intArray15, intArray20, intArray25, intArray30, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, 1, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 0, (int) (short) 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 496, 66315, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-3) + "'", int81 == (-3));
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 10, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray54 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray60 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) '4', 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 28, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-3), 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 97, (-3), intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        int[] intArray12 = new int[] { '4' };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray12, (int) (byte) 0, 0);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray12, 0, (int) (byte) 0);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray34 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray35 = new int[][] { intArray34 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, 0, 1, intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (short) 0, 0, intArray35);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 2191, 0, intArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[52]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 896, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray87 = new int[] { '4' };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray87);
        int[] intArray96 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray97 = new int[][] { intArray96 };
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray87, 0, 1, intArray97);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-1), 493, intArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[52]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 52 + "'", int88 == 52);
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 10 + "'", int98 == 10);
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray22 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray29 = new int[] { (short) -1, 10, (byte) 100 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray55 = new int[][] { intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 1, (int) (byte) 1, intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 0, 0, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 493, 66315, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 28, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray30 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray37 = new int[] { '4' };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray43 = new int[] { (byte) 100, 319 };
        int[] intArray46 = new int[] { (byte) 100, 319 };
        int[] intArray49 = new int[] { (byte) 100, 319 };
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[][] intArray53 = new int[][] { intArray43, intArray46, intArray49, intArray52 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (byte) 0, 0, intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 0, (int) (short) 1, intArray53);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4389, 4292, intArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2000 + "'", int33 == 2000);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[52]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray48 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray49 = new int[][] { intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, 0, 1, intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (byte) 1, (int) (byte) 1, intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) 'a', (-3), intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2000 + "'", int17 == 2000);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 1, intArray60);
        java.lang.Class<?> wildcardClass63 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, (int) (short) 0);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, 1);
        int[] intArray44 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray51 = new int[] { '4' };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[][] intArray67 = new int[][] { intArray57, intArray60, intArray63, intArray66 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, 0, intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, (int) (short) 1, intArray67);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 0, 0, intArray67);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray67);
        java.lang.Class<?> wildcardClass72 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-3) + "'", int28 == (-3));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 28 + "'", int37 == 28);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[52]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-3) + "'", int70 == (-3));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-3) + "'", int71 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass42 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray31 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray47 = new int[][] { intArray26, intArray31, intArray36, intArray41, intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, 1, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray17, (int) (short) 0, (int) (short) 0);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, 0, (int) (short) 1, intArray74);
        // The following exception was thrown during execution in test generation
        try {
            int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 1, 1, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-3) + "'", int52 == (-3));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass16 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass13 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray61 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray62 = new int[][] { intArray41, intArray46, intArray51, intArray56, intArray61 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, 1, intArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 52, 2130, intArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 30 + "'", int63 == 30);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray37 = new int[][] { intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 1, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 1, (int) (byte) 1, intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass44 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray53 = new int[] { (short) -1, 10, (byte) 100 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[][] intArray65 = new int[][] {};
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, (int) (short) 0, intArray65);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 100, 0, intArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-3) + "'", int66 == (-3));
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass23 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 493 + "'", int22 == 493);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        int[] intArray5 = new int[] { (short) -1, 97, 4292, 2130, 66315 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-1), 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 97, 4292, 2130, 66315]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 353164 + "'", int6 == 353164);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 353164 + "'", int7 == 353164);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int[] intArray14 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, 0);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray34 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray35 = new int[][] { intArray34 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, 0, 1, intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray35);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 2003, 12390, intArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 500 + "'", int17 == 500);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray40 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { '4' };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray58 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray59 = new int[][] { intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, 0, 1, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, 1, (int) (byte) 1, intArray59);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 12564, 100, intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[52]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 710, 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (-5), (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, (int) (byte) 0, 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, (int) (byte) 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray62 = new int[] { '4' };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[][] intArray78 = new int[][] { intArray68, intArray71, intArray74, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, 0, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (byte) 0, (int) (short) 1, intArray78);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (short) 1, 0, intArray78);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (short) 0, 0, intArray78);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4292, 97, intArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[52]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 52 + "'", int82 == 52);
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass37 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-3), 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (-5), 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray48 = new int[] { '4' };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray58 = new int[][] { intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, 0, 1, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 1, (int) (byte) 1, intArray58);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 10, (int) '#', intArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[52]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 30 + "'", int60 == 30);
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass62 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) -1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 28 + "'", int44 == 28);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) '4', 28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray15 = new int[] { '4' };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, (int) (byte) 0, 0);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, 0, (int) (byte) 0);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray37 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray38 = new int[][] { intArray37 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, 0, 1, intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 0, 0, intArray38);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 100, (int) '4', intArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[52]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-1), 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[][] intArray20 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 28, intArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 0);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray64 = new int[] { (short) -1, 10, (byte) 100 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[][] intArray76 = new int[][] {};
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, (int) (short) 0, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 500, 52, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-3) + "'", int57 == (-3));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-3) + "'", int77 == (-3));
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray34 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 100, 97, intArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        java.lang.Class<?> wildcardClass48 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-3) + "'", int47 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray23 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, (int) (short) 0, (int) (short) 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, (int) (short) 1);
        int[] intArray37 = new int[] { (short) -1, 10, (byte) 100 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray48 = new int[] { (short) -1, 10, (byte) 100 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray77 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray78 = new int[][] { intArray57, intArray62, intArray67, intArray72, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (short) 1, 1, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, (int) (byte) 0, intArray78);
        int[] intArray88 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray94 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray95 = new int[][] { intArray88, intArray94 };
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, (int) (byte) 0, intArray95);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, (int) (short) 1, intArray95);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 319, intArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 710 + "'", int24 == 710);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 710 + "'", int25 == 710);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-5) + "'", int28 == (-5));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-4) + "'", int31 == (-4));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 30 + "'", int79 == 30);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 97 + "'", int96 == 97);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-5) + "'", int97 == (-5));
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray14 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray27 = new int[] { (byte) 100, 319 };
        int[] intArray30 = new int[] { (byte) 100, 319 };
        int[] intArray33 = new int[] { (byte) 100, 319 };
        int[] intArray36 = new int[] { (byte) 100, 319 };
        int[][] intArray37 = new int[][] { intArray27, intArray30, intArray33, intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 0, (int) (short) 1, intArray37);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) ' ', (-5), intArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 12390 + "'", int7 == 12390);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2000 + "'", int17 == 2000);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[][] intArray20 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 496, (-3), intArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-1), 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-5) + "'", int20 == (-5));
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 30, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) -1, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray28 = new int[] { (short) -1, 10, (byte) 100 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray58 = new int[][] { intArray37, intArray42, intArray47, intArray52, intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 1, 1, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, (int) (byte) 0, intArray58);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) -1, 2003, intArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 12390 + "'", int7 == 12390);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 12390 + "'", int8 == 12390);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 12390 + "'", int9 == 12390);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 12390 + "'", int10 == 12390);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 12390 + "'", int11 == 12390);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 30 + "'", int59 == 30);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray22 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray33 = new int[] { '4' };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray42 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray43 = new int[][] { intArray42 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, 0, 1, intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, 0, 1, intArray43);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 28, 0, intArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 500 + "'", int25 == 500);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 493 + "'", int26 == 493);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 493 + "'", int27 == 493);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 493 + "'", int28 == 493);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 493 + "'", int29 == 493);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[52]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (short) 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, 0);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 1, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 60, (-4), intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-5), (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, (int) (short) 0);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, 0);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, 1);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[][] intArray76 = new int[][] { intArray66, intArray69, intArray72, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (byte) 0, 0, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, (int) (short) 1, intArray76);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 0, intArray76);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, (int) (short) 0, intArray76);
        java.lang.Class<?> wildcardClass81 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 28 + "'", int46 == 28);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-3) + "'", int79 == (-3));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 500 + "'", int80 == 500);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (-1), (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 2130, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray14 = new int[] { 100, 353164, 0, 4389, 52 };
        int[] intArray20 = new int[] { 100, 353164, 0, 4389, 52 };
        int[] intArray26 = new int[] { 100, 353164, 0, 4389, 52 };
        int[] intArray32 = new int[] { 100, 353164, 0, 4389, 52 };
        int[][] intArray33 = new int[][] { intArray14, intArray20, intArray26, intArray32 };
        // The following exception was thrown during execution in test generation
        try {
            int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 60, 4389, intArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[100, 353164, 0, 4389, 52]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 353164, 0, 4389, 52]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 353164, 0, 4389, 52]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 353164, 0, 4389, 52]");
        org.junit.Assert.assertNotNull(intArray33);
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass15 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, 0, (int) (short) 0);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, 0, 0);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray53 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray54 = new int[][] { intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, 0, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (byte) 0, (int) (short) 1, intArray54);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 809, 97, intArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-3) + "'", int40 == (-3));
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-1), 809);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 28 + "'", int44 == 28);
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray47 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray54 = new int[] { '4' };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[][] intArray70 = new int[][] { intArray60, intArray63, intArray66, intArray69 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, 0, intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (byte) 0, (int) (short) 1, intArray70);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (short) 1, 0, intArray70);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '4', (int) '4', intArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[52]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass49 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-3) + "'", int47 == (-3));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray9 = new int[] { '4' };
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (byte) 0, 0);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, (int) (byte) 0);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray37 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray53 = new int[] { '4' };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[][] intArray69 = new int[][] { intArray59, intArray62, intArray65, intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, 0, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (byte) 0, (int) (short) 1, intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, 0, intArray69);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, 0, intArray69);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray9, (int) (byte) 1, 0, intArray69);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, (int) (byte) 1, intArray69);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass77 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2191 + "'", int5 == 2191);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[52]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[52]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2130 + "'", int75 == 2130);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2191 + "'", int76 == 2191);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, (int) (byte) 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, (int) (byte) 0);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray37 = new int[][] { intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 1, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 0, 0, intArray37);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 60, (int) (byte) 100, intArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass15 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray30 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray51 = new int[][] { intArray30, intArray35, intArray40, intArray45, intArray50 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (short) 1, 1, intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, (int) (short) 0, (int) (short) 0);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray62 = new int[] { '4' };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[][] intArray78 = new int[][] { intArray68, intArray71, intArray74, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, 0, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, 0, (int) (short) 1, intArray78);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) 'a', intArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 30 + "'", int52 == 30);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-3) + "'", int56 == (-3));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[52]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass31 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray23 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, (int) (short) 0, (int) (short) 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, (int) (short) 1);
        int[] intArray37 = new int[] { (short) -1, 10, (byte) 100 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray48 = new int[] { (short) -1, 10, (byte) 100 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray77 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray78 = new int[][] { intArray57, intArray62, intArray67, intArray72, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (short) 1, 1, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, (int) (byte) 0, intArray78);
        int[] intArray88 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray94 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray95 = new int[][] { intArray88, intArray94 };
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, (int) (byte) 0, intArray95);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, (int) (short) 1, intArray95);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 809, 60, intArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 710 + "'", int24 == 710);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 710 + "'", int25 == 710);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-5) + "'", int28 == (-5));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-4) + "'", int31 == (-4));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 30 + "'", int79 == 30);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 97 + "'", int96 == 97);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-5) + "'", int97 == (-5));
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 500, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        int[] intArray2 = new int[] { ' ', 2130 };
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray2);
        int[][] intArray6 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray2, 30, 0, intArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[32, 2130]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4292 + "'", int3 == 4292);
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray39, (int) (byte) 0, 0);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray39, 0, (int) (byte) 0);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray58 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray67 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int[] intArray74 = new int[] { '4' };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray74);
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[] intArray89 = new int[] { (byte) 100, 319 };
        int[][] intArray90 = new int[][] { intArray80, intArray83, intArray86, intArray89 };
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray74, (int) (byte) 0, 0, intArray90);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray67, (int) (byte) 0, (int) (short) 1, intArray90);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (short) 1, 0, intArray90);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (short) 0, 0, intArray90);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 1, 0, intArray90);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 0, intArray90);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 1, 0, intArray90);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        java.lang.Class<?> wildcardClass99 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 896 + "'", int9 == 896);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 896 + "'", int10 == 896);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[52]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 319 + "'", int92 == 319);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 100 + "'", int95 == 100);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 52 + "'", int96 == 52);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 100 + "'", int97 == 100);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 896 + "'", int98 == 896);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 809, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray33 = new int[] { (short) -1, 10, (byte) 100 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray49 = new int[] { '4' };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray58 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray59 = new int[][] { intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, 0, 1, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (byte) 1, (int) (byte) 1, intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray59);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 10, (int) '4', intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[52]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass11 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray77);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, 0, intArray77);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) -1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (short) 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray44 = new int[] { (short) -1, 10, (byte) 100 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray54 = new int[] { '4' };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray63 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray64 = new int[][] { intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, 0, 1, intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, 0, 4, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 710, (int) '#', intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[52]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-3) + "'", int66 == (-3));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) -1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-4), 809);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        int[] intArray0 = null;
        int[] intArray8 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray8, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray29 = new int[][] { intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray8, 0, 1, intArray29);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 710, 496, intArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 500 + "'", int11 == 500);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        java.lang.Class<?> wildcardClass57 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-3) + "'", int56 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[][] intArray22 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 100, (-3), intArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        int[] intArray0 = null;
        int[] intArray4 = new int[] { '4' };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[] intArray19 = new int[] { (byte) 100, 319 };
        int[][] intArray20 = new int[][] { intArray10, intArray13, intArray16, intArray19 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, 0, intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, (int) (short) 0, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 66315, 100, intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray24 = new int[] { '4' };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray34 = new int[][] { intArray33 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, 0, 1, intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 0, 0, intArray34);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) -1, (int) '4', intArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[52]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) 'a', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 60, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, (int) (short) 0);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, 1);
        int[] intArray44 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray51 = new int[] { '4' };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[][] intArray67 = new int[][] { intArray57, intArray60, intArray63, intArray66 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, 0, intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, (int) (short) 1, intArray67);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 0, 0, intArray67);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray67);
        java.lang.Class<?> wildcardClass72 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-3) + "'", int28 == (-3));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 28 + "'", int37 == 28);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[52]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-3) + "'", int70 == (-3));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-3) + "'", int71 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[] intArray38 = new int[] { (byte) 100, 319 };
        int[][] intArray39 = new int[][] { intArray29, intArray32, intArray35, intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (byte) 0, 0, intArray39);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 12564, 100, intArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 4, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-4), (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray42 = new int[][] { intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, 0, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 1, (int) (byte) 1, intArray42);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, (int) (byte) 1, intArray42);
        java.lang.Class<?> wildcardClass46 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 0, 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray12, 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, 0, 1, intArray33);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) 'a', 353164, intArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 500 + "'", int15 == 500);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray28 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 496, 28, intArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { (short) -1, 10, (byte) 100 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray48 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray49 = new int[][] { intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, 0, 1, intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 1, (int) (short) 1, intArray49);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray60 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray69 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray76 = new int[] { '4' };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray76);
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[] intArray91 = new int[] { (byte) 100, 319 };
        int[][] intArray92 = new int[][] { intArray82, intArray85, intArray88, intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray76, (int) (byte) 0, 0, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, (int) (short) 1, intArray92);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (short) 1, 0, intArray92);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 0, (int) (byte) 1, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2191, (int) (byte) 10, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 30 + "'", int52 == 30);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[52]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 100 + "'", int95 == 100);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 319 + "'", int96 == 319);
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int[] intArray18 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (short) 0, (int) (short) 0);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray36 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray59 = new int[] { '4' };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray68 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray69 = new int[][] { intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, 0, 1, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (byte) 1, (int) (byte) 1, intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 0, 0, intArray69);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 0, 0, intArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 1, 0, intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-5) + "'", int23 == (-5));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 710 + "'", int24 == 710);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 710 + "'", int25 == 710);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 710 + "'", int26 == 710);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 710 + "'", int27 == 710);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 710 + "'", int28 == 710);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 710 + "'", int29 == 710);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[52]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 30 + "'", int71 == 30);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-5) + "'", int73 == (-5));
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int[][] intArray47 = null;
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray17 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray24 = new int[] { '4' };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray30 = new int[] { (byte) 100, 319 };
        int[] intArray33 = new int[] { (byte) 100, 319 };
        int[] intArray36 = new int[] { (byte) 100, 319 };
        int[] intArray39 = new int[] { (byte) 100, 319 };
        int[][] intArray40 = new int[][] { intArray30, intArray33, intArray36, intArray39 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (byte) 0, 0, intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 0, (int) (short) 1, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 12390, 0, intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2000 + "'", int18 == 2000);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[52]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray11 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray24 = new int[] { (byte) 100, 319 };
        int[] intArray27 = new int[] { (byte) 100, 319 };
        int[] intArray30 = new int[] { (byte) 100, 319 };
        int[] intArray33 = new int[] { (byte) 100, 319 };
        int[][] intArray34 = new int[][] { intArray24, intArray27, intArray30, intArray33 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, 0, intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, (int) (short) 1, intArray34);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, 4292, intArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass16 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray50 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray51 = new int[][] { intArray50 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, 0, 1, intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 1, (int) (byte) 1, intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, 0, intArray51);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 4389, 2003, intArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 30 + "'", int53 == 30);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 0);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass41 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        int[] intArray0 = null;
        int[] intArray3 = new int[] {};
        int[] intArray4 = new int[] {};
        int[] intArray5 = new int[] {};
        int[] intArray6 = new int[] {};
        int[][] intArray7 = new int[][] { intArray3, intArray4, intArray5, intArray6 };
        // The following exception was thrown during execution in test generation
        try {
            int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) (short) 10, (-4), intArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[]");
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(intArray7);
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, (int) (short) 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray34 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { '4' };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray53 = new int[][] { intArray52 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, 0, 1, intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 1, (int) (byte) 1, intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 1, (int) (byte) 1, intArray53);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 496, 100, intArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-3) + "'", int24 == (-3));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[52]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray28 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2130, (-4), intArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 100, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        int[] intArray0 = null;
        int[] intArray8 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray8, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, 0, (int) (short) 0);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, 0, 0);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, 0, 1);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[][] intArray79 = new int[][] { intArray69, intArray72, intArray75, intArray78 };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, 0, intArray79);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, (int) (short) 1, intArray79);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 0, 0, intArray79);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray8, (int) (byte) 0, (int) (short) 0, intArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 28, (int) (short) -1, intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 500 + "'", int11 == 500);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 493 + "'", int22 == 493);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 493 + "'", int23 == 493);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 493 + "'", int24 == 493);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-3) + "'", int40 == (-3));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-3) + "'", int46 == (-3));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 28 + "'", int49 == 28);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-3) + "'", int82 == (-3));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 500 + "'", int83 == 500);
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[][] intArray58 = new int[][] { intArray48, intArray51, intArray54, intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 0, 0, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (byte) 0, (int) (short) 1, intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 0, intArray58);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 1, (int) (short) 0, intArray58);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray69, (int) (byte) 0, 0);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray69, 0, (int) (byte) 0);
        int[] intArray82 = new int[] { '4' };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray82);
        int[] intArray91 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray92 = new int[][] { intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray82, 0, 1, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (short) 0, 0, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) -1, 52, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[52]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 10 + "'", int93 == 10);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        java.lang.Class<?> wildcardClass20 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-5) + "'", int19 == (-5));
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        int[] intArray5 = new int[] { 2191, 30, 710, (-4), 12390 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-5), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[2191, 30, 710, -4, 12390]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 66315 + "'", int6 == 66315);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 66315 + "'", int7 == 66315);
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) ' ', 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 12390, 809);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (short) -1, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray17, 0, (int) (short) 0);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray44 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray45 = new int[][] { intArray44 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, 0, 1, intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, (int) (short) 1, intArray45);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-4), 809, intArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-3) + "'", int27 == (-3));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 30 + "'", int47 == 30);
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass26 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass24 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-4), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, (int) (short) 0);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, 0);
        int[] intArray38 = new int[] { '4' };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray47 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray48 = new int[][] { intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, 0, 1, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray48);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 52, (int) (byte) -1, intArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-3) + "'", int28 == (-3));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[52]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray26 = new int[][] { intArray25 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 1, intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 1, intArray26);
        int[] intArray34 = new int[] { (short) -1, 10, (byte) 100 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray45 = new int[] { (short) -1, 10, (byte) 100 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray64 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray69 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray74 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray75 = new int[][] { intArray54, intArray59, intArray64, intArray69, intArray74 };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 1, intArray75);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (short) 1, (int) (byte) 0, intArray75);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) '#', (-1), intArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 30 + "'", int76 == 30);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-3), 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass15 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        int[] intArray6 = new int[] { ' ', 30, 493, (byte) 0, 319, (byte) 1 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 1, 0, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 10, (int) (short) 0, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 30, 493, 0, 319, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4389 + "'", int7 == 4389);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4389 + "'", int8 == 4389);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, (int) (byte) 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, (int) (byte) 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (short) 0, 0, intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 1, 0, intArray61);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 4, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[][] intArray58 = new int[][] { intArray48, intArray51, intArray54, intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 0, 0, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (byte) 0, (int) (short) 1, intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 0, intArray58);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 1, (int) (short) 0, intArray58);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass66 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, 0, (int) (short) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, 0, 0);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, 0, 1);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, 0, 0, intArray74);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 4, (int) (byte) 100, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-3) + "'", int35 == (-3));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-3) + "'", int41 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 28 + "'", int44 == 28);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-3) + "'", int77 == (-3));
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int[] intArray19 = new int[] { (short) 1, 710, 30 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray34 = new int[] { '4' };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray34, (int) (byte) 0, 0);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray34, 0, (int) (byte) 0);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[][] intArray85 = new int[][] { intArray75, intArray78, intArray81, intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, 0, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, (int) (short) 1, intArray85);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 1, 0, intArray85);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (short) 0, 0, intArray85);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 1, 0, intArray85);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 1, (int) (byte) 1, intArray85);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) 'a', (int) '#', intArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2191 + "'", int20 == 2191);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2191 + "'", int21 == 2191);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[52]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 52 + "'", int89 == 52);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 100 + "'", int90 == 100);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 2130 + "'", int91 == 2130);
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray50 = new int[] { (short) -1, 10, (byte) 100 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[][] intArray62 = new int[][] {};
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (byte) 0, (int) (short) 0, intArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-4), 10, intArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-3) + "'", int63 == (-3));
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 10, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass25 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 809, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int[] intArray38 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray38, (int) (short) 0, (int) (short) 0);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray63 = new int[] { (short) -1, 10, (byte) 100 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray79 = new int[] { '4' };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray79);
        int[] intArray88 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray89 = new int[][] { intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray79, 0, 1, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 1, (int) (byte) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (short) 0, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, 0, 0, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 4, 60, intArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 710 + "'", int39 == 710);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 710 + "'", int40 == 710);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-5) + "'", int43 == (-5));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 710 + "'", int44 == 710);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 710 + "'", int45 == 710);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 710 + "'", int46 == 710);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 710 + "'", int47 == 710);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 710 + "'", int48 == 710);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 710 + "'", int49 == 710);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 319 + "'", int75 == 319);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[52]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 10 + "'", int90 == 10);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 30 + "'", int91 == 30);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 2000 + "'", int92 == 2000);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-5) + "'", int93 == (-5));
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, (int) (short) 0, (int) (short) 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray37 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray44 = new int[] { (short) -1, 10, (byte) 100 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray69 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray70 = new int[][] { intArray69 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, 0, 1, intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 1, (int) (byte) 1, intArray70);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 0, 0, intArray70);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 0, intArray70);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 66315, (int) (byte) 0, intArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-5) + "'", int24 == (-5));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 710 + "'", int25 == 710);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 710 + "'", int26 == 710);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 710 + "'", int27 == 710);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 710 + "'", int28 == 710);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 710 + "'", int29 == 710);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 710 + "'", int30 == 710);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 30 + "'", int72 == 30);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2000 + "'", int73 == 2000);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-5) + "'", int74 == (-5));
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) '4', 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray31 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray47 = new int[][] { intArray26, intArray31, intArray36, intArray41, intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, 1, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, (int) (byte) 0, intArray47);
        int[] intArray57 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray63 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray64 = new int[][] { intArray57, intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, (int) (byte) 0, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) (byte) 100, 10, intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 97 + "'", int65 == 97);
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray49 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 100, 4, intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 10, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        int[] intArray5 = new int[] { 2191, 30, 710, (-4), 12390 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass9 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[2191, 30, 710, -4, 12390]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 66315 + "'", int6 == 66315);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 66315 + "'", int7 == 66315);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 66315 + "'", int8 == 66315);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray54 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray60 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray73 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray82 = new int[] { '4' };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray82);
        int[] intArray91 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray92 = new int[][] { intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray82, 0, 1, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, 1, (int) (byte) 1, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, 100, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2000 + "'", int74 == 2000);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2000 + "'", int75 == 2000);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2000 + "'", int76 == 2000);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2000 + "'", int77 == 2000);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2000 + "'", int78 == 2000);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[52]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 10 + "'", int93 == 10);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 4 + "'", int94 == 4);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (short) 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, 0);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray52);
        java.lang.Class<?> wildcardClass56 = intArray52.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 896, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass38 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) ' ', 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 319, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 10, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray42 = new int[][] { intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, 0, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 1, (int) (byte) 1, intArray42);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 1, 896, intArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray40 = new int[][] { intArray39 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 0, 1, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, 809, intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        int[] intArray5 = new int[] { (short) -1, 97, 4292, 2130, 66315 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 10, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 97, 4292, 2130, 66315]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 353164 + "'", int6 == 353164);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 353164 + "'", int7 == 353164);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-4), 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { (short) -1, 10, (byte) 100 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[][] intArray56 = new int[][] {};
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, (int) (short) 0, intArray56);
        int[] intArray63 = new int[] { (short) -1, 10, (byte) 100 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray63, 0, (int) (short) 0);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray63, 0, 0);
        int[] intArray83 = new int[] { '4' };
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray83);
        int[] intArray92 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray93 = new int[][] { intArray92 };
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray83, 0, 1, intArray93);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, (int) (short) 1, intArray93);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (short) 1, (int) (short) 1, intArray93);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 809, 97, intArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-3) + "'", int57 == (-3));
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-3) + "'", int73 == (-3));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 319 + "'", int75 == 319);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-3) + "'", int79 == (-3));
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[52]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 52 + "'", int84 == 52);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 10 + "'", int94 == 10);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 10 + "'", int95 == 10);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 30 + "'", int96 == 30);
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass17 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 1, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 0, 0);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass22 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-5) + "'", int20 == (-5));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        int[] intArray0 = null;
        int[] intArray8 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray8, (int) (short) 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray33 = new int[] { (short) -1, 10, (byte) 100 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray49 = new int[] { '4' };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray58 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray59 = new int[][] { intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, 0, 1, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (byte) 1, (int) (byte) 1, intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray59);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray8, 0, 0, intArray59);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 319, 97, intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[52]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-5) + "'", int63 == (-5));
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        int[] intArray6 = new int[] { ' ', 30, 493, (byte) 0, 319, (byte) 1 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 353164, (int) (byte) 10, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 30, 493, 0, 319, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4389 + "'", int7 == 4389);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4389 + "'", int8 == 4389);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass13 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 12390 + "'", int7 == 12390);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 12390 + "'", int8 == 12390);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 12390 + "'", int9 == 12390);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 12390 + "'", int10 == 12390);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 12390 + "'", int11 == 12390);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 12390 + "'", int12 == 12390);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass31 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[][] intArray58 = new int[][] { intArray48, intArray51, intArray54, intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 0, 0, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (byte) 0, (int) (short) 1, intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 0, intArray58);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 1, (int) (short) 0, intArray58);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-1), 30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, 1);
        java.lang.Class<?> wildcardClass46 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 28 + "'", int45 == 28);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 319, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray33 = new int[] { '4' };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray33, (int) (byte) 0, 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray33, 0, (int) (byte) 0);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray56 = new int[][] { intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 0, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 0, 0, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, (int) (short) 1, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 12564, 0, intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[52]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 30 + "'", int59 == 30);
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) 1, 710, 30 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray12 = new int[] { '4' };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, (int) (byte) 0, 0);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, (int) (byte) 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray40 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[][] intArray72 = new int[][] { intArray62, intArray65, intArray68, intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, 0, intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, (int) (byte) 0, (int) (short) 1, intArray72);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (short) 1, 0, intArray72);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (short) 0, 0, intArray72);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (byte) 1, 0, intArray72);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 1, (int) (byte) 1, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) 'a', 500, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2191 + "'", int7 == 2191);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2191 + "'", int8 == 2191);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[52]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2130 + "'", int78 == 2130);
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { ' ', ' ', (short) -1 };
        int[] intArray21 = new int[] { ' ', ' ', (short) -1 };
        int[][] intArray22 = new int[][] { intArray17, intArray21 };
        // The following exception was thrown during execution in test generation
        try {
            int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 809, intArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[32, 32, -1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[32, 32, -1]");
        org.junit.Assert.assertNotNull(intArray22);
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        int[] intArray6 = new int[] { ' ', 30, 493, (byte) 0, 319, (byte) 1 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        java.lang.Class<?> wildcardClass9 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 30, 493, 0, 319, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4389 + "'", int7 == 4389);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4389 + "'", int8 == 4389);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray31 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray47 = new int[][] { intArray26, intArray31, intArray36, intArray41, intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, 1, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, (int) (byte) 0, intArray47);
        int[] intArray57 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray63 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray64 = new int[][] { intArray57, intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, (int) (byte) 0, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 493, 493, intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 97 + "'", int65 == 97);
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        int[] intArray66 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray73 = new int[][] { intArray66, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-3), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 97 + "'", int74 == 97);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass22 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-5), 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray33 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray46 = new int[] { (byte) 100, 319 };
        int[] intArray49 = new int[] { (byte) 100, 319 };
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[][] intArray56 = new int[][] { intArray46, intArray49, intArray52, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (byte) 0, 0, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (byte) 0, (int) (short) 1, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 1, 0, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 30, (int) ' ', intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 97, 4389, intArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-4), 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray53 = new int[] { (short) -1, 10, (byte) 100 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray77 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray82 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray83 = new int[][] { intArray62, intArray67, intArray72, intArray77, intArray82 };
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 1, 1, intArray83);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) '#', 100, intArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 30 + "'", int84 == 30);
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 0);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass43 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 28 + "'", int42 == 28);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray37 = new int[][] { intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 1, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 1, (int) (byte) 1, intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 2000, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, (int) (short) 0);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, 0);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, 1);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[][] intArray76 = new int[][] { intArray66, intArray69, intArray72, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (byte) 0, 0, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, (int) (short) 1, intArray76);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 0, intArray76);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, (int) (short) 0, intArray76);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[][] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 896, 353164, intArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 28 + "'", int46 == 28);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-3) + "'", int79 == (-3));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 500 + "'", int80 == 500);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 493 + "'", int81 == 493);
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 52, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
    }

    @Test
    public void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2369");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (byte) 0, 0);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray73 = new int[][] { intArray52, intArray57, intArray62, intArray67, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 1, 1, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, (int) (byte) 0, intArray73);
        int[] intArray83 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray89 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray90 = new int[][] { intArray83, intArray89 };
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, (int) (byte) 0, intArray90);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 0, 1, intArray90);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 97, intArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 30 + "'", int74 == 30);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 97 + "'", int91 == 97);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-5) + "'", int92 == (-5));
    }

    @Test
    public void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2370");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[][] intArray79 = new int[][] { intArray69, intArray72, intArray75, intArray78 };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, 0, intArray79);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, (int) (short) 1, intArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '#', 4389, intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
    }

    @Test
    public void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2371");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (byte) 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2372");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray37 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray38 = new int[][] { intArray37 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, 0, 1, intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (byte) 1, (int) (byte) 1, intArray38);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 30, (int) (short) 0, intArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 30 + "'", int40 == 30);
    }

    @Test
    public void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2373");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray54 = new int[][] { intArray33, intArray38, intArray43, intArray48, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-4), 809);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
    }

    @Test
    public void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2374");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (-3), (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
    }

    @Test
    public void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2375");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[][] intArray59 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 100, 1, intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-3) + "'", int56 == (-3));
    }

    @Test
    public void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2376");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
    }

    @Test
    public void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2377");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 0);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-1), (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 28 + "'", int42 == 28);
    }

    @Test
    public void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2378");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray54 = new int[][] { intArray33, intArray38, intArray43, intArray48, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 1, intArray54);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 66315, 896, intArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
    }

    @Test
    public void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2379");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-4), 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
    }

    @Test
    public void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2380");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (-3), (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2381");
        int[] intArray5 = new int[] { 2191, 30, 710, (-4), 12390 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray24 = new int[] { '4' };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray34 = new int[][] { intArray33 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, 0, 1, intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 0, 0, intArray34);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 12390, (int) (short) 0, intArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[2191, 30, 710, -4, 12390]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 66315 + "'", int6 == 66315);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 66315 + "'", int7 == 66315);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 66315 + "'", int8 == 66315);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[52]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
    }

    @Test
    public void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2382");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (short) 100, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
    }

    @Test
    public void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2383");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 4, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
    }

    @Test
    public void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2384");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 1, intArray60);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass66 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2385");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[][] intArray34 = new int[][] {};
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 0, intArray34);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 2130, 10, intArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-3) + "'", int35 == (-3));
    }

    @Test
    public void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2386");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 28, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
    }

    @Test
    public void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2387");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray24 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray29 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray45 = new int[][] { intArray24, intArray29, intArray34, intArray39, intArray44 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, 1, intArray45);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 496, (int) (short) 1, intArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 30 + "'", int46 == 30);
    }

    @Test
    public void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2388");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
    }

    @Test
    public void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2389");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        int[] intArray70 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray77 = new int[][] { intArray70, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) (short) 1, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 97 + "'", int78 == 97);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-5) + "'", int79 == (-5));
    }

    @Test
    public void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2390");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, (int) (short) 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray48 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray49 = new int[][] { intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, 0, 1, intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (short) 1, (int) (short) 1, intArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 12390, (int) (short) 10, intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
    }

    @Test
    public void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2391");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 0);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 1);
        int[] intArray48 = new int[] { (short) -1, 10, (byte) 100 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray59 = new int[] { (short) -1, 10, (byte) 100 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray68 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray73 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray78 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray83 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray88 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray89 = new int[][] { intArray68, intArray73, intArray78, intArray83, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (short) 1, 1, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (short) 1, (int) (byte) 0, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 10, 4292, intArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 28 + "'", int42 == 28);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 30 + "'", int90 == 30);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
    }

    @Test
    public void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2392");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (byte) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2393");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (byte) 100, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2394");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray33 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray40 = new int[] { (short) -1, 10, (byte) 100 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray65 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray66 = new int[][] { intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, 0, 1, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (byte) 1, (int) (byte) 1, intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 0, 0, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 60, 12564, intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
    }

    @Test
    public void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2395");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) '#', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
    }

    @Test
    public void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2396");
        int[] intArray5 = new int[] { (short) -1, 97, 4292, 2130, 66315 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) '4', 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 97, 4292, 2130, 66315]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 353164 + "'", int6 == 353164);
    }

    @Test
    public void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2397");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, 0, (int) (short) 0);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, 0, 0);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray53 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray54 = new int[][] { intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, 0, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (byte) 0, (int) (short) 1, intArray54);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 4292, (int) '4', intArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-3) + "'", int40 == (-3));
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
    }

    @Test
    public void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2398");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
    }

    @Test
    public void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2399");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[][] intArray36 = new int[][] {};
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (byte) 0, (int) (short) 0, intArray36);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, (int) (short) 0);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, 0);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray72 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray73 = new int[][] { intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, 0, 1, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (byte) 0, (int) (short) 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, (int) (short) 1, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 28, 319, intArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-3) + "'", int53 == (-3));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-3) + "'", int59 == (-3));
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 30 + "'", int76 == 30);
    }

    @Test
    public void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2400");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (short) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
    }

    @Test
    public void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2401");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray42 = new int[][] { intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, 0, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 1, (int) (byte) 1, intArray42);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, (int) (byte) 1, intArray42);
        java.lang.Class<?> wildcardClass46 = intArray42.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2402");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
    }

    @Test
    public void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2403");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
    }

    @Test
    public void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2404");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-4), 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2405");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray48 = new int[][] { intArray27, intArray32, intArray37, intArray42, intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, 1, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[][] intArray89 = new int[][] { intArray79, intArray82, intArray85, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, (int) (byte) 0, 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, (int) (short) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (short) 1, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, (int) (short) 0, intArray89);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, 1, intArray89);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 4389, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 319 + "'", int91 == 319);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-3) + "'", int93 == (-3));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 710 + "'", int95 == 710);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 710 + "'", int96 == 710);
    }

    @Test
    public void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2406");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[][] intArray12 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 10, 2003, intArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
    }

    @Test
    public void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2407");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray46 = new int[][] { intArray45 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 0, 1, intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 1, (int) (byte) 1, intArray46);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 0, 0, intArray46);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 30, 28, intArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
    }

    @Test
    public void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2408");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        int[] intArray70 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray77 = new int[][] { intArray70, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) -1, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 97 + "'", int78 == 97);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-5) + "'", int79 == (-5));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 710 + "'", int80 == 710);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 710 + "'", int81 == 710);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 710 + "'", int82 == 710);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 710 + "'", int83 == 710);
    }

    @Test
    public void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2409");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass58 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2410");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 4389, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
    }

    @Test
    public void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2411");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 4292, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
    }

    @Test
    public void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2412");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int[] intArray24 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[] intArray43 = new int[] { (byte) 100, 319 };
        int[] intArray46 = new int[] { (byte) 100, 319 };
        int[][] intArray47 = new int[][] { intArray37, intArray40, intArray43, intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (byte) 0, 0, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (byte) 0, (int) (short) 1, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 100, 2003, intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
    }

    @Test
    public void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2413");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 30, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2414");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, 0, (int) (short) 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, 0, 0);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, 0, 1);
        int[] intArray41 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray48 = new int[] { '4' };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[][] intArray64 = new int[][] { intArray54, intArray57, intArray60, intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (byte) 0, 0, intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (byte) 0, (int) (short) 1, intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, 0, 0, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 28, 4, intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 28 + "'", int34 == 28);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[52]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-3) + "'", int67 == (-3));
    }

    @Test
    public void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2415");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray11, (int) (byte) 0, 0);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray11, 0, (int) (byte) 0);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray30 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[][] intArray62 = new int[][] { intArray52, intArray55, intArray58, intArray61 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (byte) 0, 0, intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (byte) 0, (int) (short) 1, intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 0, intArray62);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (short) 0, 0, intArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) ' ', 4389, intArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
    }

    @Test
    public void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2416");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-1), 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 12390 + "'", int7 == 12390);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 12390 + "'", int8 == 12390);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 12390 + "'", int9 == 12390);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 12390 + "'", int10 == 12390);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 12390 + "'", int11 == 12390);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 12390 + "'", int12 == 12390);
    }

    @Test
    public void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2417");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass40 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2418");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[][] intArray85 = new int[][] { intArray75, intArray78, intArray81, intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, 0, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, (int) (short) 1, intArray85);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 1, 0, intArray85);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 0, (int) (short) 0, intArray85);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) (short) 0, intArray85);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass95 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-3) + "'", int89 == (-3));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2419");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (short) 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, 0);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray64 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray71 = new int[] { '4' };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[][] intArray87 = new int[][] { intArray77, intArray80, intArray83, intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, (int) (byte) 0, 0, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, (int) (short) 1, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) ' ', 4, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[52]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 52 + "'", int88 == 52);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 319 + "'", int89 == 319);
    }

    @Test
    public void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2420");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 52, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
    }

    @Test
    public void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2421");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray22 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, (int) (short) 0, (int) (short) 0);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray40 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray47 = new int[] { (short) -1, 10, (byte) 100 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray72 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray73 = new int[][] { intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, 0, 1, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (byte) 1, (int) (byte) 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (short) 0, 0, intArray73);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, 0, 0, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 28, (int) 'a', intArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 710 + "'", int23 == 710);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 710 + "'", int24 == 710);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-5) + "'", int27 == (-5));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 710 + "'", int28 == 710);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 710 + "'", int29 == 710);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 710 + "'", int30 == 710);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 710 + "'", int31 == 710);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 710 + "'", int32 == 710);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 710 + "'", int33 == 710);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 30 + "'", int75 == 30);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2000 + "'", int76 == 2000);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-5) + "'", int77 == (-5));
    }

    @Test
    public void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2422");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 1, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
    }

    @Test
    public void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2423");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
    }

    @Test
    public void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2424");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int[] intArray22 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[] intArray38 = new int[] { (byte) 100, 319 };
        int[] intArray41 = new int[] { (byte) 100, 319 };
        int[] intArray44 = new int[] { (byte) 100, 319 };
        int[][] intArray45 = new int[][] { intArray35, intArray38, intArray41, intArray44 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, 0, intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 1, intArray45);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 10, 809, intArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
    }

    @Test
    public void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2425");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 10, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
    }

    @Test
    public void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2426");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, 4292);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
    }

    @Test
    public void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2427");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 2003, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
    }

    @Test
    public void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2428");
        int[] intArray5 = new int[] { 30, 28, (short) 10, 'a', '4' };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray14 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, 0);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray36 = new int[] { (short) -1, 10, (byte) 100 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, (int) (short) 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, 0);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, 1);
        int[] intArray62 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[][] intArray85 = new int[][] { intArray75, intArray78, intArray81, intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, 0, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, (int) (short) 1, intArray85);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 0, 0, intArray85);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 0, (int) (short) 0, intArray85);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 353164, 4292, intArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[30, 28, 10, 97, 52]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 809 + "'", int6 == 809);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 500 + "'", int17 == 500);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 493 + "'", int22 == 493);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 493 + "'", int23 == 493);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 493 + "'", int24 == 493);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 493 + "'", int25 == 493);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 493 + "'", int26 == 493);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 493 + "'", int27 == 493);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 493 + "'", int28 == 493);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 493 + "'", int29 == 493);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 493 + "'", int30 == 493);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-3) + "'", int46 == (-3));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-3) + "'", int52 == (-3));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 28 + "'", int55 == 28);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-3) + "'", int88 == (-3));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 500 + "'", int89 == 500);
    }

    @Test
    public void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2429");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray55 = new int[][] { intArray34, intArray39, intArray44, intArray49, intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, (int) (byte) 0, intArray55);
        int[] intArray65 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray71 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray72 = new int[][] { intArray65, intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, (int) (byte) 0, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (-5), (int) (short) 1, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 97 + "'", int73 == 97);
    }

    @Test
    public void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2430");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray12 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray25 = new int[] { (byte) 100, 319 };
        int[] intArray28 = new int[] { (byte) 100, 319 };
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[][] intArray35 = new int[][] { intArray25, intArray28, intArray31, intArray34 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (byte) 0, 0, intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (byte) 0, (int) (short) 1, intArray35);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 10, (int) '#', intArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
    }

    @Test
    public void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2431");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-5), (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
    }

    @Test
    public void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2432");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray37 = new int[][] { intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 1, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 1, (int) (byte) 1, intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 4, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
    }

    @Test
    public void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2433");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, 0, (int) (short) 0);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray34 = new int[] { '4' };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray44 = new int[][] { intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 0, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (byte) 0, 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 0, 4, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 710, (int) (byte) 100, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[52]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-3) + "'", int46 == (-3));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2434");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass38 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2435");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, (int) (short) 0, (int) (short) 0);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray33 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray40 = new int[] { (short) -1, 10, (byte) 100 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray65 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray66 = new int[][] { intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, 0, 1, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (byte) 1, (int) (byte) 1, intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 0, 0, intArray66);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, 0, 0, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-4), (int) (byte) 1, intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-5) + "'", int20 == (-5));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 710 + "'", int22 == 710);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 710 + "'", int23 == 710);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 710 + "'", int24 == 710);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 710 + "'", int25 == 710);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 710 + "'", int26 == 710);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-5) + "'", int70 == (-5));
    }

    @Test
    public void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2436");
        int[] intArray5 = new int[] { 30, 28, (short) 10, 'a', '4' };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 319, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[30, 28, 10, 97, 52]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 809 + "'", int6 == 809);
    }

    @Test
    public void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2437");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray38 = new int[] { (short) -1, 10, (byte) 100 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray38, 0, (int) (short) 0);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray38, 0, 0);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray38, 0, 1);
        int[] intArray64 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray71 = new int[] { '4' };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[][] intArray87 = new int[][] { intArray77, intArray80, intArray83, intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, (int) (byte) 0, 0, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, (int) (short) 1, intArray87);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, 0, 0, intArray87);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 0, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 1, 710, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-3) + "'", int54 == (-3));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 28 + "'", int57 == 28);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[52]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 52 + "'", int88 == 52);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 319 + "'", int89 == 319);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-3) + "'", int90 == (-3));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-3) + "'", int91 == (-3));
    }

    @Test
    public void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2438");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray23 = new int[] { (short) 1, 710, 30 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { '4' };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray38, (int) (byte) 0, 0);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray38, 0, (int) (byte) 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[][] intArray89 = new int[][] { intArray79, intArray82, intArray85, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, (int) (byte) 0, 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, (int) (short) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (short) 1, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (short) 0, 0, intArray89);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 1, 0, intArray89);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 1, (int) (byte) 1, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 496, 1, intArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2191 + "'", int24 == 2191);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2191 + "'", int25 == 2191);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[52]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 319 + "'", int91 == 319);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 2130 + "'", int95 == 2130);
    }

    @Test
    public void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2439");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 100, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
    }

    @Test
    public void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2440");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[][] intArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2130, (int) (short) 1, intArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
    }

    @Test
    public void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2441");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int[] intArray36 = new int[] { (short) -1, 10, (byte) 100 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, (int) (short) 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, 0);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, 1);
        int[] intArray62 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[][] intArray85 = new int[][] { intArray75, intArray78, intArray81, intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, 0, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, (int) (short) 1, intArray85);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 0, 0, intArray85);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 30, 319, intArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-3) + "'", int46 == (-3));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-3) + "'", int52 == (-3));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 28 + "'", int55 == 28);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-3) + "'", int88 == (-3));
    }

    @Test
    public void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2442");
        int[] intArray5 = new int[] { 30, 28, (short) 10, 'a', '4' };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, (int) (byte) 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray35 = new int[] { (short) -1, 10, (byte) 100 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray64 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray65 = new int[][] { intArray44, intArray49, intArray54, intArray59, intArray64 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 1, 1, intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, (int) (byte) 0, intArray65);
        int[] intArray75 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray81 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray82 = new int[][] { intArray75, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, (int) (byte) 0, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, 0, 1, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2003, (-5), intArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[30, 28, 10, 97, 52]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 809 + "'", int6 == 809);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 30 + "'", int66 == 30);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 97 + "'", int83 == 97);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-5) + "'", int84 == (-5));
    }

    @Test
    public void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2443");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 1, (int) (short) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 1, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
    }

    @Test
    public void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2444");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) -1, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
    }

    @Test
    public void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2445");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
    }

    @Test
    public void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2446");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
    }

    @Test
    public void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2447");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (short) 0);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, 0);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, 1);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray49 = new int[] { '4' };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[][] intArray65 = new int[][] { intArray55, intArray58, intArray61, intArray64 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, (int) (byte) 0, 0, intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 0, (int) (short) 1, intArray65);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 0, intArray65);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-3), 1, intArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-3) + "'", int26 == (-3));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 28 + "'", int35 == 28);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[52]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-3) + "'", int68 == (-3));
    }

    @Test
    public void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2448");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[][] intArray37 = new int[][] {};
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, (int) (short) 0, intArray37);
        int[] intArray44 = new int[] { (short) -1, 10, (byte) 100 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray44, 0, (int) (short) 0);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray44, 0, 0);
        int[] intArray64 = new int[] { '4' };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray73 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray74 = new int[][] { intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, 0, 1, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, (int) (short) 1, intArray74);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 4389, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-3) + "'", int54 == (-3));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-3) + "'", int60 == (-3));
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[52]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 30 + "'", int77 == 30);
    }

    @Test
    public void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2449");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[][] intArray31 = new int[][] {};
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (byte) 0, (int) (short) 0, intArray31);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-3), (-3), intArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
    }

    @Test
    public void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2450");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray42 = new int[][] { intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, 0, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 1, (int) (byte) 1, intArray42);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-3), 52, intArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
    }

    @Test
    public void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2451");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (-5), 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
    }

    @Test
    public void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2452");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray42 = new int[][] { intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, 0, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, 0, 1, intArray42);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 100, intArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 500 + "'", int24 == 500);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 493 + "'", int25 == 493);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 493 + "'", int26 == 493);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 493 + "'", int27 == 493);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 493 + "'", int28 == 493);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
    }

    @Test
    public void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2453");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int[] intArray18 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (short) 0, (int) (short) 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, (int) (short) 1);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray73 = new int[][] { intArray52, intArray57, intArray62, intArray67, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 1, 1, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, (int) (byte) 0, intArray73);
        int[] intArray83 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray89 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray90 = new int[][] { intArray83, intArray89 };
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, (int) (byte) 0, intArray90);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 0, (int) (short) 1, intArray90);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) ' ', (int) (short) 100, intArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-5) + "'", int23 == (-5));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-4) + "'", int26 == (-4));
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 30 + "'", int74 == 30);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 97 + "'", int91 == 97);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-5) + "'", int92 == (-5));
    }

    @Test
    public void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2454");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray57 = new int[][] { intArray36, intArray41, intArray46, intArray51, intArray56 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (short) 1, 1, intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 1, (int) (byte) 0, intArray57);
        int[] intArray67 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray73 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray74 = new int[][] { intArray67, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 1, (int) (byte) 0, intArray74);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (-1), 896, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 97 + "'", int75 == 97);
    }

    @Test
    public void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2455");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 4, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
    }

    @Test
    public void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2456");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, (int) (short) 0, (int) (short) 0);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, 0, (int) (short) 1);
        int[] intArray33 = new int[] { (short) -1, 10, (byte) 100 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray44 = new int[] { (short) -1, 10, (byte) 100 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray58 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray63 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray68 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray73 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray74 = new int[][] { intArray53, intArray58, intArray63, intArray68, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (short) 1, 1, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 1, (int) (byte) 0, intArray74);
        int[] intArray84 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray90 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray91 = new int[][] { intArray84, intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 1, (int) (byte) 0, intArray91);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, (int) (short) 1, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) -1, (int) (short) 10, intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-5) + "'", int24 == (-5));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-4) + "'", int27 == (-4));
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 30 + "'", int75 == 30);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 97 + "'", int92 == 97);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-5) + "'", int93 == (-5));
    }

    @Test
    public void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2457");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass36 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2458");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, 0, (int) (short) 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray33 = new int[] { (short) -1, 10, (byte) 100 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray43 = new int[] { '4' };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray53 = new int[][] { intArray52 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, 0, 1, intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (byte) 0, 0, intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, 0, 4, intArray53);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 319, (int) (byte) 100, intArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[52]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2459");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray30 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray31 = new int[][] { intArray30 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, 0, 1, intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray31);
        java.lang.Class<?> wildcardClass34 = intArray31.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2460");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-4), (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-3) + "'", int47 == (-3));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
    }

    @Test
    public void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2461");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) -1, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
    }

    @Test
    public void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2462");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray31 = new int[] { (short) -1, 10, (byte) 100 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray60 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray61 = new int[][] { intArray40, intArray45, intArray50, intArray55, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (short) 1, 1, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, (int) (byte) 0, intArray61);
        int[] intArray71 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray77 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray78 = new int[][] { intArray71, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, (int) (byte) 0, intArray78);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 12564, intArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 30 + "'", int62 == 30);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 97 + "'", int79 == 97);
    }

    @Test
    public void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2463");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 493, 4292);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
    }

    @Test
    public void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2464");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 60, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2465");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 2130, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2466");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (byte) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2467");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        int[] intArray66 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray73 = new int[][] { intArray66, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray73);
        java.lang.Class<?> wildcardClass76 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 97 + "'", int74 == 97);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2468");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass50 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2469");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 97, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
    }

    @Test
    public void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2470");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass40 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2471");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 97, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }

    @Test
    public void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2472");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 60, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
    }

    @Test
    public void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2473");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, (int) (short) 0);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray46 = new int[][] { intArray45 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 0, 1, intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, (int) (short) 1, intArray46);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 28, 1, intArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-3) + "'", int28 == (-3));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
    }

    @Test
    public void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2474");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (-3), 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
    }

    @Test
    public void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2475");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, (int) (byte) 0, 0);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, (int) (byte) 0);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray55 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray64 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray71 = new int[] { '4' };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[][] intArray87 = new int[][] { intArray77, intArray80, intArray83, intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, (int) (byte) 0, 0, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, (int) (short) 1, intArray87);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (short) 1, 0, intArray87);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 0, 0, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 52, (-5), intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[52]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 52 + "'", int88 == 52);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 319 + "'", int89 == 319);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 100 + "'", int90 == 100);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
    }

    @Test
    public void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2476");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray34 = new int[] { (short) -1, 10, (byte) 100 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray34, 0, (int) (short) 0);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray34, 0, 0);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray34, 0, 1);
        int[] intArray60 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray67 = new int[] { '4' };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[][] intArray83 = new int[][] { intArray73, intArray76, intArray79, intArray82 };
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray67, (int) (byte) 0, 0, intArray83);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (byte) 0, (int) (short) 1, intArray83);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 0, 0, intArray83);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 0, intArray83);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 4389, intArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-3) + "'", int44 == (-3));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-3) + "'", int50 == (-3));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 28 + "'", int53 == 28);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[52]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 52 + "'", int84 == 52);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 319 + "'", int85 == 319);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-3) + "'", int86 == (-3));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-3) + "'", int87 == (-3));
    }

    @Test
    public void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2477");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray38 = new int[] { (short) -1, 10, (byte) 100 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray68 = new int[][] { intArray47, intArray52, intArray57, intArray62, intArray67 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (short) 1, 1, intArray68);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 66315, (int) 'a', intArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 30 + "'", int69 == 30);
    }

    @Test
    public void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2478");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 2003, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2479");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray37 = new int[][] { intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 1, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 1, (int) (byte) 1, intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass43 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2480");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
    }

    @Test
    public void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2481");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[][] intArray34 = new int[][] {};
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 0, intArray34);
        int[] intArray41 = new int[] { (short) -1, 10, (byte) 100 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, 0, (int) (short) 0);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, 0, 0);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray70 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray71 = new int[][] { intArray70 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, 0, 1, intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (byte) 0, (int) (short) 1, intArray71);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 1, (int) (short) 1, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-4), 4389, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-3) + "'", int35 == (-3));
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-3) + "'", int51 == (-3));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-3) + "'", int57 == (-3));
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 30 + "'", int74 == 30);
    }

    @Test
    public void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2482");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[][] intArray85 = new int[][] { intArray75, intArray78, intArray81, intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, 0, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, (int) (short) 1, intArray85);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 1, 0, intArray85);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 0, (int) (short) 0, intArray85);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) (short) 0, intArray85);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 100, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-3) + "'", int89 == (-3));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
    }

    @Test
    public void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2483");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray41 = new int[] { (short) -1, 10, (byte) 100 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, 0, (int) (short) 0);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray59 = new int[] { '4' };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray68 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray69 = new int[][] { intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, 0, 1, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (short) 1, (int) (short) 1, intArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-5), 97, intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-3) + "'", int51 == (-3));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[52]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 30 + "'", int71 == 30);
    }

    @Test
    public void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2484");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, (int) (short) 0);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, 0);
        int[] intArray38 = new int[] { '4' };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray47 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray48 = new int[][] { intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, 0, 1, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray48);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 4389, 496, intArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 896 + "'", int9 == 896);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 896 + "'", int10 == 896);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 896 + "'", int11 == 896);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 896 + "'", int12 == 896);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-3) + "'", int28 == (-3));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[52]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
    }

    @Test
    public void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2485");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray26 = new int[] { (short) 1, 710, 30 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, (int) (byte) 0, 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, 0, (int) (byte) 0);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray60 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray69 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray76 = new int[] { '4' };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray76);
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[] intArray91 = new int[] { (byte) 100, 319 };
        int[][] intArray92 = new int[][] { intArray82, intArray85, intArray88, intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray76, (int) (byte) 0, 0, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, (int) (short) 1, intArray92);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (short) 1, 0, intArray92);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (short) 0, 0, intArray92);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 1, 0, intArray92);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, 1, (int) (byte) 1, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 500, (-5), intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2191 + "'", int27 == 2191);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2191 + "'", int28 == 2191);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[52]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 100 + "'", int95 == 100);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 52 + "'", int96 == 52);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 100 + "'", int97 == 100);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 2130 + "'", int98 == 2130);
    }

    @Test
    public void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2486");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass19 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2487");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass20 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2488");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 60, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
    }

    @Test
    public void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2489");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 4, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
    }

    @Test
    public void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2490");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray21 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[] intArray43 = new int[] { (byte) 100, 319 };
        int[][] intArray44 = new int[][] { intArray34, intArray37, intArray40, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (byte) 0, 0, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, (int) (short) 1, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 1, 0, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) (short) 1, 4, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
    }

    @Test
    public void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2491");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[][] intArray23 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 10, 496, intArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
    }

    @Test
    public void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2492");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray56 = new int[][] { intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 0, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 1, (int) (byte) 1, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 0, 0, intArray56);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 0, intArray56);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-5), 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-5) + "'", int60 == (-5));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 710 + "'", int61 == 710);
    }

    @Test
    public void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2493");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass19 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2494");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass22 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2495");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) -1, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
    }

    @Test
    public void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2496");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray29, (int) (byte) 0, 0);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray29, 0, (int) (byte) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray48 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray64 = new int[] { '4' };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[][] intArray80 = new int[][] { intArray70, intArray73, intArray76, intArray79 };
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, 0, intArray80);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (byte) 0, (int) (short) 1, intArray80);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (short) 1, 0, intArray80);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 0, 0, intArray80);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 1, 0, intArray80);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 12390, (int) (short) 100, intArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[52]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 52 + "'", int84 == 52);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
    }

    @Test
    public void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2497");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) -1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
    }

    @Test
    public void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2498");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 28, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2499");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-5), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
    }

    @Test
    public void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2500");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray33 = new int[] { (short) -1, 10, (byte) 100 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray49 = new int[] { '4' };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray58 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray59 = new int[][] { intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, 0, 1, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (byte) 1, (int) (byte) 1, intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray59);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) '4', intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[52]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
    }
}

