package WineProblem;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray29 = new int[][] { intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, (int) (byte) 1, intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, (int) (byte) 0, 0);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, (int) (byte) 0);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray55 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray64 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray71 = new int[] { '4' };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[][] intArray87 = new int[][] { intArray77, intArray80, intArray83, intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, (int) (byte) 0, 0, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, (int) (short) 1, intArray87);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (short) 1, 0, intArray87);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 0, 0, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '#', 500, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[52]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 52 + "'", int88 == 52);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 319 + "'", int89 == 319);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 100 + "'", int90 == 100);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass6 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2191 + "'", int5 == 2191);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass58 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass42 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray19 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray37 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray38 = new int[][] { intArray37 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, 0, 1, intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 1, (int) (byte) 1, intArray38);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 493, 12390, intArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 493 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 4 + "'", int40 == 4);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 100, 500, intArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, (int) (short) 0, (int) (short) 0);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray55 = new int[] { '4' };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[][] intArray71 = new int[][] { intArray61, intArray64, intArray67, intArray70 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (byte) 0, 0, intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, (int) (short) 1, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 2191, 500, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2191 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-3) + "'", int49 == (-3));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[52]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-5), 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 0);
        int[][] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-1), (int) (byte) 10, intArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-3) + "'", int57 == (-3));
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray35 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray44 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray51 = new int[] { '4' };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[][] intArray67 = new int[][] { intArray57, intArray60, intArray63, intArray66 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, 0, intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, (int) (short) 1, intArray67);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 1, 0, intArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 500, (int) (short) 1, intArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 500 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[52]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass20 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray53 = new int[] { '4' };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray63 = new int[][] { intArray62 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, 0, 1, intArray63);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) -1, 100, intArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[52]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray12 = new int[] {};
        int[] intArray13 = new int[] {};
        int[] intArray14 = new int[] {};
        int[][] intArray15 = new int[][] { intArray12, intArray13, intArray14 };
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 493, 896, intArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 493 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 896 + "'", int9 == 896);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(intArray15);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, (int) (short) 0);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, 0);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, 1);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[][] intArray76 = new int[][] { intArray66, intArray69, intArray72, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (byte) 0, 0, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, (int) (short) 1, intArray76);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 0, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) 'a', (int) 'a', intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 28 + "'", int46 == 28);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-3) + "'", int79 == (-3));
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass32 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray9 = new int[] { (short) -1, 10, (byte) 100 };
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray34 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray35 = new int[][] { intArray34 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, 0, 1, intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray9, (int) (byte) 1, (int) (byte) 1, intArray35);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) '4', (int) (byte) 1, intArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 97, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass30 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray38 = new int[] { '4' };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray47 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray48 = new int[][] { intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, 0, 1, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 1, (int) (byte) 1, intArray48);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 0, 0, intArray48);
        // The following exception was thrown during execution in test generation
        try {
            int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 52, 500, intArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[52]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass47 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 28 + "'", int44 == 28);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray29 = new int[][] { intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, (int) (byte) 1, intArray29);
        java.lang.Class<?> wildcardClass32 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray59 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4, 896, intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray28 = new int[] { (short) -1, 10, (byte) 100 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray58 = new int[][] { intArray37, intArray42, intArray47, intArray52, intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 1, 1, intArray58);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '#', 4389, intArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 30 + "'", int59 == 30);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 30, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray15 = new int[] { '4' };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray21 = new int[] { (byte) 100, 319 };
        int[] intArray24 = new int[] { (byte) 100, 319 };
        int[] intArray27 = new int[] { (byte) 100, 319 };
        int[] intArray30 = new int[] { (byte) 100, 319 };
        int[][] intArray31 = new int[][] { intArray21, intArray24, intArray27, intArray30 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (byte) 0, 0, intArray31);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-3), 493, intArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -3 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[52]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, (int) (byte) 0, 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, (int) (byte) 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray62 = new int[] { '4' };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[][] intArray78 = new int[][] { intArray68, intArray71, intArray74, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, 0, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (byte) 0, (int) (short) 1, intArray78);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (short) 1, 0, intArray78);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (short) 0, 0, intArray78);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 1, 0, intArray78);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 52, (int) (short) -1, intArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[52]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 52 + "'", int82 == 52);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, (int) (byte) 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, (int) (byte) 0);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray37 = new int[][] { intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 1, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 0, 0, intArray37);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 4389, (-5), intArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4389 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-4), (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass17 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (short) 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, 0);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 1, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 2000, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2000 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray9 = new int[] { '4' };
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (byte) 0, 0);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, (int) (byte) 0);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray37 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray53 = new int[] { '4' };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[][] intArray69 = new int[][] { intArray59, intArray62, intArray65, intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, 0, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (byte) 0, (int) (short) 1, intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, 0, intArray69);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, 0, intArray69);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray9, (int) (byte) 1, 0, intArray69);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, (int) (byte) 1, intArray69);
        java.lang.Class<?> wildcardClass76 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2191 + "'", int5 == 2191);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[52]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[52]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2130 + "'", int75 == 2130);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass19 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass30 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 0, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray52);
        int[][] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 52, 2000, intArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 809);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[][] intArray30 = new int[][] { intArray20, intArray23, intArray26, intArray29 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 0, 0, intArray30);
        int[] intArray37 = new int[] { (short) -1, 10, (byte) 100 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray61 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray66 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray67 = new int[][] { intArray46, intArray51, intArray56, intArray61, intArray66 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, 1, intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 0, 0, intArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) ' ', (int) '#', intArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        int[] intArray0 = null;
        int[] intArray7 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray7);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray40 = new int[][] { intArray39 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 0, 1, intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 1, (int) (byte) 1, intArray40);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray7, (int) (short) 0, 0, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 30, 12390, intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[][] intArray62 = new int[][] { intArray52, intArray55, intArray58, intArray61 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (byte) 0, 0, intArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 710, (-1), intArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, (int) (byte) 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, (int) (byte) 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (short) 0, 0, intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 1, 0, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 496, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray22 = new int[] { '4' };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray28 = new int[] { (byte) 100, 319 };
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[][] intArray38 = new int[][] { intArray28, intArray31, intArray34, intArray37 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, 0, intArray38);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) '#', (int) (byte) 0, intArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[52]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass17 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 319, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        int[] intArray3 = new int[] { '4', 809, (-4) };
        int[] intArray9 = new int[] { (short) -1, 10, (byte) 100 };
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray50 = new int[][] { intArray29, intArray34, intArray39, intArray44, intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 1, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray9, (int) (short) 1, (int) (byte) 0, intArray50);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) -1, (-3), intArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[52, 809, -4]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-3), (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, (int) (short) 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-1), 493, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 1, intArray60);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass64 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) '#', 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass18 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray30 = new int[][] { intArray29 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, 0, 1, intArray30);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 319, (int) (short) -1, intArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 319 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray29 = new int[][] { intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray29);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) '4', 496, intArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray28 = new int[] { (short) 1, 2130, (-4), 30, 2003, 2003 };
        int[][] intArray29 = new int[][] { intArray28 };
        // The following exception was thrown during execution in test generation
        try {
            int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 2003, 2130, intArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2003 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 2130, -4, 30, 2003, 2003]");
        org.junit.Assert.assertNotNull(intArray29);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray36 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray52 = new int[] { '4' };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[][] intArray68 = new int[][] { intArray58, intArray61, intArray64, intArray67 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (byte) 0, 0, intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, (int) (short) 1, intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 1, 0, intArray68);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (short) 1, (int) (short) 0, intArray68);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-3), 28, intArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -3 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[52]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 496, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass18 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray55 = new int[] { (short) -1, 10, (byte) 100 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[][] intArray67 = new int[][] {};
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (byte) 0, (int) (short) 0, intArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 100, (int) (byte) -1, intArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-3) + "'", int68 == (-3));
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass35 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray50 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[][] intArray82 = new int[][] { intArray72, intArray75, intArray78, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, 0, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, (int) (short) 1, intArray82);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (short) 1, 0, intArray82);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (byte) 1, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 1, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 319 + "'", int86 == 319);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray15 = new int[] { '4' };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray21 = new int[] { (byte) 100, 319 };
        int[] intArray24 = new int[] { (byte) 100, 319 };
        int[] intArray27 = new int[] { (byte) 100, 319 };
        int[] intArray30 = new int[] { (byte) 100, 319 };
        int[][] intArray31 = new int[][] { intArray21, intArray24, intArray27, intArray30 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (byte) 0, 0, intArray31);
        int[] intArray38 = new int[] { (short) -1, 10, (byte) 100 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray68 = new int[][] { intArray47, intArray52, intArray57, intArray62, intArray67 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (short) 1, 1, intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 0, 0, intArray68);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 710, 30, intArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[52]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 30 + "'", int69 == 30);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray38 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 10, 12390, intArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 52, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass59 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) ' ', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-3), 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        int[] intArray0 = null;
        int[] intArray4 = new int[] { '4' };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[] intArray19 = new int[] { (byte) 100, 319 };
        int[][] intArray20 = new int[][] { intArray10, intArray13, intArray16, intArray19 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, 0, intArray20);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 319, 809, intArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass17 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass46 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 28 + "'", int44 == 28);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-1), 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) -1, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray49 = new int[][] { intArray28, intArray33, intArray38, intArray43, intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, 1, intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, (int) (short) 0, (int) (short) 0);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[][] intArray76 = new int[][] { intArray66, intArray69, intArray72, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (byte) 0, 0, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, (int) (short) 1, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2191, (int) (short) 100, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2191 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-3) + "'", int54 == (-3));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 12390, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[][] intArray55 = new int[][] {};
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (byte) 0, (int) (short) 0, intArray55);
        int[] intArray62 = new int[] { (short) -1, 10, (byte) 100 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray62, 0, (int) (short) 0);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray62, 0, 0);
        int[] intArray82 = new int[] { '4' };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray82);
        int[] intArray91 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray92 = new int[][] { intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray82, 0, 1, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, (int) (short) 1, intArray92);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 1, (int) (short) 1, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '4', 0, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-3) + "'", int56 == (-3));
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-3) + "'", int72 == (-3));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 319 + "'", int75 == 319);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[52]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 10 + "'", int93 == 10);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 10 + "'", int94 == 10);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 30 + "'", int95 == 30);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray54 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray60 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass65 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray30 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray31 = new int[][] { intArray30 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, 0, 1, intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray31);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 4, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, (int) (short) 0);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray70 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray71 = new int[][] { intArray70 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, 0, 1, intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 1, (int) (short) 1, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) ' ', 0, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-3) + "'", int53 == (-3));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 30 + "'", int73 == 30);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) -1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 1, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray48 = new int[][] { intArray27, intArray32, intArray37, intArray42, intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, 1, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (short) 0, (int) (short) 0);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray59 = new int[] { '4' };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[][] intArray75 = new int[][] { intArray65, intArray68, intArray71, intArray74 };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, 0, intArray75);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 0, (int) (short) 1, intArray75);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) 'a', (int) (short) 0, intArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-3) + "'", int53 == (-3));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[52]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 319 + "'", int77 == 319);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, (int) (byte) 0, 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, 0, (int) (byte) 0);
        int[] intArray33 = new int[] { '4' };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray42 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray43 = new int[][] { intArray42 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, 0, 1, intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 0, 0, intArray43);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 10, 97, intArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[52]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-1), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) 'a', 809);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray41 = new int[] { (short) -1, 10, (byte) 100 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[][] intArray79 = new int[][] { intArray69, intArray72, intArray75, intArray78 };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, 0, intArray79);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, (int) (short) 1, intArray79);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, 1, 0, intArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, (int) '4', intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray52 = new int[] { '4' };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray52, (int) (byte) 0, 0);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray52, 0, (int) (byte) 0);
        int[] intArray65 = new int[] { '4' };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray74 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray75 = new int[][] { intArray74 };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, 0, 1, intArray75);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (short) 0, 0, intArray75);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) ' ', (int) (byte) 1, intArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[52]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[52]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) '#', 809);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray50 = new int[][] { intArray29, intArray34, intArray39, intArray44, intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 1, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, (int) (short) 0, (int) (short) 0);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, 0, (int) (short) 1, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2000, 97, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2000 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray51 = new int[] { (short) -1, 10, (byte) 100 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray51, 0, (int) (short) 0);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray51, 0, 0);
        int[] intArray71 = new int[] { '4' };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray80 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray81 = new int[][] { intArray80 };
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, 0, 1, intArray81);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray81);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 10, 493, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-3) + "'", int61 == (-3));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-3) + "'", int67 == (-3));
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[52]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-3), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray51 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray51, 0, 0);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray62 = new int[] { '4' };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray71 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray72 = new int[][] { intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, 0, 1, intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, 0, 1, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-4), (int) (short) 1, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -4 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 500 + "'", int54 == 500);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 493 + "'", int55 == 493);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 493 + "'", int56 == 493);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 493 + "'", int57 == 493);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 493 + "'", int58 == 493);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[52]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray56 = new int[][] { intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 0, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 1, (int) (byte) 1, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 0, 0, intArray56);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 0, intArray56);
        java.lang.Class<?> wildcardClass61 = intArray56.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-5) + "'", int60 == (-5));
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) '4', 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 2000, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, 0, (int) (short) 0);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, 0, 0);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray53 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray54 = new int[][] { intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, 0, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (byte) 0, (int) (short) 1, intArray54);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2000, 52, intArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2000 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-3) + "'", int40 == (-3));
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray56 = new int[][] { intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 0, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 1, (int) (byte) 1, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 0, 0, intArray56);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 0, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 500, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-5) + "'", int60 == (-5));
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (-3), (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) -1, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray15 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, (int) (short) 0, (int) (short) 0);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray33 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray40 = new int[] { (short) -1, 10, (byte) 100 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray65 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray66 = new int[][] { intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, 0, 1, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (byte) 1, (int) (byte) 1, intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 0, 0, intArray66);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, 0, 0, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (-5), 28, intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-5) + "'", int20 == (-5));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 710 + "'", int22 == 710);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 710 + "'", int23 == 710);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 710 + "'", int24 == 710);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 710 + "'", int25 == 710);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 710 + "'", int26 == 710);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-5) + "'", int70 == (-5));
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray15 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray20 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray25 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray30 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray36 = new int[][] { intArray15, intArray20, intArray25, intArray30, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, 1, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, (int) (short) 0, (int) (short) 0);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray47 = new int[] { '4' };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[][] intArray63 = new int[][] { intArray53, intArray56, intArray59, intArray62 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (byte) 0, 0, intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 0, (int) (short) 1, intArray63);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 97, (int) (short) 0, intArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-3) + "'", int41 == (-3));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[52]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray77);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, 0, intArray77);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 0, intArray77);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 1, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 52 + "'", int84 == 52);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 52 + "'", int85 == 52);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, (int) (byte) 0, 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, 0, (int) (byte) 0);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray39 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray48 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray55 = new int[] { '4' };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[][] intArray71 = new int[][] { intArray61, intArray64, intArray67, intArray70 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (byte) 0, 0, intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (byte) 0, (int) (short) 1, intArray71);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (short) 1, 0, intArray71);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 0, 0, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 710, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[52]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (short) 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, 0);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 1, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray77);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, 0, intArray77);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 10, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), 30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray34 = new int[] { '4' };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray44 = new int[][] { intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 0, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 1, (int) (byte) 1, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 100, (int) (byte) 100, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[52]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 30 + "'", int46 == 30);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) '#', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, (int) (short) 0, (int) (short) 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { (short) -1, 10, (byte) 100 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray70 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray71 = new int[][] { intArray70 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, 0, 1, intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 1, (int) (byte) 1, intArray71);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (short) 0, 0, intArray71);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, 0, 0, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) 'a', (int) (byte) -1, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 710 + "'", int22 == 710);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-5) + "'", int25 == (-5));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 710 + "'", int26 == 710);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 710 + "'", int27 == 710);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 710 + "'", int28 == 710);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 710 + "'", int29 == 710);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 710 + "'", int30 == 710);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 710 + "'", int31 == 710);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 30 + "'", int73 == 30);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2000 + "'", int74 == 2000);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 30, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass39 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[][] intArray21 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 809, 97, intArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray11, (int) (byte) 0, 0);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray11, 0, (int) (byte) 0);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray30 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[][] intArray62 = new int[][] { intArray52, intArray55, intArray58, intArray61 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (byte) 0, 0, intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (byte) 0, (int) (short) 1, intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 0, intArray62);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (short) 0, 0, intArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 10, (int) '4', intArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 10, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray21 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray26 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray31 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray42 = new int[][] { intArray21, intArray26, intArray31, intArray36, intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (short) 1, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray12, (int) (short) 0, (int) (short) 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray53 = new int[] { '4' };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[][] intArray69 = new int[][] { intArray59, intArray62, intArray65, intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, 0, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, 0, (int) (short) 1, intArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 0, (-5), intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-3) + "'", int47 == (-3));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[52]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 809, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        int[] intArray4 = new int[] { '4', 809, 710, 2191 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray20 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray25 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray30 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray41 = new int[][] { intArray20, intArray25, intArray30, intArray35, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (short) 1, 1, intArray41);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) -1, 4389, intArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 809, 710, 2191]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 12564 + "'", int5 == 12564);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray38 = new int[] { (byte) 100, 319 };
        int[] intArray41 = new int[] { (byte) 100, 319 };
        int[] intArray44 = new int[] { (byte) 100, 319 };
        int[] intArray47 = new int[] { (byte) 100, 319 };
        int[][] intArray48 = new int[][] { intArray38, intArray41, intArray44, intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 0, 0, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[][] intArray89 = new int[][] { intArray79, intArray82, intArray85, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, (int) (byte) 0, 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, (int) (short) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (short) 1, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, (int) (short) 0, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 97, 2130, intArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 319 + "'", int91 == 319);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '#', (-5), intArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray36 = new int[] { (byte) 100, 319 };
        int[] intArray39 = new int[] { (byte) 100, 319 };
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[][] intArray46 = new int[][] { intArray36, intArray39, intArray42, intArray45 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 0, 0, intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (byte) 0, (int) (short) 1, intArray46);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 1, (int) '4', intArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass60 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 10, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray50 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[][] intArray82 = new int[][] { intArray72, intArray75, intArray78, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, 0, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, (int) (short) 1, intArray82);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (short) 1, 0, intArray82);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (byte) 1, intArray82);
        java.lang.Class<?> wildcardClass87 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 319 + "'", int86 == 319);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass18 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) ' ', 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) -1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray51 = new int[] { (short) -1, 10, (byte) 100 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray67 = new int[] { '4' };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int[] intArray76 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray77 = new int[][] { intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray67, 0, 1, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 1, (int) (byte) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (short) 0, 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-1), (int) 'a', intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[52]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 30 + "'", int79 == 30);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2000 + "'", int80 == 2000);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int[] intArray52 = new int[] { (short) -1, 10, (byte) 100 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray67 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int[] intArray74 = new int[] { '4' };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray74);
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[] intArray89 = new int[] { (byte) 100, 319 };
        int[][] intArray90 = new int[][] { intArray80, intArray83, intArray86, intArray89 };
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray74, (int) (byte) 0, 0, intArray90);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray67, (int) (byte) 0, (int) (short) 1, intArray90);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, 1, 0, intArray90);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 10, (int) (short) 1, intArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[52]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 319 + "'", int92 == 319);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-4), 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, 809);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray16 = new int[] { (short) 1, 710, 30 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray22 = new int[] { '4' };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray31, (int) (byte) 0, 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray31, 0, (int) (byte) 0);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray50 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[][] intArray82 = new int[][] { intArray72, intArray75, intArray78, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, 0, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, (int) (short) 1, intArray82);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (short) 1, 0, intArray82);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (short) 0, 0, intArray82);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 1, 0, intArray82);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 1, (int) (byte) 1, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-5), 1, intArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2191 + "'", int17 == 2191);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2191 + "'", int18 == 2191);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[52]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2130 + "'", int88 == 2130);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[] intArray38 = new int[] { (byte) 100, 319 };
        int[] intArray41 = new int[] { (byte) 100, 319 };
        int[][] intArray42 = new int[][] { intArray32, intArray35, intArray38, intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (byte) 0, 0, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (byte) 0, (int) (short) 1, intArray42);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) '#', 100, intArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass19 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass8 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 12390 + "'", int7 == 12390);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray37 = new int[][] { intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 1, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 1, (int) (byte) 1, intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray37);
        int[] intArray47 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray54 = new int[] { (short) -1, 10, (byte) 100 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray70 = new int[] { '4' };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray79 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray80 = new int[][] { intArray79 };
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, 0, 1, intArray80);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 1, (int) (byte) 1, intArray80);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (short) 0, 0, intArray80);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 12390, (int) (byte) 1, intArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 12390 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[52]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 30 + "'", int82 == 30);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2000 + "'", int83 == 2000);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-1), 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray26 = new int[] { (short) 1, 710, 30 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, (int) (byte) 0, 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, 0, (int) (byte) 0);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray60 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray69 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray76 = new int[] { '4' };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray76);
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[] intArray91 = new int[] { (byte) 100, 319 };
        int[][] intArray92 = new int[][] { intArray82, intArray85, intArray88, intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray76, (int) (byte) 0, 0, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, (int) (short) 1, intArray92);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (short) 1, 0, intArray92);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (short) 0, 0, intArray92);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 1, 0, intArray92);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, 1, (int) (byte) 1, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 100, (int) (byte) 10, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2191 + "'", int27 == 2191);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2191 + "'", int28 == 2191);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[52]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 100 + "'", int95 == 100);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 52 + "'", int96 == 52);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 100 + "'", int97 == 100);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 2130 + "'", int98 == 2130);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[][] intArray24 = new int[][] {};
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (byte) 0, (int) (short) 0, intArray24);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 100, (int) 'a', intArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray46 = new int[] { (byte) 100, 319 };
        int[] intArray49 = new int[] { (byte) 100, 319 };
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[][] intArray56 = new int[][] { intArray46, intArray49, intArray52, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (byte) 0, 0, intArray56);
        int[] intArray63 = new int[] { (short) -1, 10, (byte) 100 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray77 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray82 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray87 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray92 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray93 = new int[][] { intArray72, intArray77, intArray82, intArray87, intArray92 };
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (short) 1, 1, intArray93);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (short) 0, 0, intArray93);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 10, 496, intArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 30 + "'", int94 == 30);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 52 + "'", int95 == 52);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 100, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 10, 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass29 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray22 = new int[] { (short) 1, 710, 30 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray37 = new int[] { '4' };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray37, (int) (byte) 0, 0);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray37, 0, (int) (byte) 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray65 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray72 = new int[] { '4' };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray72);
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[][] intArray88 = new int[][] { intArray78, intArray81, intArray84, intArray87 };
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray72, (int) (byte) 0, 0, intArray88);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, (int) (byte) 0, (int) (short) 1, intArray88);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (short) 1, 0, intArray88);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 0, 0, intArray88);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (byte) 1, 0, intArray88);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, 1, (int) (byte) 1, intArray88);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 809, (int) ' ', intArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 809 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2191 + "'", int23 == 2191);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2191 + "'", int24 == 2191);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[52]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[52]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 52 + "'", int89 == 52);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 319 + "'", int90 == 319);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 2130 + "'", int94 == 2130);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, (int) (byte) 0, 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, 0, (int) (byte) 0);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray60 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray69 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray76 = new int[] { '4' };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray76);
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[] intArray91 = new int[] { (byte) 100, 319 };
        int[][] intArray92 = new int[][] { intArray82, intArray85, intArray88, intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray76, (int) (byte) 0, 0, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, (int) (short) 1, intArray92);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (short) 1, 0, intArray92);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (short) 0, 0, intArray92);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 1, 0, intArray92);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 0, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2130, (int) 'a', intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2130 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[52]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 100 + "'", int95 == 100);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 52 + "'", int96 == 52);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 100 + "'", int97 == 100);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 52 + "'", int98 == 52);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray14 = new int[] { 4389 };
        int[] intArray16 = new int[] { 4389 };
        int[] intArray18 = new int[] { 4389 };
        int[] intArray20 = new int[] { 4389 };
        int[] intArray22 = new int[] { 4389 };
        int[] intArray24 = new int[] { 4389 };
        int[][] intArray25 = new int[][] { intArray14, intArray16, intArray18, intArray20, intArray22, intArray24 };
        // The following exception was thrown during execution in test generation
        try {
            int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, (int) (byte) -1, intArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[4389]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[4389]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[4389]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[4389]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[4389]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[4389]");
        org.junit.Assert.assertNotNull(intArray25);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray73 = new int[][] { intArray52, intArray57, intArray62, intArray67, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 1, 1, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, (int) (byte) 0, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 28, 493, intArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 28 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 30 + "'", int74 == 30);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray30 = new int[][] { intArray29 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, 0, 1, intArray30);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 28, (int) '#', intArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 28 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        java.lang.Class<?> wildcardClass35 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass36 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass10 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, (int) (short) 0);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray41 = new int[] { (short) -1, 10, (byte) 100 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray51 = new int[] { '4' };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray60 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray61 = new int[][] { intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, 0, 1, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (byte) 0, 0, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 4, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 10, (int) (byte) 100, intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-3) + "'", int33 == (-3));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[52]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-3) + "'", int63 == (-3));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray21 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray42 = new int[][] { intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, 0, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, 0, 1, intArray42);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 2000, (int) (short) 0, intArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2000 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 500 + "'", int24 == 500);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 493 + "'", int25 == 493);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 493 + "'", int26 == 493);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 493 + "'", int27 == 493);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 493 + "'", int28 == 493);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-5), 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, (int) (short) 0, (int) (short) 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { (short) -1, 10, (byte) 100 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray70 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray71 = new int[][] { intArray70 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, 0, 1, intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 1, (int) (byte) 1, intArray71);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (short) 0, 0, intArray71);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, 0, 0, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 97, (int) (byte) 1, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 710 + "'", int22 == 710);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-5) + "'", int25 == (-5));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 710 + "'", int26 == 710);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 710 + "'", int27 == 710);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 710 + "'", int28 == 710);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 710 + "'", int29 == 710);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 710 + "'", int30 == 710);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 710 + "'", int31 == 710);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 30 + "'", int73 == 30);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2000 + "'", int74 == 2000);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 1, intArray60);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (-5), 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[][] intArray24 = new int[][] {};
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (byte) 0, (int) (short) 0, intArray24);
        int[] intArray31 = new int[] { (short) -1, 10, (byte) 100 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray31, 0, (int) (short) 0);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray31, 0, 0);
        int[] intArray51 = new int[] { '4' };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray60 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray61 = new int[][] { intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, 0, 1, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (short) 1, (int) (short) 1, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 2130, (int) 'a', intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2130 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-3) + "'", int41 == (-3));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-3) + "'", int47 == (-3));
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[52]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray77);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, 0, intArray77);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass16 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 1, intArray60);
        int[] intArray69 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray78 = new int[] { '4' };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray78);
        int[] intArray87 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray88 = new int[][] { intArray87 };
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray78, 0, 1, intArray88);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, 1, (int) (byte) 1, intArray88);
        // The following exception was thrown during execution in test generation
        try {
            int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 10, 2000, intArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2000 + "'", int73 == 2000);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2000 + "'", int74 == 2000);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[52]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 10 + "'", int89 == 10);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 4 + "'", int90 == 4);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { '4' };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray21 = new int[] { (byte) 100, 319 };
        int[] intArray24 = new int[] { (byte) 100, 319 };
        int[] intArray27 = new int[] { (byte) 100, 319 };
        int[] intArray30 = new int[] { (byte) 100, 319 };
        int[][] intArray31 = new int[][] { intArray21, intArray24, intArray27, intArray30 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (byte) 0, 0, intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray40 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[][] intArray72 = new int[][] { intArray62, intArray65, intArray68, intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, 0, intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, (int) (byte) 0, (int) (short) 1, intArray72);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (short) 1, 0, intArray72);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (short) 0, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) '#', 12390, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[52]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass31 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray54 = new int[][] { intArray33, intArray38, intArray43, intArray48, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray54);
        int[] intArray62 = new int[] { (short) -1, 10, (byte) 100 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray72 = new int[] { '4' };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray72);
        int[] intArray81 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray82 = new int[][] { intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray72, 0, 1, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, 0, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 66315, (int) (byte) -1, intArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 66315 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[52]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-3) + "'", int84 == (-3));
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 30, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[][] intArray34 = new int[][] {};
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 0, intArray34);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 52, 2003, intArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-3) + "'", int35 == (-3));
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (short) 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, 0);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, 1);
        int[] intArray48 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray55 = new int[] { '4' };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[][] intArray71 = new int[][] { intArray61, intArray64, intArray67, intArray70 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (byte) 0, 0, intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (byte) 0, (int) (short) 1, intArray71);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, 0, 0, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 809, 66315, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 809 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 28 + "'", int41 == 28);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[52]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-3) + "'", int74 == (-3));
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray22 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[] intArray38 = new int[] { (byte) 100, 319 };
        int[] intArray41 = new int[] { (byte) 100, 319 };
        int[] intArray44 = new int[] { (byte) 100, 319 };
        int[][] intArray45 = new int[][] { intArray35, intArray38, intArray41, intArray44 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, 0, intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 1, intArray45);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2000, (-1), intArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2000 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray25 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray34 = new int[] { '4' };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray44 = new int[][] { intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 0, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, 1, (int) (byte) 1, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 809, (-1), intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 809 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[52]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-1), 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (short) 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray50 = new int[][] { intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, 0, 1, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 1, (int) (short) 1, intArray50);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 496, (int) (short) 10, intArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 30 + "'", int52 == 30);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray23 = new int[] { (short) 1, 710, 30 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { '4' };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray38, (int) (byte) 0, 0);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray38, 0, (int) (byte) 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[][] intArray89 = new int[][] { intArray79, intArray82, intArray85, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, (int) (byte) 0, 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, (int) (short) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (short) 1, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (short) 0, 0, intArray89);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 1, 0, intArray89);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 1, (int) (byte) 1, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 710, 496, intArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2191 + "'", int24 == 2191);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2191 + "'", int25 == 2191);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[52]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 319 + "'", int91 == 319);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 2130 + "'", int95 == 2130);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int[] intArray35 = new int[] { (short) -1, 10, (byte) 100 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[][] intArray47 = new int[][] {};
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (byte) 0, (int) (short) 0, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 100, (int) (byte) 10, intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        int[] intArray70 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray77 = new int[][] { intArray70, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[][] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-4), 4389, intArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 97 + "'", int78 == 97);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-5) + "'", int79 == (-5));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 710 + "'", int80 == 710);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (byte) 0, 0);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray73 = new int[][] { intArray52, intArray57, intArray62, intArray67, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 1, 1, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, (int) (byte) 0, intArray73);
        int[] intArray83 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray89 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray90 = new int[][] { intArray83, intArray89 };
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, (int) (byte) 0, intArray90);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 0, 1, intArray90);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 0, 496, intArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 30 + "'", int74 == 30);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 97 + "'", int91 == 97);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-5) + "'", int92 == (-5));
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray37 = new int[][] { intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 1, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 1, (int) (byte) 1, intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[][] intArray44 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (-5), intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray9 = new int[] { '4' };
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (byte) 0, 0);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, (int) (byte) 0);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray37 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray53 = new int[] { '4' };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[][] intArray69 = new int[][] { intArray59, intArray62, intArray65, intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, 0, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (byte) 0, (int) (short) 1, intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, 0, intArray69);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, 0, intArray69);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray9, (int) (byte) 1, 0, intArray69);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, (int) (byte) 1, intArray69);
        java.lang.Class<?> wildcardClass76 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2191 + "'", int5 == 2191);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[52]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[52]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2130 + "'", int75 == 2130);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[] intArray43 = new int[] { (byte) 100, 319 };
        int[] intArray46 = new int[] { (byte) 100, 319 };
        int[][] intArray47 = new int[][] { intArray37, intArray40, intArray43, intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (byte) 0, 0, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 496, 2130, intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 28, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray54 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray60 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 2191, intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray39 = new int[] { (short) -1, 10, (byte) 100 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray39, 0, (int) (short) 0);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray57 = new int[] { (short) -1, 10, (byte) 100 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray67 = new int[] { '4' };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int[] intArray76 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray77 = new int[][] { intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray67, 0, 1, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (byte) 0, 0, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, 0, 4, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 100, 710, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-3) + "'", int49 == (-3));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[52]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-3) + "'", int79 == (-3));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray26 = new int[][] { intArray25 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 1, intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 1, intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass30 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 493 + "'", int29 == 493);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) '#', 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 12390 + "'", int7 == 12390);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray22 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray31 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray38 = new int[] { '4' };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray44 = new int[] { (byte) 100, 319 };
        int[] intArray47 = new int[] { (byte) 100, 319 };
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[][] intArray54 = new int[][] { intArray44, intArray47, intArray50, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, 0, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (byte) 0, (int) (short) 1, intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 1, 0, intArray54);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) '#', (-3), intArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2000 + "'", int33 == 2000);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[52]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray9 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray28 = new int[][] { intArray27 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 0, 1, intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray9, 1, (int) (byte) 1, intArray28);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 1, (int) (short) 100, intArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 12564, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, 0);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray45 = new int[] { (short) -1, 10, (byte) 100 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray45, 0, (int) (short) 0);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray45, 0, 0);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray45, 0, 1);
        int[] intArray71 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray78 = new int[] { '4' };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray78);
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[] intArray90 = new int[] { (byte) 100, 319 };
        int[] intArray93 = new int[] { (byte) 100, 319 };
        int[][] intArray94 = new int[][] { intArray84, intArray87, intArray90, intArray93 };
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray78, (int) (byte) 0, 0, intArray94);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, (int) (byte) 0, (int) (short) 1, intArray94);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 0, intArray94);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (byte) 0, (int) (short) 0, intArray94);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 809, 493, intArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 809 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 500 + "'", int26 == 500);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 493 + "'", int27 == 493);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 493 + "'", int28 == 493);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 493 + "'", int29 == 493);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 493 + "'", int30 == 493);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 493 + "'", int31 == 493);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 493 + "'", int32 == 493);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 493 + "'", int33 == 493);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 493 + "'", int34 == 493);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 493 + "'", int35 == 493);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 493 + "'", int36 == 493);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 493 + "'", int37 == 493);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 493 + "'", int38 == 493);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 493 + "'", int39 == 493);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-3) + "'", int61 == (-3));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 28 + "'", int64 == 28);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2000 + "'", int73 == 2000);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2000 + "'", int74 == 2000);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[52]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 52 + "'", int95 == 52);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 319 + "'", int96 == 319);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-3) + "'", int97 == (-3));
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 500 + "'", int98 == 500);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 710, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        int[] intArray66 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray73 = new int[][] { intArray66, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 10, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 97 + "'", int74 == 97);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray23 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, (int) (short) 0, (int) (short) 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, (int) (short) 1);
        int[] intArray37 = new int[] { (short) -1, 10, (byte) 100 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray48 = new int[] { (short) -1, 10, (byte) 100 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray77 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray78 = new int[][] { intArray57, intArray62, intArray67, intArray72, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (short) 1, 1, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, (int) (byte) 0, intArray78);
        int[] intArray88 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray94 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray95 = new int[][] { intArray88, intArray94 };
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, (int) (byte) 0, intArray95);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, (int) (short) 1, intArray95);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 66315, 493, intArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 66315 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 710 + "'", int24 == 710);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 710 + "'", int25 == 710);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-5) + "'", int28 == (-5));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-4) + "'", int31 == (-4));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 30 + "'", int79 == 30);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 97 + "'", int96 == 97);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-5) + "'", int97 == (-5));
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray29 = new int[][] { intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, (int) (byte) 1, intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) ' ', 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass18 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        int[] intArray66 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray73 = new int[][] { intArray66, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass80 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 97 + "'", int74 == 97);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass17 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 100, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        int[] intArray5 = new int[] { 30, 28, (short) 10, 'a', '4' };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass8 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[30, 28, 10, 97, 52]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 809 + "'", int6 == 809);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 809 + "'", int7 == 809);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray37 = new int[][] { intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 1, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 1, (int) (byte) 1, intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass42 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        int[] intArray0 = null;
        int[] intArray4 = new int[] { '4' };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 0, 0);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 0);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray27 = new int[][] { intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, 0, 1, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray27);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 493, 4, intArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) '4', (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        java.lang.Class<?> wildcardClass40 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int[][] intArray18 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 809, 10, intArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, (int) (byte) 0, 0);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, (int) (byte) 0);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray46 = new int[][] { intArray45 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 0, 1, intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 0, 0, intArray46);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 100, (-1), intArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass13 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        int[] intArray0 = null;
        int[] intArray4 = new int[] { '4' };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[] intArray19 = new int[] { (byte) 100, 319 };
        int[][] intArray20 = new int[][] { intArray10, intArray13, intArray16, intArray19 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, 0, intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, (int) (short) 0, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 28, (int) (short) 1, intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, 0, (int) (short) 0);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, 0, 0);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray36 = new int[][] { intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, 0, 1, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (byte) 0, (int) (short) 1, intArray36);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) (short) 100, 2000, intArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-3) + "'", int22 == (-3));
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass51 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray59 = new int[] { '4' };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray68 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray69 = new int[][] { intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, 0, 1, intArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) ' ', (-1), intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[52]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        java.lang.Class<?> wildcardClass45 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray48 = new int[][] { intArray27, intArray32, intArray37, intArray42, intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, 1, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[][] intArray89 = new int[][] { intArray79, intArray82, intArray85, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, (int) (byte) 0, 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, (int) (short) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (short) 1, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, (int) (short) 0, intArray89);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, 1, intArray89);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 30, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 319 + "'", int91 == 319);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-3) + "'", int93 == (-3));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 710 + "'", int95 == 710);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 710, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) -1, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray53 = new int[][] { intArray32, intArray37, intArray42, intArray47, intArray52 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 1, 1, intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, (int) (short) 0, (int) (short) 0);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray64 = new int[] { '4' };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[][] intArray80 = new int[][] { intArray70, intArray73, intArray76, intArray79 };
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, 0, intArray80);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, (int) (short) 1, intArray80);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) 'a', 4, intArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-3) + "'", int58 == (-3));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[52]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray35 = new int[] { (short) -1, 10, (byte) 100 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray64 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray65 = new int[][] { intArray44, intArray49, intArray54, intArray59, intArray64 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 1, 1, intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, (int) (short) 0, (int) (short) 0);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray76 = new int[] { '4' };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray76);
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[] intArray91 = new int[] { (byte) 100, 319 };
        int[][] intArray92 = new int[][] { intArray82, intArray85, intArray88, intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray76, (int) (byte) 0, 0, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, 0, (int) (short) 1, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '#', 0, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 30 + "'", int66 == 30);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-3) + "'", int70 == (-3));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[52]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[][] intArray18 = new int[][] {};
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (byte) 0, (int) (short) 0, intArray18);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 10, 100, intArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray24 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray31 = new int[] { (short) -1, 10, (byte) 100 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray47 = new int[] { '4' };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray56 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray57 = new int[][] { intArray56 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, 0, 1, intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (byte) 1, (int) (byte) 1, intArray57);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 0, 0, intArray57);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 496, 0, intArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[52]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 30 + "'", int59 == 30);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray36 = new int[] { (short) -1, 10, (byte) 100 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray47 = new int[] { (short) -1, 10, (byte) 100 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray61 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray66 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray71 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray76 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray77 = new int[][] { intArray56, intArray61, intArray66, intArray71, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (short) 1, 1, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 1, (int) (byte) 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) ' ', (int) (short) 100, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 30 + "'", int78 == 30);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray22 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, (int) (short) 0, (int) (short) 0);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray40 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray47 = new int[] { (short) -1, 10, (byte) 100 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray72 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray73 = new int[][] { intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, 0, 1, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (byte) 1, (int) (byte) 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (short) 0, 0, intArray73);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, 0, 0, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 30, 4389, intArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 30 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 710 + "'", int23 == 710);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 710 + "'", int24 == 710);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-5) + "'", int27 == (-5));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 710 + "'", int28 == 710);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 710 + "'", int29 == 710);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 710 + "'", int30 == 710);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 710 + "'", int31 == 710);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 710 + "'", int32 == 710);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 710 + "'", int33 == 710);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 30 + "'", int75 == 30);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2000 + "'", int76 == 2000);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-5) + "'", int77 == (-5));
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 28, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, 0, (int) (short) 0);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, 0, 0);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, 0, 1);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray52 = new int[] { '4' };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[][] intArray68 = new int[][] { intArray58, intArray61, intArray64, intArray67 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (byte) 0, 0, intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, (int) (short) 1, intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 0, intArray68);
        // The following exception was thrown during execution in test generation
        try {
            int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 1, 319, intArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 319 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-3) + "'", int29 == (-3));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-3) + "'", int35 == (-3));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 28 + "'", int38 == 28);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[52]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-3) + "'", int71 == (-3));
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { '4' };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray24 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray25 = new int[][] { intArray24 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, 0, 1, intArray25);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (-5), intArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[52]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray31 = new int[] { (short) -1, 10, (byte) 100 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray47 = new int[] { '4' };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray56 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray57 = new int[][] { intArray56 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, 0, 1, intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (byte) 1, (int) (byte) 1, intArray57);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[52]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 30 + "'", int59 == 30);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 100, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray77);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, 0, intArray77);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 0, intArray77);
        java.lang.Class<?> wildcardClass84 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass33 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        int[] intArray5 = new int[] { 30, 28, (short) 10, 'a', '4' };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass7 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[30, 28, 10, 97, 52]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 809 + "'", int6 == 809);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[][] intArray85 = new int[][] { intArray75, intArray78, intArray81, intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, 0, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, (int) (short) 1, intArray85);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 1, 0, intArray85);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 0, (int) (short) 0, intArray85);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) (short) 0, intArray85);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-3) + "'", int89 == (-3));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        int[] intArray6 = new int[] { 809, (-5), 319, (short) 1, 493, 28 };
        int[] intArray12 = new int[] { (short) 1, 710, 30 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, (int) (byte) 0, 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, (int) (byte) 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray62 = new int[] { '4' };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[][] intArray78 = new int[][] { intArray68, intArray71, intArray74, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, 0, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (byte) 0, (int) (short) 1, intArray78);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (short) 1, 0, intArray78);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (short) 0, 0, intArray78);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 1, 0, intArray78);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, 1, (int) (byte) 1, intArray78);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 1, 4, intArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[809, -5, 319, 1, 493, 28]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2191 + "'", int13 == 2191);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2191 + "'", int14 == 2191);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[52]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 52 + "'", int82 == 52);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2130 + "'", int84 == 2130);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 710, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 493, (int) (byte) 1, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 493 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        int[] intArray5 = new int[] { 2191, 30, 710, (-4), 12390 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { '4' };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray31 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray32 = new int[][] { intArray31 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, 0, 1, intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 1, (int) (byte) 1, intArray32);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 100, 2000, intArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[2191, 30, 710, -4, 12390]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 66315 + "'", int6 == 66315);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2000 + "'", int17 == 2000);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2000 + "'", int18 == 2000);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[52]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 0, 1);
        int[] intArray22 = new int[] { 2130, 97, 4389, (byte) 1, 12564 };
        int[][] intArray23 = new int[][] { intArray22 };
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 100, 30, intArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 496 + "'", int14 == 496);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[2130, 97, 4389, 1, 12564]");
        org.junit.Assert.assertNotNull(intArray23);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[][] intArray33 = new int[][] {};
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, (int) (short) 0, intArray33);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 10, (-4), intArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray62 = new int[] { (short) -1, 10, (byte) 100 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray71 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray76 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray81 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray86 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray91 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray92 = new int[][] { intArray71, intArray76, intArray81, intArray86, intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (short) 1, 1, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 809, 100, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 809 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 30 + "'", int93 == 30);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int[] intArray32 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray48 = new int[] { '4' };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[][] intArray64 = new int[][] { intArray54, intArray57, intArray60, intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (byte) 0, 0, intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (byte) 0, (int) (short) 1, intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, 0, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 0, 66315, intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 66315 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2000 + "'", int33 == 2000);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[52]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray40 = new int[][] { intArray39 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 0, 1, intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 1, (int) (byte) 1, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) 'a', intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int[] intArray41 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray48 = new int[] { (short) -1, 10, (byte) 100 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray64 = new int[] { '4' };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray73 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray74 = new int[][] { intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, 0, 1, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (byte) 1, (int) (byte) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (short) 0, 0, intArray74);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 100, (-5), intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[52]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 30 + "'", int76 == 30);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2000 + "'", int77 == 2000);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 1, 0, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-5), 896, intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) -1, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 319 + "'", int85 == 319);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray24 = new int[] { (byte) 100, 319 };
        int[] intArray27 = new int[] { (byte) 100, 319 };
        int[] intArray30 = new int[] { (byte) 100, 319 };
        int[] intArray33 = new int[] { (byte) 100, 319 };
        int[][] intArray34 = new int[][] { intArray24, intArray27, intArray30, intArray33 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, 0, intArray34);
        int[] intArray41 = new int[] { (short) -1, 10, (byte) 100 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray60 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray65 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray70 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray71 = new int[][] { intArray50, intArray55, intArray60, intArray65, intArray70 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (short) 1, 1, intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, 0, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) ' ', 4, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 30 + "'", int72 == 30);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        int[] intArray66 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray73 = new int[][] { intArray66, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass79 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 97 + "'", int74 == 97);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray26 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2000, 710, intArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray56 = new int[][] { intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 0, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 1, (int) (byte) 1, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 0, 0, intArray56);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 0, intArray56);
        int[] intArray66 = new int[] { (short) -1, 10, (byte) 100 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray82 = new int[] { '4' };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray82);
        int[] intArray91 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray92 = new int[][] { intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray82, 0, 1, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 1, (int) (byte) 1, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 97, 28, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-5) + "'", int60 == (-5));
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 319 + "'", int75 == 319);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 319 + "'", int77 == 319);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[52]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 10 + "'", int93 == 10);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 30 + "'", int94 == 30);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2003, 10, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2003 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray10 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) '4', intArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass25 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 100, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (short) 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, 0);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray52);
        java.lang.Class<?> wildcardClass56 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray61 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray62 = new int[][] { intArray41, intArray46, intArray51, intArray56, intArray61 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, 1, intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (short) 1, (int) (byte) 0, intArray62);
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray78 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray79 = new int[][] { intArray72, intArray78 };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (short) 1, (int) (byte) 0, intArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 4, (-1), intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 30 + "'", int63 == 30);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 97 + "'", int80 == 97);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (-5), (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        int[] intArray0 = null;
        int[] intArray4 = new int[] { '4' };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 0, 0);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 0);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray27 = new int[][] { intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, 0, 1, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray27);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 100, (-3), intArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int[] intArray31 = new int[] { (short) -1, 10, (byte) 100 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[][] intArray43 = new int[][] {};
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (byte) 0, (int) (short) 0, intArray43);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 12390, 28, intArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 12390 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-3) + "'", int44 == (-3));
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray40 = new int[][] {};
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-3), (int) (short) -1, intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -3 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray40);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray25 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray38 = new int[] { (byte) 100, 319 };
        int[] intArray41 = new int[] { (byte) 100, 319 };
        int[] intArray44 = new int[] { (byte) 100, 319 };
        int[] intArray47 = new int[] { (byte) 100, 319 };
        int[][] intArray48 = new int[][] { intArray38, intArray41, intArray44, intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 0, 0, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, (int) (short) 1, intArray48);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 100, 12564, intArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray28 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray28, (int) (short) 0, (int) (short) 0);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray53 = new int[] { (short) -1, 10, (byte) 100 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray78 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray79 = new int[][] { intArray78 };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, 0, 1, intArray79);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 1, (int) (byte) 1, intArray79);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (short) 0, 0, intArray79);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, 0, 0, intArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 493, 710, intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 493 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 710 + "'", int29 == 710);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 710 + "'", int30 == 710);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-5) + "'", int33 == (-5));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 710 + "'", int34 == 710);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 710 + "'", int35 == 710);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 710 + "'", int36 == 710);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 710 + "'", int37 == 710);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 710 + "'", int38 == 710);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 710 + "'", int39 == 710);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 10 + "'", int80 == 10);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 30 + "'", int81 == 30);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2000 + "'", int82 == 2000);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-5) + "'", int83 == (-5));
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray22 = new int[] { '4' };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray28 = new int[] { (byte) 100, 319 };
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[][] intArray38 = new int[][] { intArray28, intArray31, intArray34, intArray37 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, 0, intArray38);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 10, 710, intArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[52]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int[] intArray37 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray44 = new int[] { (short) -1, 10, (byte) 100 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray69 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray70 = new int[][] { intArray69 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, 0, 1, intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 1, (int) (byte) 1, intArray70);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 0, 0, intArray70);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 100, 2000, intArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 30 + "'", int72 == 30);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2000 + "'", int73 == 2000);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) -1, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray26 = new int[][] { intArray25 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 1, intArray26);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 809, 12564, intArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 809 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray54 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray60 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass66 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        int[] intArray12 = new int[] { '4' };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray12, (int) (byte) 0, 0);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray37 = new int[] { (short) -1, 10, (byte) 100 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray61 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray66 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray67 = new int[][] { intArray46, intArray51, intArray56, intArray61, intArray66 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, 1, intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, (int) (byte) 0, intArray67);
        int[] intArray77 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray83 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray84 = new int[][] { intArray77, intArray83 };
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, (int) (byte) 0, intArray84);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, 0, 1, intArray84);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 0, (int) 'a', intArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[52]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 97 + "'", int85 == 97);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-5) + "'", int86 == (-5));
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray46 = new int[] { (byte) 100, 319 };
        int[] intArray49 = new int[] { (byte) 100, 319 };
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[][] intArray56 = new int[][] { intArray46, intArray49, intArray52, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (byte) 0, 0, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2191, 52, intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2191 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray54 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray60 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 4, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray13, (int) (byte) 0, 0);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray13, 0, (int) (byte) 0);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray36 = new int[][] { intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, 0, 1, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 0, 0, intArray36);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-3), 493, intArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -3 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        int[] intArray0 = null;
        int[] intArray4 = new int[] { '4' };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[] intArray19 = new int[] { (byte) 100, 319 };
        int[][] intArray20 = new int[][] { intArray10, intArray13, intArray16, intArray19 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, 0, intArray20);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray57 = new int[][] { intArray36, intArray41, intArray46, intArray51, intArray56 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (short) 1, 1, intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray57);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) (byte) -1, 2191, intArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[][] intArray18 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) '#', 30, intArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass20 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[][] intArray58 = new int[][] { intArray48, intArray51, intArray54, intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 0, 0, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (byte) 0, (int) (short) 1, intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 0, intArray58);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 1, (int) (short) 0, intArray58);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass65 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, 0, 0);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray42 = new int[] { (short) -1, 10, (byte) 100 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray42, 0, (int) (short) 0);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray42, 0, 0);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray42, 0, 1);
        int[] intArray68 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray75 = new int[] { '4' };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[] intArray90 = new int[] { (byte) 100, 319 };
        int[][] intArray91 = new int[][] { intArray81, intArray84, intArray87, intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray75, (int) (byte) 0, 0, intArray91);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, (int) (byte) 0, (int) (short) 1, intArray91);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 0, intArray91);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, (int) (short) 0, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 100, (int) (short) -1, intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 500 + "'", int23 == 500);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 493 + "'", int24 == 493);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 493 + "'", int25 == 493);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 493 + "'", int26 == 493);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 493 + "'", int27 == 493);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 493 + "'", int28 == 493);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 493 + "'", int29 == 493);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 493 + "'", int30 == 493);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 493 + "'", int31 == 493);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 493 + "'", int32 == 493);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 493 + "'", int33 == 493);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 493 + "'", int34 == 493);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 493 + "'", int35 == 493);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 493 + "'", int36 == 493);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-3) + "'", int52 == (-3));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-3) + "'", int58 == (-3));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 28 + "'", int61 == 28);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[52]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 319 + "'", int93 == 319);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-3) + "'", int94 == (-3));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 500 + "'", int95 == 500);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { (short) -1, 10, (byte) 100 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray55 = new int[] { '4' };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray55, (int) (byte) 0, 0);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray55, 0, (int) (byte) 0);
        int[] intArray68 = new int[] { '4' };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray77 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray78 = new int[][] { intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, 0, 1, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (short) 0, 0, intArray78);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, (int) (short) 1, intArray78);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 28, (int) (short) 0, intArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 28 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[52]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[52]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10 + "'", int79 == 10);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 30 + "'", int81 == 30);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray50 = new int[][] { intArray29, intArray34, intArray39, intArray44, intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 1, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, (int) (short) 0, (int) (short) 0);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, 0, (int) (short) 1, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 66315, (int) (byte) 100, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 66315 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass34 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[][] intArray34 = new int[][] {};
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 0, intArray34);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, 100, intArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-3) + "'", int35 == (-3));
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray28, (int) (byte) 0, 0);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray28, 0, (int) (byte) 0);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray50 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray51 = new int[][] { intArray50 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, 0, 1, intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 0, 0, intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (short) 1, intArray51);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray62 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray71 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray78 = new int[] { '4' };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray78);
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[] intArray90 = new int[] { (byte) 100, 319 };
        int[] intArray93 = new int[] { (byte) 100, 319 };
        int[][] intArray94 = new int[][] { intArray84, intArray87, intArray90, intArray93 };
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray78, (int) (byte) 0, 0, intArray94);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, (int) (byte) 0, (int) (short) 1, intArray94);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (short) 1, 0, intArray94);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 0, (int) (byte) 1, intArray94);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (-4), (-3), intArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -4 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2000 + "'", int73 == 2000);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2000 + "'", int74 == 2000);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[52]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 52 + "'", int95 == 52);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 319 + "'", int96 == 319);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 100 + "'", int97 == 100);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 319 + "'", int98 == 319);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 100, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray50 = new int[][] { intArray29, intArray34, intArray39, intArray44, intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 1, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray68 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray75 = new int[] { '4' };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[] intArray90 = new int[] { (byte) 100, 319 };
        int[][] intArray91 = new int[][] { intArray81, intArray84, intArray87, intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray75, (int) (byte) 0, 0, intArray91);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, (int) (byte) 0, (int) (short) 1, intArray91);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (short) 1, 0, intArray91);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 0, (int) (short) 0, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 496, 97, intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[52]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 319 + "'", int93 == 319);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-3) + "'", int95 == (-3));
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray53 = new int[][] { intArray32, intArray37, intArray42, intArray47, intArray52 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 1, 1, intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, (int) (short) 0, (int) (short) 0);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray64 = new int[] { '4' };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[][] intArray80 = new int[][] { intArray70, intArray73, intArray76, intArray79 };
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, 0, intArray80);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, (int) (short) 1, intArray80);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-5), 66315, intArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-3) + "'", int58 == (-3));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[52]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass14 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 2130, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass46 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 100, 4292);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass18 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray17 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray24 = new int[] { '4' };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray30 = new int[] { (byte) 100, 319 };
        int[] intArray33 = new int[] { (byte) 100, 319 };
        int[] intArray36 = new int[] { (byte) 100, 319 };
        int[] intArray39 = new int[] { (byte) 100, 319 };
        int[][] intArray40 = new int[][] { intArray30, intArray33, intArray36, intArray39 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (byte) 0, 0, intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 0, (int) (short) 1, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2000, 4292, intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2000 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2000 + "'", int18 == 2000);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[52]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) '4', 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray29 = new int[][] { intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, (int) (byte) 1, intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray39 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[][] intArray62 = new int[][] { intArray52, intArray55, intArray58, intArray61 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (byte) 0, 0, intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (byte) 0, (int) (short) 1, intArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4389, 97, intArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4389 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray53 = new int[][] { intArray32, intArray37, intArray42, intArray47, intArray52 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 1, 1, intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, (int) (short) 0, (int) (short) 0);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray64 = new int[] { '4' };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[][] intArray80 = new int[][] { intArray70, intArray73, intArray76, intArray79 };
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, 0, intArray80);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, (int) (short) 1, intArray80);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) -1, 10, intArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-3) + "'", int58 == (-3));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[52]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[][] intArray55 = new int[][] { intArray45, intArray48, intArray51, intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (byte) 0, 0, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 0, (int) (short) 1, intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 1, 0, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, 66315, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 66315 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2000 + "'", int33 == 2000);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray34 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray34, 0, 0);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray55 = new int[][] { intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 0, 1, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 2000, 896, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2000 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 500 + "'", int37 == 500);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 493 + "'", int38 == 493);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 493 + "'", int39 == 493);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 493 + "'", int40 == 493);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 493 + "'", int41 == 493);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray55 = new int[][] { intArray34, intArray39, intArray44, intArray49, intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, (int) (byte) 0, intArray55);
        int[] intArray65 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray71 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray72 = new int[][] { intArray65, intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, (int) (byte) 0, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 100, 0, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 97 + "'", int73 == 97);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[][] intArray24 = new int[][] {};
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (byte) 0, (int) (short) 0, intArray24);
        int[] intArray31 = new int[] { (short) -1, 10, (byte) 100 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray31, 0, (int) (short) 0);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray31, 0, 0);
        int[] intArray51 = new int[] { '4' };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray60 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray61 = new int[][] { intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, 0, 1, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (short) 1, (int) (short) 1, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 2130, 496, intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2130 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-3) + "'", int41 == (-3));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-3) + "'", int47 == (-3));
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[52]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray34 = new int[] { '4' };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray44 = new int[][] { intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 0, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 1, (int) (byte) 1, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 2003, 1, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2003 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[52]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 30 + "'", int46 == 30);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        int[] intArray6 = new int[] { ' ', 30, 493, (byte) 0, 319, (byte) 1 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray13 = new int[] { (short) -1, 10, (byte) 100 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray28 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray41 = new int[] { (byte) 100, 319 };
        int[] intArray44 = new int[] { (byte) 100, 319 };
        int[] intArray47 = new int[] { (byte) 100, 319 };
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[][] intArray51 = new int[][] { intArray41, intArray44, intArray47, intArray50 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (byte) 0, 0, intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (byte) 0, (int) (short) 1, intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 1, 0, intArray51);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 52, 10, intArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 30, 493, 0, 319, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4389 + "'", int7 == 4389);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray25 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, (int) (short) 0, (int) (short) 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray43 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray50 = new int[] { (short) -1, 10, (byte) 100 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray75 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray76 = new int[][] { intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, 0, 1, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (byte) 1, (int) (byte) 1, intArray76);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 0, 0, intArray76);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, 0, 0, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-1), (int) (byte) 0, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 710 + "'", int26 == 710);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 710 + "'", int27 == 710);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-5) + "'", int30 == (-5));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 710 + "'", int31 == 710);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 710 + "'", int32 == 710);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 710 + "'", int33 == 710);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 710 + "'", int34 == 710);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 710 + "'", int35 == 710);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 710 + "'", int36 == 710);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 30 + "'", int78 == 30);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2000 + "'", int79 == 2000);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-5) + "'", int80 == (-5));
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass7 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[][] intArray18 = new int[][] {};
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (byte) 0, (int) (short) 0, intArray18);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 4292, (int) '4', intArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, (int) (byte) 0, 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, 0, (int) (byte) 0);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray49 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray58 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray65 = new int[] { '4' };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[][] intArray81 = new int[][] { intArray71, intArray74, intArray77, intArray80 };
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, (int) (byte) 0, 0, intArray81);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, (int) (short) 1, intArray81);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, (int) (short) 1, 0, intArray81);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 0, 0, intArray81);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 1, 0, intArray81);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2191, (int) (byte) 10, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2191 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[52]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 52 + "'", int82 == 52);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 52 + "'", int85 == 52);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 100 + "'", int86 == 100);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, 0);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray45 = new int[] { (short) -1, 10, (byte) 100 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray45, 0, (int) (short) 0);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray45, 0, 0);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray45, 0, 1);
        int[] intArray71 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray78 = new int[] { '4' };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray78);
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[] intArray90 = new int[] { (byte) 100, 319 };
        int[] intArray93 = new int[] { (byte) 100, 319 };
        int[][] intArray94 = new int[][] { intArray84, intArray87, intArray90, intArray93 };
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray78, (int) (byte) 0, 0, intArray94);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, (int) (byte) 0, (int) (short) 1, intArray94);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 0, intArray94);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (byte) 0, (int) (short) 0, intArray94);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 4292, 319, intArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4292 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 500 + "'", int26 == 500);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 493 + "'", int27 == 493);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 493 + "'", int28 == 493);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 493 + "'", int29 == 493);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 493 + "'", int30 == 493);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 493 + "'", int31 == 493);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 493 + "'", int32 == 493);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 493 + "'", int33 == 493);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 493 + "'", int34 == 493);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 493 + "'", int35 == 493);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 493 + "'", int36 == 493);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 493 + "'", int37 == 493);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 493 + "'", int38 == 493);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 493 + "'", int39 == 493);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-3) + "'", int61 == (-3));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 28 + "'", int64 == 28);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2000 + "'", int73 == 2000);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2000 + "'", int74 == 2000);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[52]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 52 + "'", int95 == 52);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 319 + "'", int96 == 319);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-3) + "'", int97 == (-3));
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 500 + "'", int98 == 500);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray18 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (short) 0, (int) (short) 0);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray36 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray59 = new int[] { '4' };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray68 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray69 = new int[][] { intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, 0, 1, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (byte) 1, (int) (byte) 1, intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 0, 0, intArray69);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 0, 0, intArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 97, 2191, intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-5) + "'", int23 == (-5));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 710 + "'", int24 == 710);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 710 + "'", int25 == 710);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 710 + "'", int26 == 710);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 710 + "'", int27 == 710);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 710 + "'", int28 == 710);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 710 + "'", int29 == 710);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[52]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 30 + "'", int71 == 30);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-5) + "'", int73 == (-5));
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 12564, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 493, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 493 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray59 = new int[] { (short) -1, 10, (byte) 100 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray75 = new int[] { '4' };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int[] intArray84 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray85 = new int[][] { intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray75, 0, 1, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 1, (int) (byte) 1, intArray85);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 710, (int) (byte) -1, intArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[52]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 10 + "'", int86 == 10);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 30 + "'", int87 == 30);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        java.lang.Class<?> wildcardClass11 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 896 + "'", int9 == 896);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 896 + "'", int10 == 896);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, (int) (short) 0);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, 0);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, 1);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[][] intArray76 = new int[][] { intArray66, intArray69, intArray72, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (byte) 0, 0, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, (int) (short) 1, intArray76);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 0, intArray76);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, (int) (short) 0, intArray76);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass82 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 28 + "'", int46 == 28);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-3) + "'", int79 == (-3));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 500 + "'", int80 == 500);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 493 + "'", int81 == 493);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray31 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray47 = new int[][] { intArray26, intArray31, intArray36, intArray41, intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, 1, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, (int) (byte) 0, intArray47);
        int[] intArray57 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray63 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray64 = new int[][] { intArray57, intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, (int) (byte) 0, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) '#', (int) (short) -1, intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 97 + "'", int65 == 97);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 500, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass17 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 4292, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray37 = new int[][] { intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 1, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 1, (int) (byte) 1, intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray37);
        int[] intArray47 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray65 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray66 = new int[][] { intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, 0, 1, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, 1, (int) (byte) 1, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 66315, (-1), intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 66315 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass19 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-5), 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass44 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 0, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 896 + "'", int9 == 896);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray37 = new int[] { '4' };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray37, (int) (byte) 0, 0);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray37, 0, (int) (byte) 0);
        int[] intArray50 = new int[] { '4' };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray59 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray60 = new int[][] { intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, 0, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 0, 0, intArray60);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, (int) (short) 1, intArray60);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-1), (int) (byte) -1, intArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[52]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[52]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 30 + "'", int63 == 30);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass14 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        int[] intArray66 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray73 = new int[][] { intArray66, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-5), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 97 + "'", int74 == 97);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray10 = new int[] { (short) -1, 10, (byte) 100 };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, (int) (short) 0);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, 0);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray40 = new int[][] { intArray39 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 0, 1, intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (byte) 0, (int) (short) 1, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 10, (int) 'a', intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-3) + "'", int20 == (-3));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-3) + "'", int26 == (-3));
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        int[] intArray66 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray73 = new int[][] { intArray66, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) -1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 97 + "'", int74 == 97);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) '#', 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray54 = new int[][] { intArray33, intArray38, intArray43, intArray48, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass58 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray29 = new int[] { (short) -1, 10, (byte) 100 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray29, 0, (int) (short) 0);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray47 = new int[] { (short) -1, 10, (byte) 100 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray57 = new int[] { '4' };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray67 = new int[][] { intArray66 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, 0, 1, intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (byte) 0, 0, intArray67);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 4, intArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 500, intArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 500 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[52]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-3) + "'", int69 == (-3));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        int[] intArray4 = new int[] { '4', 809, 710, 2191 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 0, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 809, 710, 2191]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 12564 + "'", int5 == 12564);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12564 + "'", int6 == 12564);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass9 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 12390 + "'", int7 == 12390);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 12390 + "'", int8 == 12390);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, 0, (int) (short) 0);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray48 = new int[] { (short) -1, 10, (byte) 100 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray67 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray68 = new int[][] { intArray67 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, 0, 1, intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (byte) 0, 0, intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 0, 4, intArray68);
        // The following exception was thrown during execution in test generation
        try {
            int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 496, 10, intArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-3) + "'", int40 == (-3));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 10 + "'", int69 == 10);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-3) + "'", int70 == (-3));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray77);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, 0, intArray77);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 100, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass20 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray22 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, 1, (int) (byte) 1, intArray41);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) '#', (int) (byte) 100, intArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-1), 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) -1, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        int[] intArray6 = new int[] { 28, '4', 'a', (byte) -1, 496, (short) -1 };
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, (int) (byte) 0, 0);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, 0, (int) (byte) 0);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray63 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray70 = new int[] { '4' };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[][] intArray86 = new int[][] { intArray76, intArray79, intArray82, intArray85 };
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, (int) (byte) 0, 0, intArray86);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, (int) (short) 1, intArray86);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (short) 1, 0, intArray86);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 0, 0, intArray86);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (byte) 1, 0, intArray86);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, 0, 0, intArray86);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 4292, 2191, intArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4292 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[28, 52, 97, -1, 496, -1]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[52]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 52 + "'", int87 == 52);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 319 + "'", int88 == 319);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 100 + "'", int89 == 100);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[] intArray38 = new int[] { (byte) 100, 319 };
        int[] intArray41 = new int[] { (byte) 100, 319 };
        int[][] intArray42 = new int[][] { intArray32, intArray35, intArray38, intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (byte) 0, 0, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (byte) 0, (int) (short) 1, intArray42);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-4), (int) (short) 100, intArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -4 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[][] intArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2191, (-5), intArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray55 = new int[][] { intArray34, intArray39, intArray44, intArray49, intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, (int) (byte) 0, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 10, 0, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray48 = new int[] { (short) -1, 10, (byte) 100 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray48, 0, (int) (short) 0);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray75 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray76 = new int[][] { intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, 0, 1, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (short) 1, (int) (short) 1, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) -1, 10, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-3) + "'", int58 == (-3));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 30 + "'", int78 == 30);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { (short) 1, 710, 30 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, (int) (byte) 0, 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, 0, (int) (byte) 0);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray60 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray69 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray76 = new int[] { '4' };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray76);
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[] intArray91 = new int[] { (byte) 100, 319 };
        int[][] intArray92 = new int[][] { intArray82, intArray85, intArray88, intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray76, (int) (byte) 0, 0, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, (int) (short) 1, intArray92);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (short) 1, 0, intArray92);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (short) 0, 0, intArray92);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 1, 0, intArray92);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, 1, (int) (byte) 1, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) ' ', (int) (short) -1, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2191 + "'", int27 == 2191);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2191 + "'", int28 == 2191);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[52]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 100 + "'", int95 == 100);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 52 + "'", int96 == 52);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 100 + "'", int97 == 100);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 2130 + "'", int98 == 2130);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-1), 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2191 + "'", int5 == 2191);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2191 + "'", int6 == 2191);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass18 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, (int) (short) 0);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, 0);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, 1);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[][] intArray76 = new int[][] { intArray66, intArray69, intArray72, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (byte) 0, 0, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, (int) (short) 1, intArray76);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 0, intArray76);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, (int) (short) 0, intArray76);
        java.lang.Class<?> wildcardClass81 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 28 + "'", int46 == 28);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-3) + "'", int79 == (-3));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 500 + "'", int80 == 500);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 10, 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass19 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) -1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        int[] intArray0 = null;
        int[] intArray4 = new int[] { '4' };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[] intArray19 = new int[] { (byte) 100, 319 };
        int[][] intArray20 = new int[][] { intArray10, intArray13, intArray16, intArray19 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, 0, intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, (int) (short) 0, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 12390, (int) (short) 1, intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"arr\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass18 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray24 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray46 = new int[] { (byte) 100, 319 };
        int[] intArray49 = new int[] { (byte) 100, 319 };
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[][] intArray56 = new int[][] { intArray46, intArray49, intArray52, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (byte) 0, 0, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (byte) 0, (int) (short) 1, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 0, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 10, intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[][] intArray58 = new int[][] { intArray48, intArray51, intArray54, intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 0, 0, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (byte) 0, (int) (short) 1, intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 0, intArray58);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 1, (int) (short) 0, intArray58);
        java.lang.Class<?> wildcardClass63 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass26 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray56 = new int[][] { intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 0, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 1, (int) (byte) 1, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 0, 0, intArray56);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 0, intArray56);
        java.lang.Class<?> wildcardClass61 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-5) + "'", int60 == (-5));
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 100, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-3) + "'", int57 == (-3));
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray26 = new int[][] { intArray25 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 1, intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 1, intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray36 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray59 = new int[] { '4' };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray68 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray69 = new int[][] { intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, 0, 1, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (byte) 1, (int) (byte) 1, intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 0, 0, intArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 10, (int) (short) 1, intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 493 + "'", int29 == 493);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[52]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 30 + "'", int71 == 30);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray30 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray46 = new int[][] { intArray25, intArray30, intArray35, intArray40, intArray45 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 1, 1, intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (short) 0, (int) (short) 0);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray57 = new int[] { '4' };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[][] intArray73 = new int[][] { intArray63, intArray66, intArray69, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (byte) 0, 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, (int) (short) 1, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) '4', 52, intArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 30 + "'", int47 == 30);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-3) + "'", int51 == (-3));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[52]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 319 + "'", int75 == 319);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (byte) 0, 0);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray73 = new int[][] { intArray52, intArray57, intArray62, intArray67, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 1, 1, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, (int) (byte) 0, intArray73);
        int[] intArray83 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray89 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray90 = new int[][] { intArray83, intArray89 };
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, (int) (byte) 0, intArray90);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 0, 1, intArray90);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 10, (int) '#', intArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 30 + "'", int74 == 30);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 97 + "'", int91 == 97);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-5) + "'", int92 == (-5));
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray19 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (byte) 1, (int) (byte) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 0, 0, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 496, 100, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray17 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray50 = new int[][] { intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, 0, 1, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (byte) 1, (int) (byte) 1, intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 0, 0, intArray50);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, 710, intArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 710 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2000 + "'", int18 == 2000);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 30 + "'", int52 == 30);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        java.lang.Class<?> wildcardClass45 = intArray41.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 100, 809);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 28 + "'", int44 == 28);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-3), 52, intArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -3 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray25 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, (int) (short) 0, (int) (short) 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray43 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray50 = new int[] { (short) -1, 10, (byte) 100 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray75 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray76 = new int[][] { intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, 0, 1, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (byte) 1, (int) (byte) 1, intArray76);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 0, 0, intArray76);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, 0, 0, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) ' ', 0, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 710 + "'", int26 == 710);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 710 + "'", int27 == 710);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-5) + "'", int30 == (-5));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 710 + "'", int31 == 710);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 710 + "'", int32 == 710);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 710 + "'", int33 == 710);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 710 + "'", int34 == 710);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 710 + "'", int35 == 710);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 710 + "'", int36 == 710);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 30 + "'", int78 == 30);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2000 + "'", int79 == 2000);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-5) + "'", int80 == (-5));
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-1), 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        java.lang.Class<?> wildcardClass17 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass15 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 100, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) '#', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray53 = new int[] { (short) -1, 10, (byte) 100 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray53, 0, (int) (short) 0);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray71 = new int[] { '4' };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray80 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray81 = new int[][] { intArray80 };
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, 0, 1, intArray81);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 1, (int) (short) 1, intArray81);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 496, 2191, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 496 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 28 + "'", int44 == 28);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-3) + "'", int63 == (-3));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[52]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 30 + "'", int83 == 30);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray36 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray55 = new int[][] { intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 1, (int) (byte) 1, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 896, (int) 'a', intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 896 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 4 + "'", int57 == 4);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 4, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 500, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 4389, 496, intArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4389 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray17, (int) (byte) 0, 0);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray31 = new int[] { (short) -1, 10, (byte) 100 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray42 = new int[] { (short) -1, 10, (byte) 100 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray61 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray66 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray71 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray72 = new int[][] { intArray51, intArray56, intArray61, intArray66, intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 1, intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (short) 1, (int) (byte) 0, intArray72);
        int[] intArray82 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray88 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray89 = new int[][] { intArray82, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (short) 1, (int) (byte) 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, 0, 1, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 100, 66315, intArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 30 + "'", int73 == 30);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 97 + "'", int90 == 97);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-5) + "'", int91 == (-5));
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { (short) -1, 10, (byte) 100 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[][] intArray54 = new int[][] {};
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 0, (int) (short) 0, intArray54);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-5), (int) ' ', intArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -5 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass20 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        int[] intArray5 = new int[] { 2191, 30, 710, (-4), 12390 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[2191, 30, 710, -4, 12390]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 66315 + "'", int6 == 66315);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-4), 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray62 = new int[] { (short) 1, (short) 1, 'a', '#', (byte) -1 };
        int[] intArray68 = new int[] { (short) 1, (short) 1, 'a', '#', (byte) -1 };
        int[] intArray74 = new int[] { (short) 1, (short) 1, 'a', '#', (byte) -1 };
        int[][] intArray75 = new int[][] { intArray62, intArray68, intArray74 };
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) ' ', 2003, intArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1, 1, 97, 35, -1]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 1, 97, 35, -1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 1, 97, 35, -1]");
        org.junit.Assert.assertNotNull(intArray75);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, (int) (short) 0);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, 0);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, 1);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[][] intArray76 = new int[][] { intArray66, intArray69, intArray72, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (byte) 0, 0, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, (int) (short) 1, intArray76);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 0, intArray76);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, (int) (short) 0, intArray76);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 28, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 28 + "'", int46 == 28);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-3) + "'", int79 == (-3));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 500 + "'", int80 == 500);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 493 + "'", int81 == 493);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (short) 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, 0);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, 0, (int) (short) 0);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray37 = new int[] { '4' };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray47 = new int[][] { intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, 0, 1, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (short) 1, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2130, (-1), intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2130 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-3) + "'", int29 == (-3));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[52]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int[] intArray40 = new int[] { (short) -1, 10, (byte) 100 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray40, 0, (int) (short) 0);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray67 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray68 = new int[][] { intArray67 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, 0, 1, intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (short) 1, (int) (short) 1, intArray68);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4, (int) (byte) 1, intArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-3) + "'", int50 == (-3));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 10 + "'", int69 == 10);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 30 + "'", int70 == 30);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray49 = new int[] { (short) -1, 10, (byte) 100 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray64 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray71 = new int[] { '4' };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[][] intArray87 = new int[][] { intArray77, intArray80, intArray83, intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, (int) (byte) 0, 0, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, (int) (short) 1, intArray87);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, 1, 0, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 28, (int) (short) 1, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 28 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[52]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 52 + "'", int88 == 52);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 319 + "'", int89 == 319);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 100 + "'", int90 == 100);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int[][] intArray47 = null;
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray47);
        java.lang.Class<?> wildcardClass49 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-1), 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass16 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        int[] intArray5 = new int[] { (short) -1, 97, 4292, 2130, 66315 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass7 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 97, 4292, 2130, 66315]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 353164 + "'", int6 == 353164);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 0, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 10, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        int[] intArray70 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray77 = new int[][] { intArray70, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass82 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 97 + "'", int78 == 97);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-5) + "'", int79 == (-5));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 710 + "'", int80 == 710);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 710 + "'", int81 == 710);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass19 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray55 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray55, 0, 0);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray75 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray76 = new int[][] { intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, 0, 1, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, 0, 1, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) -1, 0, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 28 + "'", int44 == 28);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 500 + "'", int58 == 500);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 493 + "'", int59 == 493);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 493 + "'", int60 == 493);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 493 + "'", int61 == 493);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 493 + "'", int62 == 493);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (short) 0);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, 0);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray46 = new int[][] { intArray45 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 0, 1, intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (byte) 0, (int) (short) 1, intArray46);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) ' ', 496, intArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-3) + "'", int26 == (-3));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        int[] intArray70 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray77 = new int[][] { intArray70, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 496, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 97 + "'", int78 == 97);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-5) + "'", int79 == (-5));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 710 + "'", int80 == 710);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray15 = new int[] { '4' };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, (int) (byte) 0, 0);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, 0, (int) (byte) 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray34 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray50 = new int[] { '4' };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[][] intArray66 = new int[][] { intArray56, intArray59, intArray62, intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (byte) 0, 0, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (byte) 0, (int) (short) 1, intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (short) 1, 0, intArray66);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 0, 0, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-3), (int) (byte) -1, intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[52]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[52]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray30 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) 'a', 0, intArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray8 = new int[] { '4' };
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray8, (int) (byte) 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray8, 0, (int) (byte) 0);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray30 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray31 = new int[][] { intArray30 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, 0, 1, intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray8, (int) (short) 0, 0, intArray31);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 4292, intArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[52]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        int[] intArray0 = null;
        int[][] intArray3 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 12564, (-4), intArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        int[] intArray66 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray73 = new int[][] { intArray66, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass81 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 97 + "'", int74 == 97);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, 1);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray52 = new int[] { (short) -1, 10, (byte) 100 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray63 = new int[] { (short) -1, 10, (byte) 100 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray77 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray82 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray87 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray92 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray93 = new int[][] { intArray72, intArray77, intArray82, intArray87, intArray92 };
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (short) 1, 1, intArray93);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (short) 1, (int) (byte) 0, intArray93);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) 'a', (-3), intArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 28 + "'", int45 == 28);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 30 + "'", int94 == 30);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 100 + "'", int95 == 100);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) -1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[][] intArray28 = new int[][] {};
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (byte) 0, (int) (short) 0, intArray28);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 4, (int) (short) -1, intArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-3) + "'", int29 == (-3));
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        int[] intArray66 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray73 = new int[][] { intArray66, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 100, 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 97 + "'", int74 == 97);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[][] intArray33 = new int[][] {};
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, (int) (short) 0, intArray33);
        int[] intArray40 = new int[] { (short) -1, 10, (byte) 100 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray40, 0, (int) (short) 0);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray40, 0, 0);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray69 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray70 = new int[][] { intArray69 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, 0, 1, intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (byte) 0, (int) (short) 1, intArray70);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (short) 1, (int) (short) 1, intArray70);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 10, 97, intArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-3) + "'", int50 == (-3));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-3) + "'", int56 == (-3));
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 30 + "'", int73 == 30);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass20 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray25 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, (int) (short) 0, (int) (short) 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray43 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray50 = new int[] { (short) -1, 10, (byte) 100 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray75 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray76 = new int[][] { intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, 0, 1, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (byte) 1, (int) (byte) 1, intArray76);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 0, 0, intArray76);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, 0, 0, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 12390, (-3), intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 710 + "'", int26 == 710);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 710 + "'", int27 == 710);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-5) + "'", int30 == (-5));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 710 + "'", int31 == 710);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 710 + "'", int32 == 710);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 710 + "'", int33 == 710);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 710 + "'", int34 == 710);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 710 + "'", int35 == 710);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 710 + "'", int36 == 710);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 30 + "'", int78 == 30);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2000 + "'", int79 == 2000);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-5) + "'", int80 == (-5));
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass47 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        int[] intArray0 = null;
        int[] intArray7 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray7);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray7);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray7);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray7);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray7);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray26 = new int[][] { intArray25 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 1, intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray7, 1, (int) (byte) 1, intArray26);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) (short) 1, 710, intArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int[] intArray18 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (short) 0, (int) (short) 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, (int) (short) 1);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray73 = new int[][] { intArray52, intArray57, intArray62, intArray67, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 1, 1, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, (int) (byte) 0, intArray73);
        int[] intArray83 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray89 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray90 = new int[][] { intArray83, intArray89 };
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, (int) (byte) 0, intArray90);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, 0, (int) (short) 1, intArray90);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) -1, 1, intArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-5) + "'", int23 == (-5));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-4) + "'", int26 == (-4));
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 30 + "'", int74 == 30);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 97 + "'", int91 == 97);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-5) + "'", int92 == (-5));
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray29 = new int[][] { intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, (int) (byte) 1, intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray38 = new int[] { (short) -1, 10, (byte) 100 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[][] intArray76 = new int[][] { intArray66, intArray69, intArray72, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (byte) 0, 0, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, (int) (short) 1, intArray76);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, 1, 0, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-4), (-4), intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 500, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 0, (int) (short) 100, intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 10, 809);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) -1, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray9 = new int[] { '4' };
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (byte) 0, 0);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, (int) (byte) 0);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray37 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray53 = new int[] { '4' };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[][] intArray69 = new int[][] { intArray59, intArray62, intArray65, intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, 0, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (byte) 0, (int) (short) 1, intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, 0, intArray69);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, 0, intArray69);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray9, (int) (byte) 1, 0, intArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-4), 2000, intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[52]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[52]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) 'a', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray56 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray56, 0, 0);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray67 = new int[] { '4' };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int[] intArray76 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray77 = new int[][] { intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray67, 0, 1, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, 0, 1, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, 4389, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 500 + "'", int59 == 500);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 493 + "'", int60 == 493);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 493 + "'", int61 == 493);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 493 + "'", int62 == 493);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 493 + "'", int63 == 493);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[52]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10 + "'", int79 == 10);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[][] intArray30 = new int[][] { intArray20, intArray23, intArray26, intArray29 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 0, 0, intArray30);
        int[] intArray37 = new int[] { (short) -1, 10, (byte) 100 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray61 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray66 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray67 = new int[][] { intArray46, intArray51, intArray56, intArray61, intArray66 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, 1, intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 0, 0, intArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 4389, (int) (short) 0, intArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { (short) -1, 10, (byte) 100 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[][] intArray82 = new int[][] { intArray72, intArray75, intArray78, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, 0, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, (int) (short) 1, intArray82);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, 1, 0, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 319, (-1), intArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray46 = new int[] { (short) -1, 10, (byte) 100 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray46, 0, (int) (short) 0);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray64 = new int[] { (short) -1, 10, (byte) 100 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray74 = new int[] { '4' };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray74);
        int[] intArray83 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray84 = new int[][] { intArray83 };
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray74, 0, 1, intArray84);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, 0, intArray84);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 0, 4, intArray84);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4292, (int) (short) 1, intArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-3) + "'", int56 == (-3));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[52]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-3) + "'", int86 == (-3));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (short) 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, 0);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass57 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 1, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, (int) (short) 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, 4, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (short) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 30, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray13 = new int[] { (short) -1, 10, (byte) 100 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray43 = new int[][] { intArray22, intArray27, intArray32, intArray37, intArray42 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 1, 1, intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray52 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray61 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray68 = new int[] { '4' };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[][] intArray84 = new int[][] { intArray74, intArray77, intArray80, intArray83 };
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, (int) (byte) 0, 0, intArray84);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, (int) (short) 1, intArray84);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (short) 1, 0, intArray84);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 0, (int) (short) 0, intArray84);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 100, (-5), intArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[52]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 52 + "'", int85 == 52);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 319 + "'", int86 == 319);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-3) + "'", int88 == (-3));
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, (int) (byte) 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray28 = new int[] { (short) -1, 10, (byte) 100 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray39 = new int[] { (short) -1, 10, (byte) 100 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray58 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray63 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray68 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray69 = new int[][] { intArray48, intArray53, intArray58, intArray63, intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (short) 1, 1, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 1, (int) (byte) 0, intArray69);
        int[] intArray79 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray85 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray86 = new int[][] { intArray79, intArray85 };
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 1, (int) (byte) 0, intArray86);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray86);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 353164, (int) 'a', intArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 30 + "'", int70 == 30);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 97 + "'", int87 == 97);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-5) + "'", int88 == (-5));
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-1), 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray77);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, 0, intArray77);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 0, intArray77);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass87 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 52 + "'", int84 == 52);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 52 + "'", int85 == 52);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 100, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-4), (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray33 = new int[] { (short) -1, 10, (byte) 100 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray49 = new int[] { '4' };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray58 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray59 = new int[][] { intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, 0, 1, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (byte) 1, (int) (byte) 1, intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray59);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) ' ', 0, intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[52]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int[] intArray52 = new int[] { (short) -1, 10, (byte) 100 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray52, 0, (int) (short) 0);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray70 = new int[] { (short) -1, 10, (byte) 100 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray80 = new int[] { '4' };
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray80);
        int[] intArray89 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray90 = new int[][] { intArray89 };
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray80, 0, 1, intArray90);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, (int) (byte) 0, 0, intArray90);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, 0, 4, intArray90);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 52, 4, intArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-3) + "'", int62 == (-3));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 319 + "'", int75 == 319);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[52]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 10 + "'", int91 == 10);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-3) + "'", int92 == (-3));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int[][] intArray47 = null;
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) ' ', 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[][] intArray27 = new int[][] {};
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (byte) 0, (int) (short) 0, intArray27);
        int[] intArray34 = new int[] { (short) -1, 10, (byte) 100 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray34, 0, (int) (short) 0);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray34, 0, 0);
        int[] intArray54 = new int[] { '4' };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray63 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray64 = new int[][] { intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, 0, 1, intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (byte) 0, (int) (short) 1, intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (short) 1, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 896, 0, intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-3) + "'", int28 == (-3));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-3) + "'", int44 == (-3));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-3) + "'", int50 == (-3));
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[52]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 30 + "'", int67 == 30);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass49 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) ' ', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 809, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, (int) (byte) 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, (int) (byte) 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (short) 0, 0, intArray33);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 4389, 4, intArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass39 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, 1);
        int[] intArray51 = new int[] { (short) -1, 10, (byte) 100 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray51, 0, (int) (short) 0);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray78 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray79 = new int[][] { intArray78 };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, 0, 1, intArray79);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (short) 1, (int) (short) 1, intArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '4', 493, intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 28 + "'", int45 == 28);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-3) + "'", int61 == (-3));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 10 + "'", int80 == 10);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 30 + "'", int81 == 30);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 0);
        int[] intArray47 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray47, 0, 0);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray67 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray68 = new int[][] { intArray67 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, 0, 1, intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, 0, 1, intArray68);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, 0, intArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 500 + "'", int50 == 500);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 493 + "'", int51 == 493);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 493 + "'", int52 == 493);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 493 + "'", int53 == 493);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 493 + "'", int54 == 493);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 10 + "'", int69 == 10);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray24 = new int[] { (short) 1, 710, 30 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray39, (int) (byte) 0, 0);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray39, 0, (int) (byte) 0);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray58 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray67 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int[] intArray74 = new int[] { '4' };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray74);
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[] intArray89 = new int[] { (byte) 100, 319 };
        int[][] intArray90 = new int[][] { intArray80, intArray83, intArray86, intArray89 };
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray74, (int) (byte) 0, 0, intArray90);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray67, (int) (byte) 0, (int) (short) 1, intArray90);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (short) 1, 0, intArray90);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (short) 0, 0, intArray90);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 1, 0, intArray90);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, 1, (int) (byte) 1, intArray90);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 10, (-5), intArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2191 + "'", int25 == 2191);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2191 + "'", int26 == 2191);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[52]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 319 + "'", int92 == 319);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 100 + "'", int95 == 100);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 2130 + "'", int96 == 2130);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, (int) (short) 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray39 = new int[] { (short) -1, 10, (byte) 100 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray49 = new int[] { '4' };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray58 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray59 = new int[][] { intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, 0, 1, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (byte) 0, 0, intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, 0, 4, intArray59);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) 'a', (int) (short) -1, intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[52]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-3) + "'", int61 == (-3));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass47 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 10, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[][] intArray30 = new int[][] { intArray20, intArray23, intArray26, intArray29 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 0, 0, intArray30);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 10, 1, intArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray19 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, (int) (short) 0, (int) (short) 0);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, 0, (int) (short) 1);
        int[] intArray33 = new int[] { (short) -1, 10, (byte) 100 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray44 = new int[] { (short) -1, 10, (byte) 100 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray58 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray63 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray68 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray73 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray74 = new int[][] { intArray53, intArray58, intArray63, intArray68, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (short) 1, 1, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 1, (int) (byte) 0, intArray74);
        int[] intArray84 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray90 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray91 = new int[][] { intArray84, intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 1, (int) (byte) 0, intArray91);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, (int) (short) 1, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-5), 4, intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-5) + "'", int24 == (-5));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-4) + "'", int27 == (-4));
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 30 + "'", int75 == 30);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 97 + "'", int92 == 97);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-5) + "'", int93 == (-5));
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass49 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray31 = new int[] { (short) -1, 10, (byte) 100 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray44, (int) (byte) 0, 0);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray44, 0, (int) (byte) 0);
        int[] intArray57 = new int[] { '4' };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray67 = new int[][] { intArray66 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, 0, 1, intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (short) 0, 0, intArray67);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (short) 1, (int) (short) 1, intArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '#', 710, intArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[52]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 30 + "'", int70 == 30);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 12390, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 353164, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray59 = new int[] { '4' };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray59, (int) (byte) 0, 0);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray59, 0, (int) (byte) 0);
        int[] intArray72 = new int[] { '4' };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray72);
        int[] intArray81 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray82 = new int[][] { intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray72, 0, 1, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (short) 0, 0, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 12390, 500, intArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[52]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[52]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 52 + "'", int84 == 52);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        java.lang.Class<?> wildcardClass12 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 896 + "'", int9 == 896);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 896 + "'", int10 == 896);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 896 + "'", int11 == 896);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, (int) (byte) 0, 0);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, 0, (int) (byte) 0);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray63 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray70 = new int[] { '4' };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[][] intArray86 = new int[][] { intArray76, intArray79, intArray82, intArray85 };
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, (int) (byte) 0, 0, intArray86);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, (int) (short) 1, intArray86);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (short) 1, 0, intArray86);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 0, 0, intArray86);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (byte) 1, 0, intArray86);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, 0, 0, intArray86);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) (short) -1, intArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[52]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 52 + "'", int87 == 52);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 319 + "'", int88 == 319);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 100 + "'", int89 == 100);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[][] intArray76 = new int[][] { intArray66, intArray69, intArray72, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (byte) 0, 0, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-5), 66315, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (short) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray21 = new int[] { (short) 1, 710, 30 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, (int) (byte) 0, 0);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, (int) (byte) 0);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray55 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray64 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray71 = new int[] { '4' };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[][] intArray87 = new int[][] { intArray77, intArray80, intArray83, intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, (int) (byte) 0, 0, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, (int) (short) 1, intArray87);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (short) 1, 0, intArray87);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 0, 0, intArray87);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (byte) 1, 0, intArray87);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, 1, (int) (byte) 1, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 2130, 52, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2191 + "'", int22 == 2191);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2191 + "'", int23 == 2191);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[52]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 52 + "'", int88 == 52);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 319 + "'", int89 == 319);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 100 + "'", int90 == 100);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 2130 + "'", int93 == 2130);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, (int) (short) 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 0, 0, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 4, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) -1, 97, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-3) + "'", int24 == (-3));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-3) + "'", int54 == (-3));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        int[] intArray5 = new int[] { 2191, 30, 710, (-4), 12390 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass7 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[2191, 30, 710, -4, 12390]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 66315 + "'", int6 == 66315);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray14 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray37 = new int[] { '4' };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray47 = new int[][] { intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, 0, 1, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 1, (int) (byte) 1, intArray47);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 0, 0, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) '#', 30, intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[52]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass7 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2191 + "'", int5 == 2191);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2191 + "'", int6 == 2191);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int[] intArray44 = new int[] { (short) -1, 10, (byte) 100 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray44, 0, (int) (short) 0);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray62 = new int[] { (short) -1, 10, (byte) 100 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray72 = new int[] { '4' };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray72);
        int[] intArray81 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray82 = new int[][] { intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray72, 0, 1, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, 0, intArray82);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, 0, 4, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4389, (int) (byte) 100, intArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-3) + "'", int54 == (-3));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[52]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-3) + "'", int84 == (-3));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 10, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray41 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray50 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray57 = new int[] { '4' };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[][] intArray73 = new int[][] { intArray63, intArray66, intArray69, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (byte) 0, 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (byte) 0, (int) (short) 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (short) 1, 0, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 52, (int) ' ', intArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[52]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 319 + "'", int75 == 319);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray33 = new int[] { (byte) 100, 319 };
        int[] intArray36 = new int[] { (byte) 100, 319 };
        int[] intArray39 = new int[] { (byte) 100, 319 };
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[][] intArray43 = new int[][] { intArray33, intArray36, intArray39, intArray42 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (byte) 0, 0, intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, (int) (short) 1, intArray43);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 896, (int) (short) 1, intArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 97, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray22 = new int[] { (short) 1, 710, 30 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray37 = new int[] { '4' };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray37, (int) (byte) 0, 0);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray37, 0, (int) (byte) 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray65 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray72 = new int[] { '4' };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray72);
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[][] intArray88 = new int[][] { intArray78, intArray81, intArray84, intArray87 };
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray72, (int) (byte) 0, 0, intArray88);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, (int) (byte) 0, (int) (short) 1, intArray88);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (short) 1, 0, intArray88);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 0, 0, intArray88);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (byte) 1, 0, intArray88);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, 1, (int) (byte) 1, intArray88);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2000, 10, intArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2191 + "'", int23 == 2191);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2191 + "'", int24 == 2191);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[52]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[52]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 52 + "'", int89 == 52);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 319 + "'", int90 == 319);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 2130 + "'", int94 == 2130);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray43 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { '4' };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray61 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray62 = new int[][] { intArray61 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, 0, 1, intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, 1, (int) (byte) 1, intArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 10, 496, intArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[52]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 4 + "'", int64 == 4);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 896, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 2130, 809);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray22 = new int[] { (byte) 10, (short) 1, (-5), 4292 };
        int[][] intArray23 = new int[][] { intArray22 };
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 4, (-3), intArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 1, -5, 4292]");
        org.junit.Assert.assertNotNull(intArray23);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass46 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 4, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[][] intArray11 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 100, 710, intArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"strg\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
    }
}

