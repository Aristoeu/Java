package bloomfilter;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter10.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter18.getClass();
        boolean boolean26 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass36 = constableBloomFilter29.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean39 = constableBloomFilter15.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter15.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter45.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter45.getClass();
        boolean boolean49 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass56 = wildcardClassOfFieldBloomFilter55.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass59);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter52.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass61);
        boolean boolean63 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable10 = null;
        boolean boolean11 = constableBloomFilter9.contains(constable10);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) 100L);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean50 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass48);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter18.getClass();
        boolean boolean52 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = constableBloomFilterBloomFilter55.getClass();
        boolean boolean57 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass67 = wildcardClassOfFieldBloomFilter66.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass70);
        boolean boolean73 = constableBloomFilter63.contains((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable77 = null;
        boolean boolean78 = constableBloomFilter76.contains(constable77);
        constableBloomFilter76.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean82 = constableBloomFilter76.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass83 = constableBloomFilter76.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass83);
        boolean boolean85 = constableBloomFilter60.contains((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean85);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = constableBloomFilterBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter25.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass34 = wildcardClassOfFieldBloomFilter33.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass34);
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter39.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass40);
        boolean boolean43 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass40);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter15.getClass();
        boolean boolean45 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass44);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass44);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 1);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass14 = constantDescBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass14);
        boolean boolean17 = constableBloomFilter2.contains((java.lang.constant.Constable) 10.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter20.insert((java.lang.constant.Constable) 10);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass28 = wildcardClassOfFieldBloomFilter27.getClass();
        boolean boolean29 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 1);
        java.lang.Class<?> wildcardClass33 = constableBloomFilterBloomFilter32.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean39 = constableBloomFilter37.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter42.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass56 = wildcardClassOfFieldBloomFilter55.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean58 = constableBloomFilter49.contains((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass65 = wildcardClassOfFieldBloomFilter64.getClass();
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean71 = constableBloomFilter61.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter61.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass72);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter49.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass74);
        boolean boolean76 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass74);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean76);
        java.lang.constant.Constable constable78 = null;
        constableBloomFilter2.insert(constable78);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass13 = wildcardClassOfFieldBloomFilter12.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass16);
        boolean boolean19 = constableBloomFilter9.contains((java.lang.constant.Constable) '#');
        constableBloomFilter9.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass22 = constableBloomFilter9.getClass();
        boolean boolean23 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass22);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter28.getClass();
        boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        constableBloomFilter33.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean39 = constableBloomFilter33.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass46 = wildcardClassOfFieldBloomFilter45.getClass();
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass49);
        boolean boolean52 = constableBloomFilter42.contains((java.lang.constant.Constable) '#');
        constableBloomFilter42.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass55 = constableBloomFilter42.getClass();
        boolean boolean56 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable63 = null;
        boolean boolean64 = constableBloomFilter62.contains(constable63);
        constableBloomFilter62.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean68 = constableBloomFilter62.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass69 = constableBloomFilter62.getClass();
        boolean boolean70 = constableBloomFilter59.contains((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        constableBloomFilter73.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean79 = constableBloomFilter73.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass80 = constableBloomFilter73.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass80);
        boolean boolean83 = constableBloomFilter59.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass87 = wildcardClassOfFieldBloomFilter86.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass87);
        boolean boolean89 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass87);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean11 = constableBloomFilter9.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter16.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean24 = constableBloomFilter16.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter16.getClass();
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass25);
        java.lang.constant.Constable constable27 = null;
        constableBloomFilter2.insert(constable27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass32 = charSequenceBloomFilter31.getClass();
        boolean boolean33 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        boolean boolean45 = constableBloomFilter41.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter41.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean52 = constableBloomFilter50.contains((java.lang.constant.Constable) 0L);
        boolean boolean54 = constableBloomFilter50.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass60 = typeDescriptorBloomFilter59.getClass();
        boolean boolean61 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable65 = null;
        boolean boolean66 = constableBloomFilter64.contains(constable65);
        constableBloomFilter64.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean70 = constableBloomFilter64.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter64.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter64.insert((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass75 = constableBloomFilter64.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass75);
        boolean boolean77 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass75);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.constant.Constable constable81 = null;
        constableBloomFilter80.insert(constable81);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter80.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass83);
        boolean boolean85 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 1, 10);
        java.lang.Class<?> wildcardClass6 = typeDescriptorBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) '#', (int) '#');
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) '4', (int) (short) 100);
        java.lang.Class<?> wildcardClass3 = objBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass11 = constableBloomFilter10.getClass();
        boolean boolean12 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass11);
        java.lang.constant.Constable constable13 = null;
        constableBloomFilter5.insert(constable13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        constableBloomFilter23.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean29 = constableBloomFilter23.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass30 = constableBloomFilter23.getClass();
        boolean boolean31 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass30);
        constableBloomFilter20.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean38 = constableBloomFilter36.contains((java.lang.constant.Constable) 0L);
        boolean boolean40 = constableBloomFilter36.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean42 = constableBloomFilter36.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass43 = constableBloomFilter36.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter20.contains((java.lang.constant.Constable) (-1.0f));
        java.lang.Class<?> wildcardClass47 = constableBloomFilter20.getClass();
        boolean boolean48 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) (short) 1);
        java.lang.Class<?> wildcardClass52 = constableBloomFilterBloomFilter51.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean54 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>((int) 'a', (int) 'a');
        java.lang.Class<?> wildcardClass59 = wildcardClassBloomFilter58.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter11.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter11.insert((java.lang.constant.Constable) (-1L));
        boolean boolean19 = constableBloomFilter11.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter11.getClass();
        boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter27.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable32 = null;
        constableBloomFilter27.insert(constable32);
        boolean boolean35 = constableBloomFilter27.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass39 = wildcardClassOfFieldBloomFilter38.getClass();
        boolean boolean40 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass39);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter24.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) '4', (int) '#');
        java.lang.Class<?> wildcardClass50 = charSequenceBloomFilter49.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter46.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass14 = constableBloomFilter5.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) 100L);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean26 = constableBloomFilter18.contains((java.lang.constant.Constable) "");
        java.lang.Class<?> wildcardClass27 = constableBloomFilter18.getClass();
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass40 = wildcardClassOfFieldBloomFilter39.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass40);
        boolean boolean43 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass40);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter5.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter32.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter41.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter41.insert((java.lang.constant.Constable) (-1L));
        boolean boolean49 = constableBloomFilter41.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean53 = constableBloomFilter41.contains((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter56.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean60 = constableBloomFilter56.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter56.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean64 = constableBloomFilter56.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass68 = constantDescBloomFilter67.getClass();
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean71 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass68);
        boolean boolean72 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter5.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass11 = genericDeclarationBloomFilter10.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass11);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1));
        java.lang.constant.Constable constable13 = null;
        boolean boolean14 = constableBloomFilter2.contains(constable13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter17.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter17.insert((java.lang.constant.Constable) (-1L));
        boolean boolean25 = constableBloomFilter17.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter17.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter17.getClass();
        boolean boolean29 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass28);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter2.contains(constable30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass47 = constableBloomFilterBloomFilter46.getClass();
        boolean boolean48 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter53.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable58 = null;
        constableBloomFilter53.insert(constable58);
        boolean boolean61 = constableBloomFilter53.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = constableBloomFilterBloomFilter64.getClass();
        boolean boolean66 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter53.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter50.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter50.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        boolean boolean58 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass57);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass66 = wildcardClassOfFieldBloomFilter65.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass69);
        boolean boolean72 = constableBloomFilter62.contains((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable76 = null;
        boolean boolean77 = constableBloomFilter75.contains(constable76);
        constableBloomFilter75.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean81 = constableBloomFilter75.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass82 = constableBloomFilter75.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass82);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter88 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter91 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass92 = wildcardClassOfFieldBloomFilter91.getClass();
        boolean boolean93 = constableBloomFilter88.contains((java.lang.constant.Constable) wildcardClass92);
        boolean boolean94 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean93);
        java.lang.constant.Constable constable95 = null;
        constableBloomFilter2.insert(constable95);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass9 = serializableBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = constableBloomFilter5.getClass();
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass11);
        java.lang.constant.Constable constable13 = null;
        boolean boolean14 = constableBloomFilter2.contains(constable13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        constableBloomFilter17.insert(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean26 = constableBloomFilter24.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass27 = constableBloomFilter24.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter31.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable36 = null;
        constableBloomFilter31.insert(constable36);
        boolean boolean39 = constableBloomFilter31.contains((java.lang.constant.Constable) 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass45 = wildcardClassOfFieldBloomFilter44.getClass();
        boolean boolean46 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass45);
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass45);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter17.getClass();
        boolean boolean49 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass48);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) '#', (int) '#');
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass17 = constableBloomFilter10.getClass();
        boolean boolean18 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        boolean boolean33 = constableBloomFilter7.contains((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter36.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter36.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean42 = constableBloomFilter36.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean44 = constableBloomFilter36.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter36.getClass();
        boolean boolean46 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass45);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 0);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter50.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter55.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean59 = constableBloomFilter55.contains((java.lang.constant.Constable) 100L);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean68 = constableBloomFilter66.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (short) 100);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter71.getClass();
        boolean boolean73 = constableBloomFilter66.contains((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean14 = constableBloomFilter10.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter10.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean18 = constableBloomFilter10.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        boolean boolean32 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean44 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass42);
        boolean boolean45 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean44);
        java.lang.constant.Constable constable46 = null;
        constableBloomFilter5.insert(constable46);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter5.contains(constable48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean57 = constableBloomFilter55.contains((java.lang.constant.Constable) ' ');
        boolean boolean59 = constableBloomFilter55.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter55.getClass();
        boolean boolean61 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 1);
        java.lang.constant.Constable constable65 = null;
        constableBloomFilter64.insert(constable65);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter64.getClass();
        boolean boolean68 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass67);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass67);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable79 = null;
        boolean boolean80 = constableBloomFilter78.contains(constable79);
        boolean boolean82 = constableBloomFilter78.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter78.getClass();
        constableBloomFilter73.insert((java.lang.constant.Constable) wildcardClass83);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) ' ', (int) 'a');
        java.lang.Class<?> wildcardClass88 = genericDeclarationBloomFilter87.getClass();
        boolean boolean89 = constableBloomFilter73.contains((java.lang.constant.Constable) wildcardClass88);
        boolean boolean90 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass88);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter93 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter96 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass97 = constableBloomFilter96.getClass();
        constableBloomFilter93.insert((java.lang.constant.Constable) wildcardClass97);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter5.getClass();
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass22 = constableBloomFilter21.getClass();
        boolean boolean23 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        boolean boolean30 = constableBloomFilter26.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean38 = constableBloomFilter36.contains((java.lang.constant.Constable) ' ');
        boolean boolean40 = constableBloomFilter36.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter36.getClass();
        boolean boolean42 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        boolean boolean53 = constableBloomFilter45.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter45.getClass();
        boolean boolean55 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass54);
        boolean boolean56 = constableBloomFilter26.contains((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable60 = null;
        constableBloomFilter59.insert(constable60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable65 = null;
        boolean boolean66 = constableBloomFilter64.contains(constable65);
        constableBloomFilter64.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean70 = constableBloomFilter64.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass77 = wildcardClassOfFieldBloomFilter76.getClass();
        constableBloomFilter73.insert((java.lang.constant.Constable) wildcardClass77);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        constableBloomFilter73.insert((java.lang.constant.Constable) wildcardClass80);
        boolean boolean83 = constableBloomFilter73.contains((java.lang.constant.Constable) '#');
        constableBloomFilter73.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass86 = constableBloomFilter73.getClass();
        boolean boolean87 = constableBloomFilter64.contains((java.lang.constant.Constable) wildcardClass86);
        boolean boolean88 = constableBloomFilter59.contains((java.lang.constant.Constable) boolean87);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter59.getClass();
        boolean boolean90 = constableBloomFilter26.contains((java.lang.constant.Constable) wildcardClass89);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter93 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter93.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass94);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter26.getClass();
        boolean boolean97 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass96);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter16.insert((java.lang.constant.Constable) ' ');
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean27 = constableBloomFilter25.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        java.lang.Class<?> wildcardClass33 = constableBloomFilter30.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass44 = wildcardClassOfFieldBloomFilter43.getClass();
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass53 = wildcardClassOfFieldBloomFilter52.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean59 = constableBloomFilter49.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter49.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter37.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter68.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter68.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter68.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter68.insert((java.lang.constant.Constable) 'a');
        boolean boolean78 = constableBloomFilter68.contains((java.lang.constant.Constable) 10.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter84.getClass();
        constableBloomFilter81.insert((java.lang.constant.Constable) wildcardClass85);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass90 = serializableBloomFilter89.getClass();
        constableBloomFilter81.insert((java.lang.constant.Constable) wildcardClass90);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter94 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) '#');
        java.lang.Class<?> wildcardClass95 = constableBloomFilter94.getClass();
        constableBloomFilter81.insert((java.lang.constant.Constable) wildcardClass95);
        constableBloomFilter68.insert((java.lang.constant.Constable) wildcardClass95);
        boolean boolean98 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass12 = typeDescriptorBloomFilter11.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 100);
        java.lang.Class<?> wildcardClass17 = constableBloomFilterBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        boolean boolean25 = constableBloomFilter21.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean33 = constableBloomFilter31.contains((java.lang.constant.Constable) ' ');
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter31.getClass();
        boolean boolean37 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter40.contains(constable41);
        constableBloomFilter40.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean46 = constableBloomFilter40.contains((java.lang.constant.Constable) 'a');
        boolean boolean48 = constableBloomFilter40.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter40.getClass();
        boolean boolean50 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass49);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter21.getClass();
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) "");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter13.contains(constable14);
        constableBloomFilter13.insert((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass24 = wildcardClassOfFieldBloomFilter23.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter20.insert((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter30.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter30.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable35 = null;
        constableBloomFilter30.insert(constable35);
        boolean boolean38 = constableBloomFilter30.contains((java.lang.constant.Constable) 0);
        constableBloomFilter30.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass44 = wildcardClassOfFieldBloomFilter43.getClass();
        boolean boolean45 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass44);
        boolean boolean48 = constableBloomFilter20.contains((java.lang.constant.Constable) (short) 0);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter20.getClass();
        boolean boolean50 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass49);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter11.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter16.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 0);
        java.lang.Class<?> wildcardClass26 = constableBloomFilter25.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        constableBloomFilter8.insert(constable9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter13.contains(constable14);
        constableBloomFilter13.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass26 = wildcardClassOfFieldBloomFilter25.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass29);
        boolean boolean32 = constableBloomFilter22.contains((java.lang.constant.Constable) '#');
        constableBloomFilter22.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter22.getClass();
        boolean boolean36 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter8.contains((java.lang.constant.Constable) boolean36);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass38);
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) '#');
        java.lang.Class<?> wildcardClass44 = constableBloomFilter43.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 100);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        java.lang.Class<?> wildcardClass5 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter16.getClass();
        boolean boolean30 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass29);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass11 = wildcardClassOfFieldBloomFilter10.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass14);
        boolean boolean17 = constableBloomFilter7.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable21 = null;
        boolean boolean22 = constableBloomFilter20.contains(constable21);
        constableBloomFilter20.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter20.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        constableBloomFilter29.insert(constable30);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter29.getClass();
        boolean boolean33 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (byte) 100, 0);
        java.lang.Class<?> wildcardClass39 = strComparableBloomFilter38.getClass();
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>(100, (int) (byte) 10);
        java.lang.Class<?> wildcardClass44 = wildcardClassBloomFilter43.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (short) 10, (int) ' ');
        java.lang.Class<?> wildcardClass3 = typeDescriptorBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = constableBloomFilterBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) (-1.0f));
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter14.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter14.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable19 = null;
        constableBloomFilter14.insert(constable19);
        boolean boolean22 = constableBloomFilter14.contains((java.lang.constant.Constable) 0);
        constableBloomFilter14.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass28 = wildcardClassOfFieldBloomFilter27.getClass();
        boolean boolean29 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter32.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter40.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass41);
        boolean boolean43 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass41);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter32.getClass();
        boolean boolean45 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) 'a', (int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = annotatedElementBloomFilter48.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter54.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter54.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter63.getClass();
        boolean boolean65 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass64);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) ' ', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean9 = constableBloomFilter7.contains((java.lang.constant.Constable) 0L);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass17 = typeDescriptorBloomFilter16.getClass();
        boolean boolean18 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 100);
        java.lang.Class<?> wildcardClass22 = constableBloomFilterBloomFilter21.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass22);
        boolean boolean24 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean31 = constableBloomFilter27.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter34.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass43 = wildcardClassOfFieldBloomFilter42.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass43);
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter48.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        constableBloomFilter54.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter54.getClass();
        boolean boolean60 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        constableBloomFilter63.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean69 = constableBloomFilter63.contains((java.lang.constant.Constable) 'a');
        boolean boolean71 = constableBloomFilter63.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter63.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass72);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass77 = wildcardClassOfFieldBloomFilter76.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass77);
        boolean boolean79 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass77);
        java.lang.constant.Constable constable80 = null;
        constableBloomFilter2.insert(constable80);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (short) 10, (int) '4');
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter41.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter41.insert((java.lang.constant.Constable) (-1L));
        boolean boolean49 = constableBloomFilter41.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean53 = constableBloomFilter41.contains((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter56.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean60 = constableBloomFilter56.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter56.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean64 = constableBloomFilter56.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass68 = constantDescBloomFilter67.getClass();
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean76 = constableBloomFilter74.contains((java.lang.constant.Constable) 0L);
        boolean boolean78 = constableBloomFilter74.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean80 = constableBloomFilter74.contains((java.lang.constant.Constable) '4');
        boolean boolean82 = constableBloomFilter74.contains((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable83 = null;
        boolean boolean84 = constableBloomFilter74.contains(constable83);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter87.getClass();
        constableBloomFilter74.insert((java.lang.constant.Constable) wildcardClass88);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass88);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 100, (int) '4');
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (short) 100);
        java.lang.Class<?> wildcardClass11 = constableBloomFilter10.getClass();
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter15.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean19 = constableBloomFilter15.contains((java.lang.constant.Constable) 100L);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass63 = wildcardClassOfFieldBloomFilter62.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass66);
        boolean boolean69 = constableBloomFilter59.contains((java.lang.constant.Constable) '#');
        constableBloomFilter59.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass72 = constableBloomFilter59.getClass();
        boolean boolean73 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter15.insert((java.lang.constant.Constable) boolean73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter77.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter77.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter77.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass84 = constableBloomFilter77.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass84);
        boolean boolean87 = constableBloomFilter15.contains((java.lang.constant.Constable) 10L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter90 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter90.getClass();
        boolean boolean92 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass91);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass91);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter96 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) (byte) 10);
        java.lang.Class<?> wildcardClass97 = constableBloomFilter96.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (byte) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = constableBloomFilterBloomFilter29.getClass();
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter37.getClass();
        boolean boolean39 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter34.getClass();
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter47.contains(constable48);
        constableBloomFilter47.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean53 = constableBloomFilter47.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass54 = constableBloomFilter47.getClass();
        boolean boolean55 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass54);
        constableBloomFilter44.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable61 = null;
        boolean boolean62 = constableBloomFilter60.contains(constable61);
        constableBloomFilter60.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean66 = constableBloomFilter60.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter60.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter60.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        constableBloomFilter73.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable81 = null;
        boolean boolean82 = constableBloomFilter80.contains(constable81);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter80.getClass();
        constableBloomFilter73.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter60.insert((java.lang.constant.Constable) wildcardClass83);
        boolean boolean86 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass83);
        boolean boolean87 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass83);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter90 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) (short) 10);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter90.getClass();
        boolean boolean92 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 100);
        java.lang.constant.Constable constable12 = null;
        constableBloomFilter11.insert(constable12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) 100L);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter16.contains((java.lang.constant.Constable) "");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter27.insert((java.lang.constant.Constable) 10);
        boolean boolean31 = constableBloomFilter27.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter34.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass43 = wildcardClassOfFieldBloomFilter42.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass43);
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass43);
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass43);
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean49 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass43);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean51 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass43);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable10 = null;
        boolean boolean11 = constableBloomFilter9.contains(constable10);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        boolean boolean32 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean45 = constableBloomFilter21.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass49 = wildcardClassOfFieldBloomFilter48.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass49);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter2.contains(constable53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(1, (int) (short) 100);
        java.lang.Class<?> wildcardClass61 = typeDescriptorBloomFilter60.getClass();
        boolean boolean62 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass61);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) 'a', 1);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        boolean boolean23 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter26.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter26.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass37);
        boolean boolean39 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean48 = constableBloomFilter42.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass55 = constableBloomFilterBloomFilter54.getClass();
        boolean boolean56 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass55);
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass55);
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass55);
        boolean boolean59 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter65.contains(constable66);
        constableBloomFilter65.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean71 = constableBloomFilter65.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass72 = constableBloomFilter65.getClass();
        boolean boolean73 = constableBloomFilter62.contains((java.lang.constant.Constable) wildcardClass72);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable77 = null;
        boolean boolean78 = constableBloomFilter76.contains(constable77);
        constableBloomFilter76.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean82 = constableBloomFilter76.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass83 = constableBloomFilter76.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass83);
        boolean boolean86 = constableBloomFilter62.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass90 = constableBloomFilterBloomFilter89.getClass();
        boolean boolean91 = constableBloomFilter62.contains((java.lang.constant.Constable) wildcardClass90);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass90);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean15 = constableBloomFilter9.contains((java.lang.constant.Constable) (short) 100);
        constableBloomFilter9.insert((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass36 = wildcardClassOfFieldBloomFilter35.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass42);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter47.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter47.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter54.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter54.getClass();
        boolean boolean58 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass57);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter47.contains(constable59);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter47.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter70.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter70.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter70.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter70.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter70.insert((java.lang.constant.Constable) (-1.0f));
        java.lang.Class<?> wildcardClass81 = constableBloomFilter70.getClass();
        boolean boolean82 = constableBloomFilter67.contains((java.lang.constant.Constable) wildcardClass81);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter85 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable86 = null;
        boolean boolean87 = constableBloomFilter85.contains(constable86);
        constableBloomFilter85.insert((java.lang.constant.Constable) 100);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter85.getClass();
        constableBloomFilter67.insert((java.lang.constant.Constable) wildcardClass90);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass90);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (short) 0, (int) (short) 0);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter26.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass27);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter32.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter32.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter39.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter39.getClass();
        boolean boolean43 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass42);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter32.contains(constable44);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter32.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass65 = constableBloomFilter58.getClass();
        boolean boolean66 = constableBloomFilter55.contains((java.lang.constant.Constable) wildcardClass65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable70 = null;
        boolean boolean71 = constableBloomFilter69.contains(constable70);
        constableBloomFilter69.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean75 = constableBloomFilter69.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass76 = constableBloomFilter69.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass76);
        boolean boolean79 = constableBloomFilter55.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter55.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass80);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 10);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter84.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean87 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter5.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter16.insert((java.lang.constant.Constable) 10);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable21 = null;
        boolean boolean22 = constableBloomFilter16.contains(constable21);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter30.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter30.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter30.insert((java.lang.constant.Constable) (-1L));
        boolean boolean38 = constableBloomFilter30.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter30.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass39);
        java.lang.constant.Constable constable43 = null;
        constableBloomFilter2.insert(constable43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable54 = null;
        boolean boolean55 = constableBloomFilter53.contains(constable54);
        constableBloomFilter53.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean59 = constableBloomFilter53.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass60 = constableBloomFilter53.getClass();
        boolean boolean61 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter50.getClass();
        boolean boolean63 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 10);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter66.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass67);
        boolean boolean69 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable10 = null;
        boolean boolean11 = constableBloomFilter9.contains(constable10);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean21 = constableBloomFilter19.contains((java.lang.constant.Constable) ' ');
        boolean boolean23 = constableBloomFilter19.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter19.getClass();
        boolean boolean25 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter29.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter29.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter29.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter29.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter29.insert((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass46 = constableBloomFilterBloomFilter45.getClass();
        boolean boolean47 = constableBloomFilter42.contains((java.lang.constant.Constable) wildcardClass46);
        boolean boolean49 = constableBloomFilter42.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter52.getClass();
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean59 = constableBloomFilter57.contains((java.lang.constant.Constable) 0L);
        boolean boolean61 = constableBloomFilter57.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass67 = typeDescriptorBloomFilter66.getClass();
        boolean boolean68 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable72 = null;
        boolean boolean73 = constableBloomFilter71.contains(constable72);
        constableBloomFilter71.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean77 = constableBloomFilter71.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter71.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter71.insert((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass82 = constableBloomFilter71.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass82);
        boolean boolean84 = constableBloomFilter42.contains((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter29.insert((java.lang.constant.Constable) boolean84);
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass87);
        boolean boolean89 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass87);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(10, (int) (short) 100);
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((-1), 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        java.lang.Class<?> wildcardClass13 = constableBloomFilter10.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass13);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass13);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter2.contains(constable16);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass3 = serializableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable31 = null;
        constableBloomFilter30.insert(constable31);
        java.lang.Class<?> wildcardClass33 = constableBloomFilter30.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter37.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter37.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter44.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter44.getClass();
        boolean boolean48 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass47);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter37.contains(constable49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean55 = constableBloomFilter53.contains((java.lang.constant.Constable) 0L);
        boolean boolean57 = constableBloomFilter53.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean59 = constableBloomFilter53.contains((java.lang.constant.Constable) '4');
        boolean boolean61 = constableBloomFilter53.contains((java.lang.constant.Constable) 1.0f);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter53.getClass();
        boolean boolean63 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter37.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter71.getClass();
        constableBloomFilter68.insert((java.lang.constant.Constable) wildcardClass72);
        boolean boolean74 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass72);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter80.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean84 = constableBloomFilter80.contains((java.lang.constant.Constable) 100L);
        boolean boolean86 = constableBloomFilter80.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean88 = constableBloomFilter80.contains((java.lang.constant.Constable) "");
        java.lang.Class<?> wildcardClass89 = constableBloomFilter80.getClass();
        boolean boolean90 = constableBloomFilter77.contains((java.lang.constant.Constable) wildcardClass89);
        constableBloomFilter5.insert((java.lang.constant.Constable) boolean90);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(1, 10);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter7.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass13 = genericDeclarationBloomFilter12.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass13);
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) 'a');
        constableBloomFilter18.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (short) 1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = constantDescBloomFilter23.getClass();
        boolean boolean25 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass24);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean31 = constableBloomFilter29.contains((java.lang.constant.Constable) 0L);
        boolean boolean33 = constableBloomFilter29.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter39.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter39.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter39.insert((java.lang.constant.Constable) (-1L));
        boolean boolean47 = constableBloomFilter39.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter39.getClass();
        boolean boolean49 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean60 = constableBloomFilter58.contains((java.lang.constant.Constable) ' ');
        boolean boolean62 = constableBloomFilter58.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter58.getClass();
        boolean boolean64 = constableBloomFilter55.contains((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean73 = constableBloomFilter67.contains((java.lang.constant.Constable) 'a');
        boolean boolean75 = constableBloomFilter67.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter67.getClass();
        boolean boolean77 = constableBloomFilter55.contains((java.lang.constant.Constable) wildcardClass76);
        boolean boolean78 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass76);
        constableBloomFilter36.insert((java.lang.constant.Constable) boolean78);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean84 = constableBloomFilter82.contains((java.lang.constant.Constable) 0L);
        boolean boolean86 = constableBloomFilter82.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter82.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter82.getClass();
        boolean boolean90 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass89);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter36.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass91);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>(10, (int) (short) 1);
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) '4', (int) 'a');
        java.lang.Class<?> wildcardClass6 = annotatedElementBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) (short) 10, (int) '4');
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        constableBloomFilter10.insert(constable11);
        java.lang.Class<?> wildcardClass13 = constableBloomFilter10.getClass();
        boolean boolean14 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass13);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass19 = constableBloomFilterBloomFilter18.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean12 = constableBloomFilter10.contains((java.lang.constant.Constable) 0L);
        boolean boolean14 = constableBloomFilter10.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass20 = typeDescriptorBloomFilter19.getClass();
        boolean boolean21 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 100);
        java.lang.Class<?> wildcardClass25 = constableBloomFilterBloomFilter24.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass25);
        boolean boolean27 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass25);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter31.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean37 = constableBloomFilter31.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean39 = constableBloomFilter31.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter42.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean46 = constableBloomFilter42.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter49.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass58 = wildcardClassOfFieldBloomFilter57.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass58);
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter63.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass64);
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable70 = null;
        boolean boolean71 = constableBloomFilter69.contains(constable70);
        constableBloomFilter69.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter69.getClass();
        boolean boolean75 = constableBloomFilter42.contains((java.lang.constant.Constable) wildcardClass74);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter42.getClass();
        boolean boolean77 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass76);
        boolean boolean78 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean77);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (byte) 1, (int) (short) 10);
        java.lang.Class<?> wildcardClass82 = strComparableBloomFilter81.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass10 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter17.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter17.insert((java.lang.constant.Constable) (-1L));
        boolean boolean25 = constableBloomFilter17.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass26 = constableBloomFilter17.getClass();
        boolean boolean27 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        boolean boolean46 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean55 = constableBloomFilter49.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass56 = constableBloomFilter49.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass56);
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass56);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter30.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 0);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter63.getClass();
        boolean boolean65 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass64);
        boolean boolean66 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) ' ', 0);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = constableBloomFilterBloomFilter13.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean20 = constableBloomFilter18.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter23.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean27 = constableBloomFilter23.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter23.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean31 = constableBloomFilter23.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass35 = constantDescBloomFilter34.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass35);
        boolean boolean38 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        java.lang.constant.Constable constable39 = null;
        constableBloomFilter2.insert(constable39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter50.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable65 = null;
        boolean boolean66 = constableBloomFilter64.contains(constable65);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter64.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass67);
        boolean boolean69 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass67);
        java.lang.Class<?> wildcardClass70 = constableBloomFilter43.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean20 = constableBloomFilter18.contains((java.lang.constant.Constable) 0L);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter18.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter29.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean33 = constableBloomFilter29.contains((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(0, 0);
        java.lang.Class<?> wildcardClass37 = serializableBloomFilter36.getClass();
        boolean boolean38 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean38);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter8.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean12 = constableBloomFilter8.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter15.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass24 = wildcardClassOfFieldBloomFilter23.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter29.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass30);
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter35.getClass();
        boolean boolean41 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        boolean boolean52 = constableBloomFilter44.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter44.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass53);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass53);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter5.getClass();
        boolean boolean57 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) -1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) 'a');
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter10.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter10.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter10.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter21.insert((java.lang.constant.Constable) 10);
        boolean boolean25 = constableBloomFilter21.contains((java.lang.constant.Constable) true);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean48 = constableBloomFilter42.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass49 = constableBloomFilter42.getClass();
        boolean boolean50 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable54 = null;
        boolean boolean55 = constableBloomFilter53.contains(constable54);
        constableBloomFilter53.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean59 = constableBloomFilter53.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass60 = constableBloomFilter53.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass60);
        boolean boolean62 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass60);
        boolean boolean63 = constableBloomFilter21.contains((java.lang.constant.Constable) boolean62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        boolean boolean68 = constableBloomFilter66.contains(constable67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable72 = null;
        boolean boolean73 = constableBloomFilter71.contains(constable72);
        boolean boolean75 = constableBloomFilter71.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter71.getClass();
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass76);
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass76);
        boolean boolean79 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass76);
        boolean boolean81 = constableBloomFilter10.contains((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter10.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass82);
        java.lang.constant.Constable constable84 = null;
        boolean boolean85 = constableBloomFilter2.contains(constable84);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (short) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>(1, (int) (short) 10);
        java.lang.Class<?> wildcardClass3 = strBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 0, (int) 'a');
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 10, (int) (byte) 0);
        java.lang.Class<?> wildcardClass3 = typeDescriptorBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass9 = constableBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean15 = constableBloomFilter13.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter18.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass21);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter13.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass23);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean33 = constableBloomFilter31.contains((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter31.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass34);
        boolean boolean36 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass34);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter18.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean51 = constableBloomFilter27.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass55 = wildcardClassOfFieldBloomFilter54.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass55);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass55);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter5.contains(constable58);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable65 = null;
        boolean boolean66 = constableBloomFilter64.contains(constable65);
        boolean boolean68 = constableBloomFilter64.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean76 = constableBloomFilter74.contains((java.lang.constant.Constable) ' ');
        boolean boolean78 = constableBloomFilter74.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter74.getClass();
        boolean boolean80 = constableBloomFilter71.contains((java.lang.constant.Constable) wildcardClass79);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable84 = null;
        boolean boolean85 = constableBloomFilter83.contains(constable84);
        constableBloomFilter83.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean89 = constableBloomFilter83.contains((java.lang.constant.Constable) 'a');
        boolean boolean91 = constableBloomFilter83.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter83.getClass();
        boolean boolean93 = constableBloomFilter71.contains((java.lang.constant.Constable) wildcardClass92);
        boolean boolean94 = constableBloomFilter64.contains((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter64.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass95);
        java.lang.Class<?> wildcardClass97 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean9 = constableBloomFilter7.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter12.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean20 = constableBloomFilter12.contains((java.lang.constant.Constable) 0L);
        boolean boolean22 = constableBloomFilter12.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter12.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass23);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass32 = serializableBloomFilter31.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass32);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass17 = constantDescBloomFilter16.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass17);
        boolean boolean20 = constableBloomFilter5.contains((java.lang.constant.Constable) 10.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter23.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        constableBloomFilter28.insert(constable29);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter28.getClass();
        boolean boolean32 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        boolean boolean58 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable62 = null;
        boolean boolean63 = constableBloomFilter61.contains(constable62);
        constableBloomFilter61.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean67 = constableBloomFilter61.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass68 = constableBloomFilter61.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean70 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter73.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter73.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter73.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass80 = constableBloomFilter73.getClass();
        boolean boolean81 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass80);
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass80);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter35.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass83);
        boolean boolean88 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = constableBloomFilterBloomFilter29.getClass();
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        constableBloomFilter36.insert(constable37);
        constableBloomFilter36.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean45 = constableBloomFilter43.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter43.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter36.getClass();
        boolean boolean49 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean54 = constableBloomFilter52.contains((java.lang.constant.Constable) 0L);
        boolean boolean56 = constableBloomFilter52.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean58 = constableBloomFilter52.contains((java.lang.constant.Constable) '4');
        boolean boolean60 = constableBloomFilter52.contains((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter63.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter63.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter63.insert((java.lang.constant.Constable) (-1L));
        boolean boolean71 = constableBloomFilter63.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter63.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter63.getClass();
        boolean boolean75 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass74);
        boolean boolean77 = constableBloomFilter52.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean85 = constableBloomFilter83.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass86 = constableBloomFilter83.getClass();
        constableBloomFilter80.insert((java.lang.constant.Constable) wildcardClass86);
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass86);
        boolean boolean89 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass86);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass18 = constableBloomFilter11.getClass();
        boolean boolean19 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter8.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean26 = constableBloomFilter24.contains((java.lang.constant.Constable) 0L);
        boolean boolean28 = constableBloomFilter24.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(100, (int) (byte) 0);
        java.lang.Class<?> wildcardClass37 = genericDeclarationBloomFilter36.getClass();
        boolean boolean38 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean43 = constableBloomFilter41.contains((java.lang.constant.Constable) ' ');
        boolean boolean45 = constableBloomFilter41.contains((java.lang.constant.Constable) (short) 1);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter41.contains(constable46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter50.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass51);
        boolean boolean53 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass51);
        boolean boolean54 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean53);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>((int) ' ', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter14.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass25 = wildcardClassOfFieldBloomFilter24.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass25);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter31.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable36 = null;
        constableBloomFilter31.insert(constable36);
        boolean boolean39 = constableBloomFilter31.contains((java.lang.constant.Constable) 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass45 = wildcardClassOfFieldBloomFilter44.getClass();
        boolean boolean46 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass45);
        boolean boolean48 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean47);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter2.contains(constable49);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter8.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean12 = constableBloomFilter8.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter15.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass24 = wildcardClassOfFieldBloomFilter23.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter29.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass30);
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass30);
        boolean boolean33 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass51 = constableBloomFilter44.getClass();
        boolean boolean52 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass62);
        boolean boolean65 = constableBloomFilter41.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass69 = wildcardClassOfFieldBloomFilter68.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass69);
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass69);
        boolean boolean72 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass69);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) '#');
        java.lang.constant.Constable constable77 = null;
        constableBloomFilter76.insert(constable77);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean86 = constableBloomFilter84.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable90 = null;
        boolean boolean91 = constableBloomFilter89.contains(constable90);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter89.getClass();
        constableBloomFilter84.insert((java.lang.constant.Constable) wildcardClass92);
        constableBloomFilter81.insert((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter81.getClass();
        constableBloomFilter76.insert((java.lang.constant.Constable) wildcardClass95);
        boolean boolean97 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass95);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (byte) -1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) -1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) (byte) -1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass10 = wildcardClassOfFieldBloomFilter9.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 1);
        java.lang.Class<?> wildcardClass15 = constableBloomFilterBloomFilter14.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean21 = constableBloomFilter19.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter24.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass38 = wildcardClassOfFieldBloomFilter37.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass38);
        boolean boolean40 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass47 = wildcardClassOfFieldBloomFilter46.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass50);
        boolean boolean53 = constableBloomFilter43.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter43.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass54);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter31.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean58 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass56);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass11 = wildcardClassOfFieldBloomFilter10.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass11);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass25 = wildcardClassOfFieldBloomFilter24.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter21.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter34.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter44.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter44.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter57.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter57.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable71 = null;
        boolean boolean72 = constableBloomFilter70.contains(constable71);
        constableBloomFilter70.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable78 = null;
        boolean boolean79 = constableBloomFilter77.contains(constable78);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter77.getClass();
        constableBloomFilter70.insert((java.lang.constant.Constable) wildcardClass80);
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass80);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter57.getClass();
        boolean boolean84 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass83);
        boolean boolean85 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean84);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter88 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (short) 10, (int) ' ');
        java.lang.Class<?> wildcardClass89 = strComparableBloomFilter88.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass89);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass18 = constableBloomFilter11.getClass();
        boolean boolean19 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter8.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean26 = constableBloomFilter24.contains((java.lang.constant.Constable) 0L);
        boolean boolean28 = constableBloomFilter24.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(1, (int) '4');
        java.lang.Class<?> wildcardClass37 = constableBloomFilterBloomFilter36.getClass();
        boolean boolean38 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter41.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) (short) 100);
        constableBloomFilter41.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass50 = constableBloomFilter41.getClass();
        boolean boolean51 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass50);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) '#');
        java.lang.constant.Constable constable56 = null;
        constableBloomFilter55.insert(constable56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter63.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter63.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable68 = null;
        constableBloomFilter63.insert(constable68);
        boolean boolean71 = constableBloomFilter63.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass75 = wildcardClassOfFieldBloomFilter74.getClass();
        boolean boolean76 = constableBloomFilter63.contains((java.lang.constant.Constable) wildcardClass75);
        constableBloomFilter60.insert((java.lang.constant.Constable) wildcardClass75);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter60.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass78);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass78);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass14 = constableBloomFilter5.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter2.contains(constable16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter20.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean26 = constableBloomFilter20.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean28 = constableBloomFilter20.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter38.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass47 = wildcardClassOfFieldBloomFilter46.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter52.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass53);
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter58.getClass();
        boolean boolean64 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter31.getClass();
        boolean boolean66 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter72.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter72.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable77 = null;
        constableBloomFilter72.insert(constable77);
        boolean boolean80 = constableBloomFilter72.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass84 = wildcardClassOfFieldBloomFilter83.getClass();
        boolean boolean85 = constableBloomFilter72.contains((java.lang.constant.Constable) wildcardClass84);
        constableBloomFilter69.insert((java.lang.constant.Constable) wildcardClass84);
        boolean boolean87 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass84);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter90 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 1);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter90.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass91);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass91);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) 'a', (int) (byte) 1);
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 100L);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass24 = constableBloomFilter17.getClass();
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean38 = constableBloomFilter14.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass42 = wildcardClassOfFieldBloomFilter41.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean44 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass42);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean54 = constableBloomFilter52.contains((java.lang.constant.Constable) ' ');
        boolean boolean56 = constableBloomFilter52.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter52.getClass();
        boolean boolean58 = constableBloomFilter49.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 1);
        java.lang.constant.Constable constable62 = null;
        constableBloomFilter61.insert(constable62);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter61.getClass();
        boolean boolean65 = constableBloomFilter49.contains((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) ' ');
        java.lang.Class<?> wildcardClass69 = constableBloomFilter68.getClass();
        boolean boolean70 = constableBloomFilter49.contains((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 1);
        java.lang.Class<?> wildcardClass77 = constableBloomFilterBloomFilter76.getClass();
        constableBloomFilter73.insert((java.lang.constant.Constable) wildcardClass77);
        boolean boolean79 = constableBloomFilter49.contains((java.lang.constant.Constable) wildcardClass77);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass77);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass77);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter15.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        constableBloomFilter22.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter29.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass32);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter38.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean49 = constableBloomFilter47.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter47.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass50);
        boolean boolean52 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>((int) (byte) 100, 100);
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter15.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter15.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter15.insert((java.lang.constant.Constable) (-1L));
        boolean boolean23 = constableBloomFilter15.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter15.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass26 = constableBloomFilter15.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass43 = constableBloomFilterBloomFilter42.getClass();
        boolean boolean44 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass43);
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter48.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass49);
        java.lang.constant.Constable constable52 = null;
        constableBloomFilter2.insert(constable52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass60 = wildcardClassOfFieldBloomFilter59.getClass();
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass60);
        constableBloomFilter56.insert((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter66.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter66.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable71 = null;
        constableBloomFilter66.insert(constable71);
        boolean boolean74 = constableBloomFilter66.contains((java.lang.constant.Constable) 0);
        constableBloomFilter66.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass80 = wildcardClassOfFieldBloomFilter79.getClass();
        boolean boolean81 = constableBloomFilter66.contains((java.lang.constant.Constable) wildcardClass80);
        boolean boolean82 = constableBloomFilter56.contains((java.lang.constant.Constable) wildcardClass80);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass80);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter86.getClass();
        boolean boolean88 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass87);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter17.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable22 = null;
        constableBloomFilter17.insert(constable22);
        boolean boolean25 = constableBloomFilter17.contains((java.lang.constant.Constable) 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass31 = wildcardClassOfFieldBloomFilter30.getClass();
        boolean boolean32 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 1);
        java.lang.Class<?> wildcardClass40 = constableBloomFilterBloomFilter39.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (short) 1, 0);
        java.lang.Class<?> wildcardClass46 = typeDescriptorBloomFilter45.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass14 = constantDescBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter18.insert((java.lang.constant.Constable) 10);
        constableBloomFilter18.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        boolean boolean33 = constableBloomFilter25.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter25.getClass();
        boolean boolean35 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass34);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter39.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter39.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        constableBloomFilter54.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter54.getClass();
        boolean boolean62 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter65.contains(constable66);
        constableBloomFilter65.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean71 = constableBloomFilter65.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass72 = constableBloomFilter65.getClass();
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass72);
        boolean boolean75 = constableBloomFilter51.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter51.getClass();
        boolean boolean77 = constableBloomFilter48.contains((java.lang.constant.Constable) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter48.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass78);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (short) 10, (int) '4');
        java.lang.Class<?> wildcardClass83 = charSequenceBloomFilter82.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass83);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter39.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean11 = constableBloomFilter9.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) 100L);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        boolean boolean36 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter39.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass46);
        boolean boolean48 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass46);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass46);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 10);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 100);
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter10.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter10.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter10.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter21.insert((java.lang.constant.Constable) 10);
        boolean boolean25 = constableBloomFilter21.contains((java.lang.constant.Constable) true);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean48 = constableBloomFilter42.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass49 = constableBloomFilter42.getClass();
        boolean boolean50 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable54 = null;
        boolean boolean55 = constableBloomFilter53.contains(constable54);
        constableBloomFilter53.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean59 = constableBloomFilter53.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass60 = constableBloomFilter53.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass60);
        boolean boolean62 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass60);
        boolean boolean63 = constableBloomFilter21.contains((java.lang.constant.Constable) boolean62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        boolean boolean68 = constableBloomFilter66.contains(constable67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable72 = null;
        boolean boolean73 = constableBloomFilter71.contains(constable72);
        boolean boolean75 = constableBloomFilter71.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter71.getClass();
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass76);
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass76);
        boolean boolean79 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass76);
        boolean boolean81 = constableBloomFilter10.contains((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter10.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass82);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable87 = null;
        boolean boolean88 = constableBloomFilter86.contains(constable87);
        constableBloomFilter86.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean92 = constableBloomFilter86.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass93 = constableBloomFilter86.getClass();
        boolean boolean94 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass93);
        boolean boolean95 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (short) 0, 10);
        java.lang.Class<?> wildcardClass3 = objBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter50.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter50.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        boolean boolean58 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass57);
        boolean boolean59 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean58);
        boolean boolean61 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter64.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean68 = constableBloomFilter64.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter64.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean72 = constableBloomFilter64.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter64.getClass();
        boolean boolean74 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass73);
        java.lang.constant.Constable constable75 = null;
        constableBloomFilter2.insert(constable75);
        java.lang.Class<?> wildcardClass77 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass11 = constableBloomFilterBloomFilter10.getClass();
        boolean boolean12 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass11);
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        boolean boolean27 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass37);
        boolean boolean40 = constableBloomFilter16.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass44 = wildcardClassOfFieldBloomFilter43.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass44);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass44);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 10, 1);
        java.lang.Class<?> wildcardClass52 = serializableBloomFilter51.getClass();
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        constableBloomFilter2.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter9.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter18.insert((java.lang.constant.Constable) 10);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter18.contains(constable23);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter18.getClass();
        boolean boolean26 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter35.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean39 = constableBloomFilter35.contains((java.lang.constant.Constable) 100L);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter35.contains((java.lang.constant.Constable) "");
        java.lang.Class<?> wildcardClass44 = constableBloomFilter35.getClass();
        boolean boolean45 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass44);
        constableBloomFilter29.insert((java.lang.constant.Constable) boolean45);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter29.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass65 = constableBloomFilter58.getClass();
        boolean boolean66 = constableBloomFilter55.contains((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter55.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean73 = constableBloomFilter71.contains((java.lang.constant.Constable) 0L);
        boolean boolean75 = constableBloomFilter71.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean77 = constableBloomFilter71.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass78 = constableBloomFilter71.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass78);
        boolean boolean81 = constableBloomFilter55.contains((java.lang.constant.Constable) (-1.0f));
        java.lang.Class<?> wildcardClass82 = constableBloomFilter55.getClass();
        boolean boolean83 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass82);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) (short) 1);
        java.lang.Class<?> wildcardClass87 = constableBloomFilterBloomFilter86.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass87);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter91 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) '#');
        java.lang.Class<?> wildcardClass92 = constableBloomFilter91.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter52.getClass();
        boolean boolean95 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, 0);
        java.lang.Class<?> wildcardClass9 = constantDescBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass22 = wildcardClassOfFieldBloomFilter21.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass25);
        boolean boolean28 = constableBloomFilter18.contains((java.lang.constant.Constable) '#');
        constableBloomFilter18.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter33.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter33.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable38 = null;
        constableBloomFilter33.insert(constable38);
        boolean boolean41 = constableBloomFilter33.contains((java.lang.constant.Constable) 0);
        constableBloomFilter33.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass47 = wildcardClassOfFieldBloomFilter46.getClass();
        boolean boolean48 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter18.insert((java.lang.constant.Constable) boolean48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        constableBloomFilter52.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean58 = constableBloomFilter52.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter52.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter52.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter65.contains(constable66);
        constableBloomFilter65.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable73 = null;
        boolean boolean74 = constableBloomFilter72.contains(constable73);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter72.getClass();
        constableBloomFilter65.insert((java.lang.constant.Constable) wildcardClass75);
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass75);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass75);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter18.getClass();
        boolean boolean80 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass79);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter15.getClass();
        boolean boolean82 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) '#');
        constableBloomFilter5.insert((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable21 = null;
        boolean boolean22 = constableBloomFilter20.contains(constable21);
        constableBloomFilter20.insert((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        constableBloomFilter30.insert(constable31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass48 = wildcardClassOfFieldBloomFilter47.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass51);
        boolean boolean54 = constableBloomFilter44.contains((java.lang.constant.Constable) '#');
        constableBloomFilter44.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter44.getClass();
        boolean boolean58 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass57);
        boolean boolean59 = constableBloomFilter30.contains((java.lang.constant.Constable) boolean58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass63 = wildcardClassOfFieldBloomFilter62.getClass();
        boolean boolean64 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass63);
        boolean boolean65 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass63);
        boolean boolean66 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass70 = constableBloomFilter69.getClass();
        boolean boolean71 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter20.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter40.contains(constable41);
        constableBloomFilter40.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter40.getClass();
        boolean boolean46 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter13.getClass();
        boolean boolean48 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter54.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter54.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable59 = null;
        constableBloomFilter54.insert(constable59);
        boolean boolean62 = constableBloomFilter54.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass66 = wildcardClassOfFieldBloomFilter65.getClass();
        boolean boolean67 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass66);
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass66);
        boolean boolean69 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 1);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter72.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass73);
        java.lang.constant.Constable constable75 = null;
        constableBloomFilter2.insert(constable75);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter17.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        boolean boolean33 = constableBloomFilter31.contains(constable32);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter31.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass34);
        boolean boolean36 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        boolean boolean43 = constableBloomFilter39.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter39.getClass();
        boolean boolean45 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter10.getClass();
        boolean boolean47 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        boolean boolean52 = constableBloomFilter50.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter55.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) ' ');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter60.getClass();
        boolean boolean62 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 100, (int) (short) 10);
        java.lang.Class<?> wildcardClass67 = typeDescriptorBloomFilter66.getClass();
        boolean boolean68 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter16.getClass();
        boolean boolean30 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean30);
        boolean boolean33 = constableBloomFilter2.contains((java.lang.constant.Constable) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean43 = constableBloomFilter41.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter46.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass49);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter38.getClass();
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) ' ');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter56.getClass();
        boolean boolean58 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 1, 10);
        java.lang.Class<?> wildcardClass62 = typeDescriptorBloomFilter61.getClass();
        boolean boolean63 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        boolean boolean68 = constableBloomFilter66.contains(constable67);
        constableBloomFilter66.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean72 = constableBloomFilter66.contains((java.lang.constant.Constable) 'a');
        boolean boolean74 = constableBloomFilter66.contains((java.lang.constant.Constable) 100.0f);
        constableBloomFilter66.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 1);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter79.getClass();
        boolean boolean81 = constableBloomFilter66.contains((java.lang.constant.Constable) wildcardClass80);
        boolean boolean82 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean81);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter25.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter40.contains(constable41);
        constableBloomFilter40.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean46 = constableBloomFilter40.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass47 = constableBloomFilter40.getClass();
        boolean boolean48 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable52 = null;
        boolean boolean53 = constableBloomFilter51.contains(constable52);
        constableBloomFilter51.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean57 = constableBloomFilter51.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass58 = constableBloomFilter51.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass58);
        boolean boolean61 = constableBloomFilter37.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass65 = wildcardClassOfFieldBloomFilter64.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable73 = null;
        boolean boolean74 = constableBloomFilter72.contains(constable73);
        constableBloomFilter72.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean78 = constableBloomFilter72.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter72.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter72.insert((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass83 = constableBloomFilter72.getClass();
        boolean boolean84 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass83);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 10.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean19 = constableBloomFilter17.contains((java.lang.constant.Constable) ' ');
        boolean boolean21 = constableBloomFilter17.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass22 = constableBloomFilter17.getClass();
        boolean boolean23 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        constableBloomFilter26.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean32 = constableBloomFilter26.contains((java.lang.constant.Constable) 'a');
        boolean boolean34 = constableBloomFilter26.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter26.getClass();
        boolean boolean36 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter40.contains(constable41);
        boolean boolean44 = constableBloomFilter40.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter50.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter50.insert((java.lang.constant.Constable) (-1L));
        boolean boolean58 = constableBloomFilter50.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter50.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass59);
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass59);
        boolean boolean62 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter65.contains(constable66);
        boolean boolean69 = constableBloomFilter65.contains((java.lang.constant.Constable) 1L);
        boolean boolean71 = constableBloomFilter65.contains((java.lang.constant.Constable) 100.0d);
        constableBloomFilter65.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass77 = wildcardClassOfFieldBloomFilter76.getClass();
        constableBloomFilter65.insert((java.lang.constant.Constable) wildcardClass77);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter65.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass79);
        constableBloomFilter7.insert((java.lang.constant.Constable) 1.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter85 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        boolean boolean87 = constableBloomFilter85.contains((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter85.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass88);
        boolean boolean90 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass88);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter93 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>(1, 0);
        java.lang.Class<?> wildcardClass94 = annotatedElementBloomFilter93.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>(10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass47 = constableBloomFilterBloomFilter46.getClass();
        boolean boolean48 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass55 = wildcardClassOfFieldBloomFilter54.getClass();
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass58);
        boolean boolean61 = constableBloomFilter51.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter51.getClass();
        boolean boolean63 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter43.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass64);
        java.lang.Class<?> wildcardClass66 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 100, (int) (byte) 100);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean17 = constableBloomFilter15.contains((java.lang.constant.Constable) ' ');
        boolean boolean19 = constableBloomFilter15.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter15.getClass();
        boolean boolean21 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        boolean boolean32 = constableBloomFilter24.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass33 = constableBloomFilter24.getClass();
        boolean boolean34 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass33);
        boolean boolean35 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter38.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter38.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter38.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        boolean boolean58 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass57);
        boolean boolean59 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass57);
        boolean boolean60 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass67 = wildcardClassOfFieldBloomFilter66.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass70);
        boolean boolean73 = constableBloomFilter63.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable77 = null;
        boolean boolean78 = constableBloomFilter76.contains(constable77);
        constableBloomFilter76.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter76.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass81);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter63.getClass();
        boolean boolean84 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass83);
        java.lang.Class<?> wildcardClass86 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean32 = constableBloomFilter30.contains((java.lang.constant.Constable) 0L);
        boolean boolean34 = constableBloomFilter30.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter37.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean41 = constableBloomFilter37.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter37.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean45 = constableBloomFilter37.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter37.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter30.getClass();
        boolean boolean49 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter52.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter52.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable57 = null;
        constableBloomFilter52.insert(constable57);
        boolean boolean60 = constableBloomFilter52.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass64 = wildcardClassOfFieldBloomFilter63.getClass();
        boolean boolean65 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass64);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass64);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) '4', (int) 'a');
        java.lang.Class<?> wildcardClass3 = constantDescBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) '4');
        java.lang.Class<?> wildcardClass3 = wildcardClassOfFieldBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(0, 10);
        java.lang.Class<?> wildcardClass3 = objBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (short) 1, 1);
        java.lang.Class<?> wildcardClass6 = typeBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (short) 100, (int) (short) 0);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass14 = wildcardClassOfFieldBloomFilter13.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        java.lang.constant.Constable constable16 = null;
        constableBloomFilter2.insert(constable16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean22 = constableBloomFilter20.contains((java.lang.constant.Constable) 0L);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean31 = constableBloomFilter27.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter27.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean35 = constableBloomFilter27.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter27.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter43.getClass();
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass44);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter20.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        constableBloomFilter54.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter54.getClass();
        boolean boolean62 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass61);
        boolean boolean63 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass61);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) 'a', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((-1), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = constableBloomFilterBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter12.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass18 = genericDeclarationBloomFilter17.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter12.getClass();
        boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter24.insert((java.lang.constant.Constable) 10);
        constableBloomFilter24.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean33 = constableBloomFilter31.contains((java.lang.constant.Constable) 0L);
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter38.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean42 = constableBloomFilter38.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter38.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean46 = constableBloomFilter38.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter38.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass47);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter24.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean59 = constableBloomFilter57.contains((java.lang.constant.Constable) ' ');
        boolean boolean61 = constableBloomFilter57.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter57.getClass();
        boolean boolean63 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 1);
        java.lang.constant.Constable constable67 = null;
        constableBloomFilter66.insert(constable67);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter66.getClass();
        boolean boolean70 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) ' ');
        java.lang.Class<?> wildcardClass74 = constableBloomFilter73.getClass();
        boolean boolean75 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 1);
        java.lang.Class<?> wildcardClass82 = constableBloomFilterBloomFilter81.getClass();
        constableBloomFilter78.insert((java.lang.constant.Constable) wildcardClass82);
        boolean boolean84 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass82);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass88 = constantDescBloomFilter87.getClass();
        boolean boolean89 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass88);
        boolean boolean90 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass88);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        constableBloomFilter23.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean29 = constableBloomFilter23.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass30 = constableBloomFilter23.getClass();
        boolean boolean31 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass41);
        boolean boolean43 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass41);
        boolean boolean44 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean49 = constableBloomFilter47.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter47.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass50);
        java.lang.constant.Constable constable52 = null;
        constableBloomFilter2.insert(constable52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) 'a');
        constableBloomFilter56.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, 0);
        java.lang.Class<?> wildcardClass68 = constantDescBloomFilter67.getClass();
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = constableBloomFilter64.getClass();
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter61.getClass();
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass72);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter79.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter79.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter79.insert((java.lang.constant.Constable) (-1L));
        boolean boolean87 = constableBloomFilter79.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter79.getClass();
        constableBloomFilter76.insert((java.lang.constant.Constable) wildcardClass88);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean94 = constableBloomFilter92.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter92.getClass();
        constableBloomFilter76.insert((java.lang.constant.Constable) wildcardClass95);
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass95);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass9 = constableBloomFilterBloomFilter8.getClass();
        boolean boolean10 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter5.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass16 = constableBloomFilter15.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass16);
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) ' ', (int) (short) 10);
        java.lang.Class<?> wildcardClass22 = typeBloomFilter21.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(0, (int) (byte) 0);
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter11.insert((java.lang.constant.Constable) 10);
        boolean boolean15 = constableBloomFilter11.contains((java.lang.constant.Constable) true);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 10);
        constableBloomFilter20.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        boolean boolean33 = constableBloomFilter25.contains((java.lang.constant.Constable) 100.0f);
        constableBloomFilter25.insert((java.lang.constant.Constable) (short) 1);
        boolean boolean37 = constableBloomFilter25.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass38 = constableBloomFilter25.getClass();
        boolean boolean39 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass38);
        boolean boolean40 = constableBloomFilter11.contains((java.lang.constant.Constable) boolean39);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter11.getClass();
        boolean boolean42 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((-1), (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass13 = wildcardClassOfFieldBloomFilter12.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass16);
        boolean boolean19 = constableBloomFilter9.contains((java.lang.constant.Constable) '#');
        constableBloomFilter9.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass22 = constableBloomFilter9.getClass();
        boolean boolean23 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass22);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass32 = constableBloomFilterBloomFilter31.getClass();
        boolean boolean33 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter39.getClass();
        boolean boolean47 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass57);
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass57);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter28.getClass();
        boolean boolean61 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (short) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter16.getClass();
        boolean boolean30 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean30);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter47.contains(constable48);
        constableBloomFilter47.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean53 = constableBloomFilter47.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass54 = constableBloomFilter47.getClass();
        boolean boolean55 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass65 = constableBloomFilter58.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass65);
        boolean boolean68 = constableBloomFilter44.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass72 = wildcardClassOfFieldBloomFilter71.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass72);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable81 = null;
        boolean boolean82 = constableBloomFilter80.contains(constable81);
        constableBloomFilter80.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean86 = constableBloomFilter80.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass87 = constableBloomFilter80.getClass();
        boolean boolean88 = constableBloomFilter77.contains((java.lang.constant.Constable) wildcardClass87);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter77.getClass();
        boolean boolean90 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass89);
        boolean boolean91 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass89);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean91);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) '#');
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter10.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable15 = null;
        constableBloomFilter10.insert(constable15);
        boolean boolean18 = constableBloomFilter10.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass22 = wildcardClassOfFieldBloomFilter21.getClass();
        boolean boolean23 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass22);
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass22);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter29.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean33 = constableBloomFilter29.contains((java.lang.constant.Constable) 100L);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean37 = constableBloomFilter29.contains((java.lang.constant.Constable) "");
        constableBloomFilter29.insert((java.lang.constant.Constable) 10.0f);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter29.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass51 = wildcardClassOfFieldBloomFilter50.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass54);
        boolean boolean57 = constableBloomFilter47.contains((java.lang.constant.Constable) '#');
        constableBloomFilter47.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass60 = constableBloomFilter47.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass60);
        boolean boolean62 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean14 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean21 = constableBloomFilter17.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter17.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean25 = constableBloomFilter17.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass29 = constantDescBloomFilter28.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        constableBloomFilter34.insert(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean43 = constableBloomFilter41.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass44 = constableBloomFilter41.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass53 = constableBloomFilterBloomFilter52.getClass();
        boolean boolean54 = constableBloomFilter49.contains((java.lang.constant.Constable) wildcardClass53);
        boolean boolean56 = constableBloomFilter49.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass60 = constableBloomFilter59.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass60);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass60);
        java.lang.constant.Constable constable63 = null;
        constableBloomFilter2.insert(constable63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, 0);
        java.lang.Class<?> wildcardClass71 = constantDescBloomFilter70.getClass();
        constableBloomFilter67.insert((java.lang.constant.Constable) wildcardClass71);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) (byte) 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 1);
        java.lang.constant.Constable constable7 = null;
        boolean boolean8 = constableBloomFilter2.contains(constable7);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, 1);
        constableBloomFilter11.insert((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter16.getClass();
        boolean boolean18 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass25 = wildcardClassOfFieldBloomFilter24.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter21.contains((java.lang.constant.Constable) '#');
        constableBloomFilter21.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter36.insert((java.lang.constant.Constable) 10);
        boolean boolean40 = constableBloomFilter36.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter43.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass52 = wildcardClassOfFieldBloomFilter51.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean55 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter59.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean63 = constableBloomFilter59.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter59.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean67 = constableBloomFilter59.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter59.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean70 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass68);
        java.lang.Class<?> wildcardClass71 = constableBloomFilter11.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass71);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>((int) (short) 1, (int) (byte) 10);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter11.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter11.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter11.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter22.insert((java.lang.constant.Constable) 10);
        boolean boolean26 = constableBloomFilter22.contains((java.lang.constant.Constable) true);
        boolean boolean28 = constableBloomFilter22.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        boolean boolean33 = constableBloomFilter31.contains(constable32);
        constableBloomFilter31.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean37 = constableBloomFilter31.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass50 = constableBloomFilter43.getClass();
        boolean boolean51 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        constableBloomFilter54.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter54.getClass();
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass61);
        boolean boolean63 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass61);
        boolean boolean64 = constableBloomFilter22.contains((java.lang.constant.Constable) boolean63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable73 = null;
        boolean boolean74 = constableBloomFilter72.contains(constable73);
        boolean boolean76 = constableBloomFilter72.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass77 = constableBloomFilter72.getClass();
        constableBloomFilter67.insert((java.lang.constant.Constable) wildcardClass77);
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass77);
        boolean boolean80 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass77);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter11.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass81);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass17 = charSequenceBloomFilter16.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass17);
        boolean boolean19 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) 'a', (int) (byte) 10);
        java.lang.Class<?> wildcardClass23 = serializableBloomFilter22.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        constableBloomFilter27.insert(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean36 = constableBloomFilter34.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter34.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean45 = constableBloomFilter41.contains((java.lang.constant.Constable) 100L);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable54 = null;
        boolean boolean55 = constableBloomFilter53.contains(constable54);
        constableBloomFilter53.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean59 = constableBloomFilter53.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass60 = constableBloomFilter53.getClass();
        boolean boolean61 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable65 = null;
        boolean boolean66 = constableBloomFilter64.contains(constable65);
        constableBloomFilter64.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean70 = constableBloomFilter64.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass71 = constableBloomFilter64.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass71);
        boolean boolean73 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass71);
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass71);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 10);
        constableBloomFilter27.insert((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter27.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass79);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        boolean boolean42 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter31.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass54);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter2.contains(constable56);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) '#', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean29 = constableBloomFilter27.contains((java.lang.constant.Constable) 0L);
        boolean boolean31 = constableBloomFilter27.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter34.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean38 = constableBloomFilter34.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter34.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean42 = constableBloomFilter34.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter34.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter27.getClass();
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter49.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter49.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable54 = null;
        constableBloomFilter49.insert(constable54);
        boolean boolean57 = constableBloomFilter49.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass61 = wildcardClassOfFieldBloomFilter60.getClass();
        boolean boolean62 = constableBloomFilter49.contains((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass61);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        constableBloomFilter7.insert(constable8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter7.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean16 = constableBloomFilter14.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass23 = constableBloomFilterBloomFilter22.getClass();
        boolean boolean24 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass23);
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter28.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        constableBloomFilter36.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean42 = constableBloomFilter36.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass43 = constableBloomFilter36.getClass();
        boolean boolean44 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter47.contains(constable48);
        constableBloomFilter47.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean53 = constableBloomFilter47.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass54 = constableBloomFilter47.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass54);
        boolean boolean57 = constableBloomFilter33.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter33.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass58);
        boolean boolean60 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass58);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter64.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter64.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean70 = constableBloomFilter64.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean72 = constableBloomFilter64.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter64.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean79 = constableBloomFilter77.contains((java.lang.constant.Constable) 0L);
        boolean boolean81 = constableBloomFilter77.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter84.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean88 = constableBloomFilter84.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter84.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean92 = constableBloomFilter84.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter84.getClass();
        constableBloomFilter77.insert((java.lang.constant.Constable) wildcardClass93);
        boolean boolean95 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass93);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(0, 0);
        java.lang.Class<?> wildcardClass10 = serializableBloomFilter9.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable15 = null;
        constableBloomFilter14.insert(constable15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter19.getClass();
        boolean boolean21 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass20);
        java.lang.constant.Constable constable22 = null;
        constableBloomFilter14.insert(constable22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter32.getClass();
        boolean boolean40 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter29.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean47 = constableBloomFilter45.contains((java.lang.constant.Constable) 0L);
        boolean boolean49 = constableBloomFilter45.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean55 = constableBloomFilter29.contains((java.lang.constant.Constable) (-1.0f));
        java.lang.Class<?> wildcardClass56 = constableBloomFilter29.getClass();
        boolean boolean57 = constableBloomFilter26.contains((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) (short) 1);
        java.lang.Class<?> wildcardClass61 = constableBloomFilterBloomFilter60.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass61);
        boolean boolean63 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean63);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass14 = constableBloomFilter5.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        constableBloomFilter18.insert(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean27 = constableBloomFilter25.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter25.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter32.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean36 = constableBloomFilter32.contains((java.lang.constant.Constable) 100L);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass51 = constableBloomFilter44.getClass();
        boolean boolean52 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass62);
        boolean boolean64 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter18.getClass();
        boolean boolean20 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter15.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter25.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter25.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        boolean boolean36 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass43 = wildcardClassOfFieldBloomFilter42.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass46);
        boolean boolean49 = constableBloomFilter39.contains((java.lang.constant.Constable) '#');
        constableBloomFilter39.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter39.getClass();
        boolean boolean53 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter56.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable62 = null;
        constableBloomFilter61.insert(constable62);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter61.getClass();
        boolean boolean65 = constableBloomFilter56.contains((java.lang.constant.Constable) wildcardClass64);
        constableBloomFilter25.insert((java.lang.constant.Constable) boolean65);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter25.getClass();
        boolean boolean68 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass67);
        java.lang.constant.Constable constable69 = null;
        constableBloomFilter2.insert(constable69);
        java.lang.Class<?> wildcardClass71 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) '4');
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter13.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter13.insert((java.lang.constant.Constable) (-1L));
        boolean boolean21 = constableBloomFilter13.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter13.getClass();
        boolean boolean25 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass24);
        boolean boolean27 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean35 = constableBloomFilter33.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter33.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass36);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter2.contains(constable39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass47 = wildcardClassOfFieldBloomFilter46.getClass();
        boolean boolean48 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter43.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        constableBloomFilter58.insert(constable59);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter58.getClass();
        boolean boolean62 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter65.contains(constable66);
        constableBloomFilter65.insert((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter65.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter65.getClass();
        boolean boolean73 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass72);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass80 = wildcardClassOfFieldBloomFilter79.getClass();
        constableBloomFilter76.insert((java.lang.constant.Constable) wildcardClass80);
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        constableBloomFilter76.insert((java.lang.constant.Constable) wildcardClass83);
        boolean boolean86 = constableBloomFilter76.contains((java.lang.constant.Constable) '#');
        constableBloomFilter76.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass89 = constableBloomFilter76.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass89);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass89);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 100);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean14 = constableBloomFilter10.contains((java.lang.constant.Constable) 100L);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        constableBloomFilter22.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean28 = constableBloomFilter22.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter22.getClass();
        boolean boolean30 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        constableBloomFilter33.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean39 = constableBloomFilter33.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass40 = constableBloomFilter33.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass40);
        boolean boolean43 = constableBloomFilter19.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass47 = wildcardClassOfFieldBloomFilter46.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass47);
        boolean boolean49 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable61 = null;
        boolean boolean62 = constableBloomFilter60.contains(constable61);
        boolean boolean64 = constableBloomFilter60.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter60.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter55.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass67);
        boolean boolean69 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable73 = null;
        boolean boolean74 = constableBloomFilter72.contains(constable73);
        constableBloomFilter72.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable80 = null;
        boolean boolean81 = constableBloomFilter79.contains(constable80);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter79.getClass();
        constableBloomFilter72.insert((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass82);
        boolean boolean85 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean85);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (byte) 10, (int) (byte) 1);
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) '4', 1);
        java.lang.Class<?> wildcardClass3 = charSequenceBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass14 = wildcardClassOfFieldBloomFilter13.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass14);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass20);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter32.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter46.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 10, (int) (short) 100);
        java.lang.Class<?> wildcardClass56 = serializableBloomFilter55.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) 'a');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter60.getClass();
        boolean boolean62 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter7.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass15 = constantDescBloomFilter14.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass15);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        constableBloomFilter23.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean29 = constableBloomFilter23.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass30 = constableBloomFilter23.getClass();
        boolean boolean31 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass30);
        constableBloomFilter20.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        constableBloomFilter36.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean42 = constableBloomFilter36.contains((java.lang.constant.Constable) 'a');
        boolean boolean44 = constableBloomFilter36.contains((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        constableBloomFilter47.insert(constable48);
        constableBloomFilter47.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean56 = constableBloomFilter54.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter54.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter61.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean65 = constableBloomFilter61.contains((java.lang.constant.Constable) 100L);
        boolean boolean67 = constableBloomFilter61.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        constableBloomFilter73.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean79 = constableBloomFilter73.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass80 = constableBloomFilter73.getClass();
        boolean boolean81 = constableBloomFilter70.contains((java.lang.constant.Constable) wildcardClass80);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable85 = null;
        boolean boolean86 = constableBloomFilter84.contains(constable85);
        constableBloomFilter84.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean90 = constableBloomFilter84.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass91 = constableBloomFilter84.getClass();
        constableBloomFilter70.insert((java.lang.constant.Constable) wildcardClass91);
        boolean boolean93 = constableBloomFilter61.contains((java.lang.constant.Constable) wildcardClass91);
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass91);
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass91);
        boolean boolean96 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass91);
        java.lang.Class<?> wildcardClass97 = constableBloomFilter20.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass97);
        java.lang.Class<?> wildcardClass99 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass10 = constantDescBloomFilter9.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) '#');
        java.lang.constant.Constable constable15 = null;
        constableBloomFilter14.insert(constable15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter25.insert((java.lang.constant.Constable) 10);
        boolean boolean29 = constableBloomFilter25.contains((java.lang.constant.Constable) true);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        boolean boolean54 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass64 = constableBloomFilter57.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass64);
        boolean boolean66 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass64);
        boolean boolean67 = constableBloomFilter25.contains((java.lang.constant.Constable) boolean66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean72 = constableBloomFilter70.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter70.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean79 = constableBloomFilter77.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable83 = null;
        boolean boolean84 = constableBloomFilter82.contains(constable83);
        constableBloomFilter82.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter82.getClass();
        boolean boolean88 = constableBloomFilter77.contains((java.lang.constant.Constable) wildcardClass87);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter77.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass89);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter25.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass91);
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass91);
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass91);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter14.getClass();
        boolean boolean96 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass95);
        java.lang.Class<?> wildcardClass97 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass14 = wildcardClassOfFieldBloomFilter13.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        java.lang.constant.Constable constable16 = null;
        constableBloomFilter2.insert(constable16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter20.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        boolean boolean36 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter39.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass46);
        boolean boolean49 = constableBloomFilter25.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter25.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass50);
        boolean boolean52 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass50);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable10 = null;
        constableBloomFilter5.insert(constable10);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter29.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        boolean boolean49 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        constableBloomFilter52.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean58 = constableBloomFilter52.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass59 = constableBloomFilter52.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass59);
        boolean boolean62 = constableBloomFilter38.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass66 = wildcardClassOfFieldBloomFilter65.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass66);
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass66);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass76 = constableBloomFilter75.getClass();
        constableBloomFilter72.insert((java.lang.constant.Constable) wildcardClass76);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass76);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass88 = wildcardClassOfFieldBloomFilter87.getClass();
        constableBloomFilter84.insert((java.lang.constant.Constable) wildcardClass88);
        boolean boolean90 = constableBloomFilter81.contains((java.lang.constant.Constable) wildcardClass88);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter81.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass91);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter95 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter95.getClass();
        boolean boolean97 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass96);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean97);
        java.lang.Class<?> wildcardClass99 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 1, 100);
        java.lang.Class<?> wildcardClass9 = typeDescriptorBloomFilter8.getClass();
        boolean boolean10 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter13.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter13.insert((java.lang.constant.Constable) (-1L));
        boolean boolean21 = constableBloomFilter13.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean26 = constableBloomFilter24.contains((java.lang.constant.Constable) 0L);
        boolean boolean28 = constableBloomFilter24.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10L);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (short) 10, 0);
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 1);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter11.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean19 = constableBloomFilter11.contains((java.lang.constant.Constable) 0L);
        boolean boolean21 = constableBloomFilter11.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        boolean boolean33 = constableBloomFilter31.contains(constable32);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter31.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter45.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean50 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass48);
        boolean boolean51 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter54.getClass();
        boolean boolean58 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter11.getClass();
        boolean boolean60 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 10, (int) (short) 1);
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter25.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter39.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean44 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass42);
        boolean boolean45 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean50 = constableBloomFilter48.contains((java.lang.constant.Constable) ' ');
        boolean boolean52 = constableBloomFilter48.contains((java.lang.constant.Constable) (short) 1);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass55 = constableBloomFilter48.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass55);
        boolean boolean57 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass55);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', (int) (short) 10);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 10, (int) 'a');
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter5.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter32.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        boolean boolean53 = constableBloomFilter42.contains((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable57 = null;
        boolean boolean58 = constableBloomFilter56.contains(constable57);
        constableBloomFilter56.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean62 = constableBloomFilter56.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass63 = constableBloomFilter56.getClass();
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass63);
        boolean boolean66 = constableBloomFilter42.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass70 = wildcardClassOfFieldBloomFilter69.getClass();
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass70);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter74.getClass();
        boolean boolean76 = constableBloomFilter42.contains((java.lang.constant.Constable) wildcardClass75);
        boolean boolean77 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass75);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass18);
        boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter24.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean32 = constableBloomFilter24.contains((java.lang.constant.Constable) 0L);
        boolean boolean34 = constableBloomFilter24.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter24.getClass();
        boolean boolean36 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean41 = constableBloomFilter39.contains((java.lang.constant.Constable) 0L);
        boolean boolean43 = constableBloomFilter39.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter46.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter46.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        boolean boolean54 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass53);
        boolean boolean55 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass53);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable14 = null;
        constableBloomFilter9.insert(constable14);
        boolean boolean17 = constableBloomFilter9.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = constableBloomFilterBloomFilter20.getClass();
        boolean boolean22 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean27 = constableBloomFilter25.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter30.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean34 = constableBloomFilter30.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter30.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean38 = constableBloomFilter30.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass42 = constantDescBloomFilter41.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean44 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass42);
        boolean boolean45 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass42);
        java.lang.constant.Constable constable46 = null;
        constableBloomFilter9.insert(constable46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter57.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable65 = null;
        boolean boolean66 = constableBloomFilter64.contains(constable65);
        constableBloomFilter64.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable72 = null;
        boolean boolean73 = constableBloomFilter71.contains(constable72);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter71.getClass();
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass74);
        boolean boolean76 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass74);
        java.lang.Class<?> wildcardClass77 = constableBloomFilter50.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass77);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass77);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter85 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass86 = constableBloomFilter85.getClass();
        constableBloomFilter82.insert((java.lang.constant.Constable) wildcardClass86);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter82.getClass();
        boolean boolean89 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass18 = constableBloomFilter11.getClass();
        boolean boolean19 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter8.getClass();
        boolean boolean21 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass20);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        constableBloomFilter28.insert(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean37 = constableBloomFilter35.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass38 = constableBloomFilter35.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter42.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean46 = constableBloomFilter42.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter42.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean50 = constableBloomFilter42.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter42.getClass();
        boolean boolean52 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass51);
        boolean boolean53 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter25.getClass();
        boolean boolean55 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean21 = constableBloomFilter19.contains((java.lang.constant.Constable) ' ');
        boolean boolean23 = constableBloomFilter19.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter19.getClass();
        boolean boolean25 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        boolean boolean36 = constableBloomFilter28.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter28.getClass();
        boolean boolean38 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass37);
        boolean boolean39 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass37);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter13.getClass();
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(1, 0);
        java.lang.Class<?> wildcardClass45 = objBloomFilter44.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) (short) 0, 0);
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        constableBloomFilter11.insert(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass22 = wildcardClassOfFieldBloomFilter21.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass25);
        boolean boolean28 = constableBloomFilter18.contains((java.lang.constant.Constable) '#');
        constableBloomFilter18.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter18.getClass();
        boolean boolean32 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter11.insert((java.lang.constant.Constable) 10.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter37.getClass();
        boolean boolean39 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass38);
        java.lang.constant.Constable constable40 = null;
        constableBloomFilter11.insert(constable40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter47.contains(constable48);
        constableBloomFilter47.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean53 = constableBloomFilter47.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass54 = constableBloomFilter47.getClass();
        boolean boolean55 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass65 = constableBloomFilter58.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable70 = null;
        constableBloomFilter69.insert(constable70);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter69.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass72);
        boolean boolean74 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass85 = constableBloomFilter84.getClass();
        boolean boolean86 = constableBloomFilter81.contains((java.lang.constant.Constable) wildcardClass85);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass90 = wildcardClassOfFieldBloomFilter89.getClass();
        constableBloomFilter81.insert((java.lang.constant.Constable) wildcardClass90);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter94 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass95 = serializableBloomFilter94.getClass();
        boolean boolean96 = constableBloomFilter81.contains((java.lang.constant.Constable) wildcardClass95);
        constableBloomFilter78.insert((java.lang.constant.Constable) wildcardClass95);
        boolean boolean98 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 1);
        java.lang.constant.Constable constable7 = null;
        boolean boolean8 = constableBloomFilter2.contains(constable7);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, 1);
        constableBloomFilter11.insert((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter16.getClass();
        boolean boolean18 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass25 = wildcardClassOfFieldBloomFilter24.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter21.contains((java.lang.constant.Constable) '#');
        constableBloomFilter21.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter36.insert((java.lang.constant.Constable) 10);
        boolean boolean40 = constableBloomFilter36.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter43.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass52 = wildcardClassOfFieldBloomFilter51.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean55 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter59.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean63 = constableBloomFilter59.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter59.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean67 = constableBloomFilter59.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter59.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean70 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass68);
        java.lang.Class<?> wildcardClass71 = constableBloomFilter11.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass71);
        java.lang.constant.Constable constable73 = null;
        constableBloomFilter2.insert(constable73);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>((int) (short) 0, (int) (short) 1);
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) '#', (int) (short) 0);
        java.lang.Class<?> wildcardClass3 = strComparableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>(0, (int) (short) 0);
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean16 = constableBloomFilter14.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass23 = constableBloomFilterBloomFilter22.getClass();
        boolean boolean24 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass23);
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        constableBloomFilter32.insert(constable33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass50 = wildcardClassOfFieldBloomFilter49.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean56 = constableBloomFilter46.contains((java.lang.constant.Constable) '#');
        constableBloomFilter46.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass59 = constableBloomFilter46.getClass();
        boolean boolean60 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass59);
        boolean boolean61 = constableBloomFilter32.contains((java.lang.constant.Constable) boolean60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass65 = wildcardClassOfFieldBloomFilter64.getClass();
        boolean boolean66 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass65);
        boolean boolean67 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter5.insert((java.lang.constant.Constable) boolean67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean73 = constableBloomFilter71.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass80 = charSequenceBloomFilter79.getClass();
        boolean boolean81 = constableBloomFilter76.contains((java.lang.constant.Constable) wildcardClass80);
        boolean boolean82 = constableBloomFilter71.contains((java.lang.constant.Constable) boolean81);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter71.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass83);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = constableBloomFilterBloomFilter29.getClass();
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        boolean boolean35 = constableBloomFilter2.contains((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter41.insert((java.lang.constant.Constable) 10);
        boolean boolean45 = constableBloomFilter41.contains((java.lang.constant.Constable) true);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable63 = null;
        boolean boolean64 = constableBloomFilter62.contains(constable63);
        constableBloomFilter62.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean68 = constableBloomFilter62.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass69 = constableBloomFilter62.getClass();
        boolean boolean70 = constableBloomFilter59.contains((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        constableBloomFilter73.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean79 = constableBloomFilter73.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass80 = constableBloomFilter73.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass80);
        boolean boolean82 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass80);
        boolean boolean83 = constableBloomFilter41.contains((java.lang.constant.Constable) boolean82);
        constableBloomFilter41.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter88 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable89 = null;
        boolean boolean90 = constableBloomFilter88.contains(constable89);
        constableBloomFilter88.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter88.getClass();
        boolean boolean94 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass93);
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass93);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter38.getClass();
        boolean boolean97 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass96);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter8.insert((java.lang.constant.Constable) 10);
        boolean boolean12 = constableBloomFilter8.contains((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass13 = constableBloomFilter8.getClass();
        boolean boolean14 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter17.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter28.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean32 = constableBloomFilter28.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter35.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass44 = wildcardClassOfFieldBloomFilter43.getClass();
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass44);
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter49.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass50);
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass50);
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter56.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter56.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter56.insert((java.lang.constant.Constable) (-1L));
        boolean boolean64 = constableBloomFilter56.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter56.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean68 = constableBloomFilter56.contains((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter71.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean75 = constableBloomFilter71.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter71.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean79 = constableBloomFilter71.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass83 = constantDescBloomFilter82.getClass();
        constableBloomFilter71.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass83);
        boolean boolean88 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (short) 100);
        java.lang.Class<?> wildcardClass8 = constableBloomFilter7.getClass();
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 0);
        java.lang.Class<?> wildcardClass13 = constableBloomFilter12.getClass();
        boolean boolean14 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean22 = constableBloomFilter20.contains((java.lang.constant.Constable) ' ');
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass31 = wildcardClassOfFieldBloomFilter30.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass34);
        boolean boolean37 = constableBloomFilter27.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter40.contains(constable41);
        constableBloomFilter40.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean46 = constableBloomFilter40.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        constableBloomFilter52.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean58 = constableBloomFilter52.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass59 = constableBloomFilter52.getClass();
        boolean boolean60 = constableBloomFilter49.contains((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        constableBloomFilter63.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean69 = constableBloomFilter63.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass70 = constableBloomFilter63.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass70);
        boolean boolean72 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass70);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter75.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter75.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter75.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass82 = constableBloomFilter75.getClass();
        boolean boolean83 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass82);
        boolean boolean84 = constableBloomFilter27.contains((java.lang.constant.Constable) boolean83);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable88 = null;
        constableBloomFilter87.insert(constable88);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter87.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass90);
        boolean boolean92 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass90);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter20.getClass();
        boolean boolean94 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass93);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter17.getClass();
        boolean boolean96 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass95);
        java.lang.Class<?> wildcardClass97 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) (byte) 100, (int) (byte) 0);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        constableBloomFilter5.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable13 = null;
        boolean boolean14 = constableBloomFilter12.contains(constable13);
        constableBloomFilter12.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) 'a');
        boolean boolean20 = constableBloomFilter12.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter12.getClass();
        boolean boolean22 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        boolean boolean34 = constableBloomFilter30.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter30.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter25.getClass();
        boolean boolean38 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean45 = constableBloomFilter41.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter48.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass57 = wildcardClassOfFieldBloomFilter56.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass57);
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter62.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass63);
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable69 = null;
        boolean boolean70 = constableBloomFilter68.contains(constable69);
        constableBloomFilter68.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter68.getClass();
        boolean boolean74 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable78 = null;
        boolean boolean79 = constableBloomFilter77.contains(constable78);
        constableBloomFilter77.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean83 = constableBloomFilter77.contains((java.lang.constant.Constable) 'a');
        boolean boolean85 = constableBloomFilter77.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass86 = constableBloomFilter77.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass86);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter90 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, 0);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter90.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass91);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass91);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter5.getClass();
        boolean boolean95 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass94);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean15 = constableBloomFilter13.contains((java.lang.constant.Constable) 0L);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 100);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter24.getClass();
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass33 = charSequenceBloomFilter32.getClass();
        boolean boolean34 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass33);
        boolean boolean35 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter38.getClass();
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean45 = constableBloomFilter43.contains((java.lang.constant.Constable) ' ');
        boolean boolean47 = constableBloomFilter43.contains((java.lang.constant.Constable) (short) 1);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter43.contains(constable48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter52.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter52.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable57 = null;
        constableBloomFilter52.insert(constable57);
        boolean boolean60 = constableBloomFilter52.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = constableBloomFilterBloomFilter63.getClass();
        boolean boolean65 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean70 = constableBloomFilter68.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter73.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean77 = constableBloomFilter73.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter73.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean81 = constableBloomFilter73.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass85 = constantDescBloomFilter84.getClass();
        constableBloomFilter73.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean87 = constableBloomFilter68.contains((java.lang.constant.Constable) wildcardClass85);
        boolean boolean88 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass85);
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass85);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        constableBloomFilter11.insert((java.lang.constant.Constable) (short) -1);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter11.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) ' ');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter40.getClass();
        boolean boolean42 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter48.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter48.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter48.insert((java.lang.constant.Constable) (-1L));
        boolean boolean56 = constableBloomFilter48.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter48.getClass();
        boolean boolean58 = constableBloomFilter45.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter61.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean65 = constableBloomFilter61.contains((java.lang.constant.Constable) 100L);
        boolean boolean67 = constableBloomFilter61.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean69 = constableBloomFilter61.contains((java.lang.constant.Constable) "");
        java.lang.Class<?> wildcardClass70 = constableBloomFilter61.getClass();
        boolean boolean71 = constableBloomFilter45.contains((java.lang.constant.Constable) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter45.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter9.insert((java.lang.constant.Constable) 10);
        boolean boolean13 = constableBloomFilter9.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass25 = wildcardClassOfFieldBloomFilter24.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass25);
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass25);
        boolean boolean28 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter31.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean37 = constableBloomFilter31.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean39 = constableBloomFilter31.contains((java.lang.constant.Constable) 0L);
        boolean boolean41 = constableBloomFilter31.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter31.getClass();
        boolean boolean43 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass42);
        boolean boolean44 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter47.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter47.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter47.insert((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter47.getClass();
        boolean boolean55 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (short) 100, (int) (short) 1);
        java.lang.Class<?> wildcardClass59 = typeBloomFilter58.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass59);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(0, 100);
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '4');
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (byte) 100);
        java.lang.Class<?> wildcardClass8 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter16.getClass();
        boolean boolean30 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass35 = wildcardClassOfFieldBloomFilter34.getClass();
        boolean boolean36 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass40 = typeDescriptorBloomFilter39.getClass();
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter44.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        boolean boolean58 = constableBloomFilter54.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter54.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean65 = constableBloomFilter63.contains((java.lang.constant.Constable) 0L);
        boolean boolean67 = constableBloomFilter63.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean69 = constableBloomFilter63.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass73 = typeDescriptorBloomFilter72.getClass();
        boolean boolean74 = constableBloomFilter63.contains((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable78 = null;
        boolean boolean79 = constableBloomFilter77.contains(constable78);
        constableBloomFilter77.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean83 = constableBloomFilter77.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter77.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter77.insert((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass88 = constableBloomFilter77.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass88);
        boolean boolean90 = constableBloomFilter49.contains((java.lang.constant.Constable) wildcardClass88);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter49.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1));
        java.lang.constant.Constable constable13 = null;
        boolean boolean14 = constableBloomFilter2.contains(constable13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter17.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter17.insert((java.lang.constant.Constable) (-1L));
        boolean boolean25 = constableBloomFilter17.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter17.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter17.getClass();
        boolean boolean29 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass28);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter2.contains(constable30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass47 = constableBloomFilterBloomFilter46.getClass();
        boolean boolean48 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter53.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable58 = null;
        constableBloomFilter53.insert(constable58);
        boolean boolean61 = constableBloomFilter53.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = constableBloomFilterBloomFilter64.getClass();
        boolean boolean66 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter53.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass69);
        java.lang.constant.Constable constable71 = null;
        constableBloomFilter2.insert(constable71);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 10, (int) (byte) 100);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        constableBloomFilter23.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean29 = constableBloomFilter23.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass30 = constableBloomFilter23.getClass();
        boolean boolean31 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass41);
        boolean boolean43 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass41);
        boolean boolean44 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean43);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter49.getClass();
        boolean boolean55 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass54);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter15.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean48 = constableBloomFilter24.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass52 = wildcardClassOfFieldBloomFilter51.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter57.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter57.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter57.insert((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter57.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter71.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean75 = constableBloomFilter71.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter78.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass87 = wildcardClassOfFieldBloomFilter86.getClass();
        constableBloomFilter83.insert((java.lang.constant.Constable) wildcardClass87);
        constableBloomFilter78.insert((java.lang.constant.Constable) wildcardClass87);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter92.getClass();
        constableBloomFilter78.insert((java.lang.constant.Constable) wildcardClass93);
        constableBloomFilter71.insert((java.lang.constant.Constable) wildcardClass93);
        boolean boolean96 = constableBloomFilter68.contains((java.lang.constant.Constable) wildcardClass93);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean96);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass14 = wildcardClassOfFieldBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter18.getClass();
        boolean boolean20 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter26.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter26.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean32 = constableBloomFilter26.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean34 = constableBloomFilter26.contains((java.lang.constant.Constable) 0L);
        boolean boolean36 = constableBloomFilter26.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter39.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter39.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        constableBloomFilter52.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter59.contains(constable60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter59.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass62);
        java.lang.Class<?> wildcardClass66 = constableBloomFilter26.getClass();
        boolean boolean67 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass66);
        boolean boolean68 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass66);
        java.lang.constant.Constable constable69 = null;
        constableBloomFilter2.insert(constable69);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass11 = wildcardClassOfFieldBloomFilter10.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass11);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass25 = wildcardClassOfFieldBloomFilter24.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter21.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter34.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter44.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter44.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter57.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter57.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable71 = null;
        boolean boolean72 = constableBloomFilter70.contains(constable71);
        constableBloomFilter70.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable78 = null;
        boolean boolean79 = constableBloomFilter77.contains(constable78);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter77.getClass();
        constableBloomFilter70.insert((java.lang.constant.Constable) wildcardClass80);
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass80);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter57.getClass();
        boolean boolean84 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass83);
        boolean boolean85 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean84);
        java.lang.constant.Constable constable86 = null;
        boolean boolean87 = constableBloomFilter2.contains(constable86);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) 'a', (int) (byte) 10);
        java.lang.Class<?> wildcardClass3 = genericDeclarationBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) ' ', (int) ' ');
        java.lang.Class<?> wildcardClass6 = serializableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter10.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean18 = constableBloomFilter10.contains((java.lang.constant.Constable) 0L);
        boolean boolean20 = constableBloomFilter10.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter26.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass35 = wildcardClassOfFieldBloomFilter34.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter40.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass41);
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass41);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter23.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter10.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) '4');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter30.getClass();
        boolean boolean32 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean32);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter5.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = constableBloomFilterBloomFilter32.getClass();
        boolean boolean34 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        boolean boolean38 = constableBloomFilter5.contains((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass39 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass39);
        java.lang.constant.Constable constable41 = null;
        constableBloomFilter2.insert(constable41);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (short) 1);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        constableBloomFilter2.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass10 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        constableBloomFilter5.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable13 = null;
        boolean boolean14 = constableBloomFilter12.contains(constable13);
        constableBloomFilter12.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) 'a');
        boolean boolean20 = constableBloomFilter12.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter12.getClass();
        boolean boolean22 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean27 = constableBloomFilter25.contains((java.lang.constant.Constable) 0L);
        boolean boolean29 = constableBloomFilter25.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter34.insert((java.lang.constant.Constable) 10);
        constableBloomFilter34.insert((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter34.getClass();
        boolean boolean40 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass39);
        boolean boolean42 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        boolean boolean53 = constableBloomFilter45.contains((java.lang.constant.Constable) 100.0f);
        constableBloomFilter45.insert((java.lang.constant.Constable) (short) 1);
        boolean boolean57 = constableBloomFilter45.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass58 = constableBloomFilter45.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass58);
        java.lang.constant.Constable constable60 = null;
        constableBloomFilter2.insert(constable60);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter7.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass22 = constableBloomFilter15.getClass();
        boolean boolean23 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        constableBloomFilter26.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean32 = constableBloomFilter26.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass33 = constableBloomFilter26.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter12.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter12.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter42.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter42.getClass();
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass53 = wildcardClassOfFieldBloomFilter52.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter49.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass58);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter2.contains(constable60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean13 = constableBloomFilter11.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass20 = charSequenceBloomFilter19.getClass();
        boolean boolean21 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass20);
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) boolean21);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter11.getClass();
        boolean boolean24 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        boolean boolean39 = constableBloomFilter35.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter35.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter30.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        constableBloomFilter46.insert(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean55 = constableBloomFilter53.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass56 = constableBloomFilter53.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter60.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean64 = constableBloomFilter60.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter60.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean68 = constableBloomFilter60.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter60.getClass();
        boolean boolean70 = constableBloomFilter46.contains((java.lang.constant.Constable) wildcardClass69);
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass69);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass69);
        java.lang.constant.Constable constable73 = null;
        boolean boolean74 = constableBloomFilter2.contains(constable73);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, 1);
        java.lang.Class<?> wildcardClass3 = constantDescBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass6 = serializableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter10.insert((java.lang.constant.Constable) 10);
        boolean boolean14 = constableBloomFilter10.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter17.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable22 = null;
        constableBloomFilter17.insert(constable22);
        boolean boolean25 = constableBloomFilter17.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass32 = wildcardClassOfFieldBloomFilter31.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean38 = constableBloomFilter28.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter41.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable54 = null;
        boolean boolean55 = constableBloomFilter53.contains(constable54);
        constableBloomFilter53.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean59 = constableBloomFilter53.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass60 = constableBloomFilter53.getClass();
        boolean boolean61 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable65 = null;
        boolean boolean66 = constableBloomFilter64.contains(constable65);
        constableBloomFilter64.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean70 = constableBloomFilter64.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass71 = constableBloomFilter64.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass71);
        boolean boolean74 = constableBloomFilter50.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass78 = wildcardClassOfFieldBloomFilter77.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass78);
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass78);
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass78);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass88 = constableBloomFilter87.getClass();
        constableBloomFilter84.insert((java.lang.constant.Constable) wildcardClass88);
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass88);
        boolean boolean91 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass88);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter10.getClass();
        boolean boolean93 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) "");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 100);
        java.lang.constant.Constable constable17 = null;
        constableBloomFilter16.insert(constable17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter21.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean25 = constableBloomFilter21.contains((java.lang.constant.Constable) 100L);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean29 = constableBloomFilter21.contains((java.lang.constant.Constable) "");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter32.insert((java.lang.constant.Constable) 10);
        boolean boolean36 = constableBloomFilter32.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter39.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass48 = wildcardClassOfFieldBloomFilter47.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass48);
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean51 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass48);
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass48);
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean54 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass48);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass48);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = constableBloomFilterBloomFilter29.getClass();
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean38 = constableBloomFilter36.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass51 = constableBloomFilter44.getClass();
        boolean boolean52 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass62);
        boolean boolean64 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter71.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean75 = constableBloomFilter71.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter78.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass87 = wildcardClassOfFieldBloomFilter86.getClass();
        constableBloomFilter83.insert((java.lang.constant.Constable) wildcardClass87);
        constableBloomFilter78.insert((java.lang.constant.Constable) wildcardClass87);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter92.getClass();
        constableBloomFilter78.insert((java.lang.constant.Constable) wildcardClass93);
        constableBloomFilter71.insert((java.lang.constant.Constable) wildcardClass93);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter71.getClass();
        constableBloomFilter68.insert((java.lang.constant.Constable) wildcardClass96);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter68.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass98);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) (byte) 100, (int) (short) 1);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter18.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter32.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass35);
        boolean boolean38 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) (-1.0d));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) (byte) 100);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter43.getClass();
        boolean boolean45 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) '4', (int) (byte) 100);
        java.lang.Class<?> wildcardClass49 = strComparableBloomFilter48.getClass();
        boolean boolean50 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (short) 10, (int) (short) 0);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter40.contains(constable41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        boolean boolean49 = constableBloomFilter45.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter45.getClass();
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter40.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter37.getClass();
        boolean boolean55 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable59 = null;
        constableBloomFilter58.insert(constable59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter63.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass69 = genericDeclarationBloomFilter68.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass69);
        boolean boolean71 = constableBloomFilter58.contains((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) 'a');
        constableBloomFilter74.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (short) 1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = constantDescBloomFilter79.getClass();
        boolean boolean81 = constableBloomFilter74.contains((java.lang.constant.Constable) wildcardClass80);
        boolean boolean82 = constableBloomFilter58.contains((java.lang.constant.Constable) wildcardClass80);
        boolean boolean83 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean82);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) '#', 10);
        java.lang.Class<?> wildcardClass3 = objBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        constableBloomFilter23.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean29 = constableBloomFilter23.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass30 = constableBloomFilter23.getClass();
        boolean boolean31 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass41);
        boolean boolean43 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass41);
        boolean boolean44 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter47.contains(constable48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        boolean boolean56 = constableBloomFilter52.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter52.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass57);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass66 = wildcardClassOfFieldBloomFilter65.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass69);
        boolean boolean72 = constableBloomFilter62.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable76 = null;
        boolean boolean77 = constableBloomFilter75.contains(constable76);
        constableBloomFilter75.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter75.getClass();
        boolean boolean81 = constableBloomFilter62.contains((java.lang.constant.Constable) wildcardClass80);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass80);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter85 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter85.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean89 = constableBloomFilter85.contains((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>(10, 0);
        java.lang.Class<?> wildcardClass93 = wildcardClassBloomFilter92.getClass();
        boolean boolean94 = constableBloomFilter85.contains((java.lang.constant.Constable) wildcardClass93);
        boolean boolean95 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass93);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass6 = serializableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        boolean boolean14 = constableBloomFilter10.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter20.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter20.insert((java.lang.constant.Constable) (-1L));
        boolean boolean28 = constableBloomFilter20.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass29);
        boolean boolean32 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass29);
        java.lang.Class<?> wildcardClass33 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass17 = constantDescBloomFilter16.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter21.insert((java.lang.constant.Constable) 10);
        constableBloomFilter21.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        boolean boolean36 = constableBloomFilter28.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter28.getClass();
        boolean boolean38 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass37);
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 10);
        constableBloomFilter43.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (short) 10, 0);
        java.lang.Class<?> wildcardClass49 = typeDescriptorBloomFilter48.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(10, (int) (byte) 100);
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 100, (int) (byte) 1);
        java.lang.Class<?> wildcardClass3 = constableBloomFilterBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) '4', (int) (short) 100);
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) 'a');
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) 'a');
        java.lang.Class<?> wildcardClass11 = constableBloomFilter10.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass11);
        java.lang.constant.Constable constable13 = null;
        constableBloomFilter2.insert(constable13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 100);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter17.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (short) 10, (int) (short) 1);
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter10.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter18.getClass();
        boolean boolean26 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass36 = constableBloomFilter29.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean39 = constableBloomFilter15.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter15.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter44.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1.0d));
        java.lang.Class<?> wildcardClass54 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (short) 1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) (byte) 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter12.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter5.contains(constable17);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter23.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter23.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean29 = constableBloomFilter23.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean31 = constableBloomFilter23.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter34.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean38 = constableBloomFilter34.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass50 = wildcardClassOfFieldBloomFilter49.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass50);
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter55.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass56);
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable62 = null;
        boolean boolean63 = constableBloomFilter61.contains(constable62);
        constableBloomFilter61.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass66 = constableBloomFilter61.getClass();
        boolean boolean67 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass66);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter34.getClass();
        boolean boolean69 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter75.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter75.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable80 = null;
        constableBloomFilter75.insert(constable80);
        boolean boolean83 = constableBloomFilter75.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass87 = wildcardClassOfFieldBloomFilter86.getClass();
        boolean boolean88 = constableBloomFilter75.contains((java.lang.constant.Constable) wildcardClass87);
        constableBloomFilter72.insert((java.lang.constant.Constable) wildcardClass87);
        boolean boolean90 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass87);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter93 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) ' ');
        java.lang.Class<?> wildcardClass94 = constableBloomFilter93.getClass();
        boolean boolean95 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass94);
        boolean boolean96 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter18.getClass();
        boolean boolean20 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter15.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean35 = constableBloomFilter33.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        boolean boolean49 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        constableBloomFilter52.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean58 = constableBloomFilter52.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass59 = constableBloomFilter52.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass59);
        boolean boolean61 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass59);
        constableBloomFilter25.insert((java.lang.constant.Constable) boolean61);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter25.getClass();
        boolean boolean64 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter31.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean39 = constableBloomFilter31.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass43 = constantDescBloomFilter42.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter31.contains((java.lang.constant.Constable) 10.0d);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter31.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 100);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter51.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 100);
        java.lang.constant.Constable constable57 = null;
        constableBloomFilter56.insert(constable57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter61.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean65 = constableBloomFilter61.contains((java.lang.constant.Constable) 100L);
        boolean boolean67 = constableBloomFilter61.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean69 = constableBloomFilter61.contains((java.lang.constant.Constable) "");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter72.insert((java.lang.constant.Constable) 10);
        boolean boolean76 = constableBloomFilter72.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter79.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass88 = wildcardClassOfFieldBloomFilter87.getClass();
        constableBloomFilter84.insert((java.lang.constant.Constable) wildcardClass88);
        constableBloomFilter79.insert((java.lang.constant.Constable) wildcardClass88);
        boolean boolean91 = constableBloomFilter72.contains((java.lang.constant.Constable) wildcardClass88);
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass88);
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass88);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass88);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter97 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) ' ', (int) (short) 10);
        java.lang.Class<?> wildcardClass98 = typeBloomFilter97.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass98);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = constableBloomFilterBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) (-1.0f));
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0d);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter5.contains((java.lang.constant.Constable) 1L);
        boolean boolean31 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean55 = constableBloomFilter49.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass56 = constableBloomFilter49.getClass();
        boolean boolean57 = constableBloomFilter46.contains((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable61 = null;
        boolean boolean62 = constableBloomFilter60.contains(constable61);
        constableBloomFilter60.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean66 = constableBloomFilter60.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass67 = constableBloomFilter60.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass67);
        boolean boolean69 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter72.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter72.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter72.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass79 = constableBloomFilter72.getClass();
        boolean boolean80 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass79);
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass79);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter34.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass82);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 1);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter87.getClass();
        boolean boolean89 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter18.getClass();
        boolean boolean24 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass23);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter29.insert((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter29.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter12.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter5.contains(constable17);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter23.getClass();
        boolean boolean25 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter28.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter36.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter36.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter36.insert((java.lang.constant.Constable) (-1L));
        boolean boolean44 = constableBloomFilter36.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter47.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter47.insert((java.lang.constant.Constable) ' ');
        boolean boolean53 = constableBloomFilter47.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass60 = wildcardClassOfFieldBloomFilter59.getClass();
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass63);
        boolean boolean66 = constableBloomFilter56.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable70 = null;
        boolean boolean71 = constableBloomFilter69.contains(constable70);
        constableBloomFilter69.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter69.getClass();
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass74);
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass74);
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass74);
        boolean boolean78 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) (byte) 10);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter81.getClass();
        boolean boolean83 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass82);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) '#');
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter16.insert((java.lang.constant.Constable) 10);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) true);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass44 = constableBloomFilter37.getClass();
        boolean boolean45 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass55 = constableBloomFilter48.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass55);
        boolean boolean57 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass55);
        boolean boolean58 = constableBloomFilter16.contains((java.lang.constant.Constable) boolean57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean63 = constableBloomFilter61.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter61.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean70 = constableBloomFilter68.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        constableBloomFilter73.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter73.getClass();
        boolean boolean79 = constableBloomFilter68.contains((java.lang.constant.Constable) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter68.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass80);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter16.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass82);
        boolean boolean86 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass82);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(0, (int) (short) 100);
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass17 = constableBloomFilter10.getClass();
        boolean boolean18 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        boolean boolean33 = constableBloomFilter7.contains((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter36.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter36.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean42 = constableBloomFilter36.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean44 = constableBloomFilter36.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter36.getClass();
        boolean boolean46 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass45);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter57.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass60);
        boolean boolean62 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable69 = null;
        boolean boolean70 = constableBloomFilter68.contains(constable69);
        constableBloomFilter68.insert((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass76 = constantDescBloomFilter75.getClass();
        boolean boolean77 = constableBloomFilter68.contains((java.lang.constant.Constable) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter68.getClass();
        boolean boolean79 = constableBloomFilter65.contains((java.lang.constant.Constable) wildcardClass78);
        boolean boolean80 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean79);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>(100, (int) (byte) 0);
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 1, (int) 'a');
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass24 = constableBloomFilter17.getClass();
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = constableBloomFilter14.getClass();
        boolean boolean27 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter11.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        constableBloomFilter32.insert(constable33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass50 = wildcardClassOfFieldBloomFilter49.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean56 = constableBloomFilter46.contains((java.lang.constant.Constable) '#');
        constableBloomFilter46.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass59 = constableBloomFilter46.getClass();
        boolean boolean60 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass59);
        boolean boolean61 = constableBloomFilter32.contains((java.lang.constant.Constable) boolean60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass65 = wildcardClassOfFieldBloomFilter64.getClass();
        boolean boolean66 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass70 = typeDescriptorBloomFilter69.getClass();
        boolean boolean71 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass70);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass70);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter75.getClass();
        boolean boolean77 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter11.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable16 = null;
        constableBloomFilter11.insert(constable16);
        boolean boolean19 = constableBloomFilter11.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = constableBloomFilterBloomFilter22.getClass();
        boolean boolean24 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean29 = constableBloomFilter27.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter32.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean36 = constableBloomFilter32.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter32.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean40 = constableBloomFilter32.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass44 = constantDescBloomFilter43.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass44);
        boolean boolean47 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass44);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable52 = null;
        constableBloomFilter51.insert(constable52);
        constableBloomFilter51.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean60 = constableBloomFilter58.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter58.getClass();
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass70 = constableBloomFilter69.getClass();
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass70);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        java.lang.Class<?> wildcardClass75 = constableBloomFilter74.getClass();
        boolean boolean76 = constableBloomFilter66.contains((java.lang.constant.Constable) wildcardClass75);
        java.lang.Class<?> wildcardClass77 = constableBloomFilter66.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean11 = constableBloomFilter9.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter19.getClass();
        boolean boolean21 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass20);
        boolean boolean22 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean27 = constableBloomFilter25.contains((java.lang.constant.Constable) 0L);
        boolean boolean29 = constableBloomFilter25.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) '4');
        boolean boolean33 = constableBloomFilter25.contains((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter36.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter36.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter36.insert((java.lang.constant.Constable) (-1L));
        boolean boolean44 = constableBloomFilter36.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter36.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter36.getClass();
        boolean boolean48 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass47);
        boolean boolean50 = constableBloomFilter25.contains((java.lang.constant.Constable) 0.0f);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter25.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean57 = constableBloomFilter55.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable61 = null;
        boolean boolean62 = constableBloomFilter60.contains(constable61);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter60.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass63);
        java.lang.constant.Constable constable65 = null;
        constableBloomFilter55.insert(constable65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable70 = null;
        boolean boolean71 = constableBloomFilter69.contains(constable70);
        constableBloomFilter69.insert((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass77 = constantDescBloomFilter76.getClass();
        boolean boolean78 = constableBloomFilter69.contains((java.lang.constant.Constable) wildcardClass77);
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass77);
        boolean boolean80 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) ' ');
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 1);
        java.lang.constant.Constable constable10 = null;
        boolean boolean11 = constableBloomFilter5.contains(constable10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter14.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter14.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable19 = null;
        constableBloomFilter14.insert(constable19);
        boolean boolean22 = constableBloomFilter14.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = constableBloomFilterBloomFilter25.getClass();
        boolean boolean27 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean32 = constableBloomFilter30.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter35.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean39 = constableBloomFilter35.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter35.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean43 = constableBloomFilter35.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass47 = constantDescBloomFilter46.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass47);
        boolean boolean49 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass47);
        boolean boolean50 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean56 = constableBloomFilter54.contains((java.lang.constant.Constable) 0L);
        boolean boolean58 = constableBloomFilter54.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter61.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean65 = constableBloomFilter61.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter61.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean69 = constableBloomFilter61.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass70 = constableBloomFilter61.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass70);
        boolean boolean72 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass70);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable17 = null;
        constableBloomFilter16.insert(constable17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter21.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass27 = genericDeclarationBloomFilter26.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass27);
        boolean boolean29 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass27);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter16.getClass();
        boolean boolean31 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        boolean boolean36 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean42 = constableBloomFilter40.contains((java.lang.constant.Constable) ' ');
        boolean boolean44 = constableBloomFilter40.contains((java.lang.constant.Constable) (short) 1);
        boolean boolean46 = constableBloomFilter40.contains((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass47 = constableBloomFilter40.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 1, 100);
        java.lang.Class<?> wildcardClass9 = typeDescriptorBloomFilter8.getClass();
        boolean boolean10 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter13.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter13.insert((java.lang.constant.Constable) (-1L));
        boolean boolean21 = constableBloomFilter13.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean26 = constableBloomFilter24.contains((java.lang.constant.Constable) 0L);
        boolean boolean28 = constableBloomFilter24.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter37.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter37.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean45 = constableBloomFilter37.contains((java.lang.constant.Constable) 0L);
        boolean boolean47 = constableBloomFilter37.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        boolean boolean58 = constableBloomFilter50.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter50.getClass();
        boolean boolean60 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass64 = wildcardClassOfFieldBloomFilter63.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass75 = wildcardClassOfFieldBloomFilter74.getClass();
        constableBloomFilter71.insert((java.lang.constant.Constable) wildcardClass75);
        boolean boolean77 = constableBloomFilter68.contains((java.lang.constant.Constable) wildcardClass75);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter68.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass78);
        boolean boolean80 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((-1), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) -1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) '4', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (short) 10, (int) (short) 100);
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable28 = null;
        constableBloomFilter27.insert(constable28);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter27.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter37.getClass();
        boolean boolean39 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass38);
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 100);
        java.lang.constant.Constable constable44 = null;
        constableBloomFilter43.insert(constable44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        constableBloomFilter54.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter54.getClass();
        boolean boolean62 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter65.contains(constable66);
        constableBloomFilter65.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean71 = constableBloomFilter65.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass72 = constableBloomFilter65.getClass();
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass72);
        boolean boolean75 = constableBloomFilter51.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable79 = null;
        boolean boolean80 = constableBloomFilter78.contains(constable79);
        constableBloomFilter78.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter78.getClass();
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass83);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '4');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter11.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass22 = genericDeclarationBloomFilter21.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter26.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean30 = constableBloomFilter26.contains((java.lang.constant.Constable) 100L);
        boolean boolean32 = constableBloomFilter26.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        boolean boolean46 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean55 = constableBloomFilter49.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass56 = constableBloomFilter49.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean58 = constableBloomFilter26.contains((java.lang.constant.Constable) wildcardClass56);
        boolean boolean59 = constableBloomFilter16.contains((java.lang.constant.Constable) boolean58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter62.getClass();
        boolean boolean64 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass71 = wildcardClassOfFieldBloomFilter70.getClass();
        boolean boolean72 = constableBloomFilter67.contains((java.lang.constant.Constable) wildcardClass71);
        boolean boolean73 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass71);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>(10, 0);
        java.lang.Class<?> wildcardClass77 = wildcardClassBloomFilter76.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass77);
        boolean boolean79 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass17 = constantDescBloomFilter16.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter21.insert((java.lang.constant.Constable) 10);
        constableBloomFilter21.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        boolean boolean36 = constableBloomFilter28.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter28.getClass();
        boolean boolean38 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass37);
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass37);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass17 = wildcardClassOfFieldBloomFilter16.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass20);
        boolean boolean23 = constableBloomFilter13.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        constableBloomFilter26.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter26.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        boolean boolean46 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean55 = constableBloomFilter49.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass56 = constableBloomFilter49.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean59 = constableBloomFilter35.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass63 = wildcardClassOfFieldBloomFilter62.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass63);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass63);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass73 = constableBloomFilter72.getClass();
        constableBloomFilter69.insert((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass85 = wildcardClassOfFieldBloomFilter84.getClass();
        constableBloomFilter81.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean87 = constableBloomFilter78.contains((java.lang.constant.Constable) wildcardClass85);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter78.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass88);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter95 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass96 = constantDescBloomFilter95.getClass();
        constableBloomFilter92.insert((java.lang.constant.Constable) wildcardClass96);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter92.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass98);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>(0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean18 = constableBloomFilter16.contains((java.lang.constant.Constable) 0L);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass31 = wildcardClassOfFieldBloomFilter30.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) -1);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter27.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass43 = constantDescBloomFilter42.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass43);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable57 = null;
        boolean boolean58 = constableBloomFilter56.contains(constable57);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter56.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        constableBloomFilter63.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable71 = null;
        boolean boolean72 = constableBloomFilter70.contains(constable71);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter70.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass73);
        boolean boolean75 = constableBloomFilter49.contains((java.lang.constant.Constable) wildcardClass73);
        boolean boolean76 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean75);
        java.lang.Class<?> wildcardClass77 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>(10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter17.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable22 = null;
        constableBloomFilter17.insert(constable22);
        boolean boolean25 = constableBloomFilter17.contains((java.lang.constant.Constable) 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass31 = wildcardClassOfFieldBloomFilter30.getClass();
        boolean boolean32 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass40 = wildcardClassOfFieldBloomFilter39.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter36.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter49.getClass();
        boolean boolean55 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass54);
        boolean boolean56 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean55);
        java.lang.constant.Constable constable57 = null;
        constableBloomFilter2.insert(constable57);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass23 = wildcardClassOfFieldBloomFilter22.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter19.contains((java.lang.constant.Constable) '#');
        constableBloomFilter19.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter19.getClass();
        boolean boolean33 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean33);
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 0, (int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = serializableBloomFilter39.getClass();
        boolean boolean41 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) ' ', 100);
        java.lang.Class<?> wildcardClass45 = charSequenceBloomFilter44.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter50.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter50.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter50.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter61.insert((java.lang.constant.Constable) 10);
        boolean boolean65 = constableBloomFilter61.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter61.contains(constable66);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter61.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter75.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter75.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter75.insert((java.lang.constant.Constable) (-1L));
        boolean boolean83 = constableBloomFilter75.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter75.getClass();
        constableBloomFilter72.insert((java.lang.constant.Constable) wildcardClass84);
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass84);
        java.lang.constant.Constable constable87 = null;
        constableBloomFilter50.insert(constable87);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter50.getClass();
        boolean boolean90 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (short) -1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 100);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean18 = constableBloomFilter16.contains((java.lang.constant.Constable) 0L);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass31 = wildcardClassOfFieldBloomFilter30.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) -1);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter27.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass43 = constantDescBloomFilter42.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass43);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) '4', (int) '#');
        java.lang.Class<?> wildcardClass50 = genericDeclarationBloomFilter49.getClass();
        boolean boolean51 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 100);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) (short) 100, (int) ' ');
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(0, (int) '#');
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter9.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter14.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean18 = constableBloomFilter14.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter14.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean22 = constableBloomFilter14.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        boolean boolean36 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter39.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass46);
        boolean boolean48 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass46);
        boolean boolean49 = constableBloomFilter9.contains((java.lang.constant.Constable) boolean48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter55.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter55.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter68.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter68.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter68.insert((java.lang.constant.Constable) (-1L));
        boolean boolean76 = constableBloomFilter68.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter68.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter68.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass79);
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass79);
        boolean boolean82 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass79);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean82);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (short) 1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = constantDescBloomFilter7.getClass();
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 0);
        java.lang.Class<?> wildcardClass13 = constableBloomFilter12.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter12.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter5.contains(constable17);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter23.getClass();
        boolean boolean25 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        boolean boolean33 = constableBloomFilter31.contains(constable32);
        constableBloomFilter31.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean37 = constableBloomFilter31.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass38 = constableBloomFilter31.getClass();
        boolean boolean39 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean48 = constableBloomFilter42.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass49 = constableBloomFilter42.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass49);
        boolean boolean52 = constableBloomFilter28.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = constableBloomFilterBloomFilter55.getClass();
        boolean boolean57 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass56);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter61.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter61.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter61.insert((java.lang.constant.Constable) (-1L));
        boolean boolean69 = constableBloomFilter61.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean74 = constableBloomFilter72.contains((java.lang.constant.Constable) 0L);
        boolean boolean76 = constableBloomFilter72.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter79.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean83 = constableBloomFilter79.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter79.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean87 = constableBloomFilter79.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter79.getClass();
        constableBloomFilter72.insert((java.lang.constant.Constable) wildcardClass88);
        boolean boolean90 = constableBloomFilter61.contains((java.lang.constant.Constable) wildcardClass88);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter93 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass94 = charSequenceBloomFilter93.getClass();
        boolean boolean95 = constableBloomFilter61.contains((java.lang.constant.Constable) wildcardClass94);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter61.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass96);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter10.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter10.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter23.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter23.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter23.insert((java.lang.constant.Constable) (-1L));
        boolean boolean31 = constableBloomFilter23.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter23.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter23.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass51 = constableBloomFilterBloomFilter50.getClass();
        boolean boolean52 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass51);
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter56.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass57);
        boolean boolean59 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass57);
        boolean boolean61 = constableBloomFilter10.contains((java.lang.constant.Constable) 10L);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter10.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (short) 10, (int) ' ');
        java.lang.Class<?> wildcardClass67 = strComparableBloomFilter66.getClass();
        boolean boolean68 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter22.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter36.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass39);
        boolean boolean42 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter45.getClass();
        boolean boolean49 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (short) 100);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter55.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter52.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass58);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter12.insert((java.lang.constant.Constable) 10);
        constableBloomFilter12.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        boolean boolean27 = constableBloomFilter19.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter19.getClass();
        boolean boolean29 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean34 = constableBloomFilter32.contains((java.lang.constant.Constable) 0L);
        boolean boolean36 = constableBloomFilter32.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter41.insert((java.lang.constant.Constable) 10);
        constableBloomFilter41.insert((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter41.getClass();
        boolean boolean47 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass46);
        boolean boolean48 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean53 = constableBloomFilter51.contains((java.lang.constant.Constable) 0L);
        boolean boolean55 = constableBloomFilter51.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean57 = constableBloomFilter51.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass61 = typeDescriptorBloomFilter60.getClass();
        boolean boolean62 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 100);
        java.lang.Class<?> wildcardClass66 = constableBloomFilterBloomFilter65.getClass();
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass66);
        boolean boolean68 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass66);
        boolean boolean69 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean68);
        java.lang.constant.Constable constable70 = null;
        boolean boolean71 = constableBloomFilter2.contains(constable70);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter15.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        boolean boolean23 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, 0);
        java.lang.Class<?> wildcardClass27 = constantDescBloomFilter26.getClass();
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        constableBloomFilter31.insert(constable32);
        constableBloomFilter31.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean40 = constableBloomFilter38.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter38.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter31.getClass();
        boolean boolean44 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter47.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean51 = constableBloomFilter47.contains((java.lang.constant.Constable) 100L);
        boolean boolean53 = constableBloomFilter47.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean55 = constableBloomFilter47.contains((java.lang.constant.Constable) "");
        java.lang.Class<?> wildcardClass56 = constableBloomFilter47.getClass();
        boolean boolean57 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) ' ', (int) '#');
        java.lang.Class<?> wildcardClass61 = constantDescBloomFilter60.getClass();
        boolean boolean62 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter18.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter32.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass35);
        boolean boolean38 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(1, (int) ' ');
        java.lang.Class<?> wildcardClass49 = serializableBloomFilter48.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean55 = constableBloomFilter53.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter58.getClass();
        boolean boolean64 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean73 = constableBloomFilter67.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass80 = constableBloomFilterBloomFilter79.getClass();
        boolean boolean81 = constableBloomFilter76.contains((java.lang.constant.Constable) wildcardClass80);
        constableBloomFilter67.insert((java.lang.constant.Constable) wildcardClass80);
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass80);
        boolean boolean84 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass80);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter41.getClass();
        boolean boolean86 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass85);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) (short) 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass90 = annotatedElementBloomFilter89.getClass();
        boolean boolean91 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter16.getClass();
        boolean boolean30 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean30);
        boolean boolean33 = constableBloomFilter2.contains((java.lang.constant.Constable) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean43 = constableBloomFilter41.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter46.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass49);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter38.getClass();
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) ' ');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter56.getClass();
        boolean boolean58 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 1, 10);
        java.lang.Class<?> wildcardClass62 = typeDescriptorBloomFilter61.getClass();
        boolean boolean63 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter66.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter66.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean72 = constableBloomFilter66.contains((java.lang.constant.Constable) (short) 100);
        constableBloomFilter66.insert((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter77.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter77.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean83 = constableBloomFilter77.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean85 = constableBloomFilter77.contains((java.lang.constant.Constable) 0L);
        boolean boolean87 = constableBloomFilter77.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter77.getClass();
        boolean boolean89 = constableBloomFilter66.contains((java.lang.constant.Constable) wildcardClass88);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter66.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) '#', 0);
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(100, (int) ' ');
        java.lang.Class<?> wildcardClass3 = constantDescBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>(0, (int) '#');
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (byte) 100, 0);
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass21);
        boolean boolean24 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass21);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass32 = wildcardClassOfFieldBloomFilter31.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass40 = constantDescBloomFilter39.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter36.getClass();
        boolean boolean43 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter28.getClass();
        boolean boolean45 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter18.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter32.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass35);
        boolean boolean38 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass50 = wildcardClassOfFieldBloomFilter49.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass50);
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass50);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean58 = constableBloomFilter56.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter56.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (short) 1);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable69 = null;
        boolean boolean70 = constableBloomFilter68.contains(constable69);
        constableBloomFilter68.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean74 = constableBloomFilter68.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass75 = constableBloomFilter68.getClass();
        boolean boolean76 = constableBloomFilter63.contains((java.lang.constant.Constable) wildcardClass75);
        boolean boolean77 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean76);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean85 = constableBloomFilter83.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter88 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable89 = null;
        boolean boolean90 = constableBloomFilter88.contains(constable89);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter88.getClass();
        constableBloomFilter83.insert((java.lang.constant.Constable) wildcardClass91);
        constableBloomFilter80.insert((java.lang.constant.Constable) wildcardClass91);
        boolean boolean94 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass91);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(10, 1);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable10 = null;
        constableBloomFilter5.insert(constable10);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter21.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter21.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable26 = null;
        constableBloomFilter21.insert(constable26);
        boolean boolean29 = constableBloomFilter21.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = constableBloomFilterBloomFilter32.getClass();
        boolean boolean34 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass33);
        boolean boolean35 = constableBloomFilter18.contains((java.lang.constant.Constable) boolean34);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter18.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean38 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        constableBloomFilter44.insert(constable45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean55 = constableBloomFilter49.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass62 = wildcardClassOfFieldBloomFilter61.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass65);
        boolean boolean68 = constableBloomFilter58.contains((java.lang.constant.Constable) '#');
        constableBloomFilter58.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass71 = constableBloomFilter58.getClass();
        boolean boolean72 = constableBloomFilter49.contains((java.lang.constant.Constable) wildcardClass71);
        boolean boolean73 = constableBloomFilter44.contains((java.lang.constant.Constable) boolean72);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass77 = wildcardClassOfFieldBloomFilter76.getClass();
        boolean boolean78 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass77);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass82 = typeBloomFilter81.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass82);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass90 = constableBloomFilterBloomFilter89.getClass();
        boolean boolean91 = constableBloomFilter86.contains((java.lang.constant.Constable) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter86.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter44.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass94);
        boolean boolean96 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass94);
        java.lang.Class<?> wildcardClass97 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter27.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean35 = constableBloomFilter27.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter38.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean42 = constableBloomFilter38.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter45.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass54 = wildcardClassOfFieldBloomFilter53.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass54);
        constableBloomFilter45.insert((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter59.getClass();
        constableBloomFilter45.insert((java.lang.constant.Constable) wildcardClass60);
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter65.contains(constable66);
        constableBloomFilter65.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass70 = constableBloomFilter65.getClass();
        boolean boolean71 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter38.getClass();
        boolean boolean73 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass72);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(100, 10);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass35);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter2.contains(constable39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        constableBloomFilter43.insert(constable44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass61 = wildcardClassOfFieldBloomFilter60.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass64);
        boolean boolean67 = constableBloomFilter57.contains((java.lang.constant.Constable) '#');
        constableBloomFilter57.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass70 = constableBloomFilter57.getClass();
        boolean boolean71 = constableBloomFilter48.contains((java.lang.constant.Constable) wildcardClass70);
        boolean boolean72 = constableBloomFilter43.contains((java.lang.constant.Constable) boolean71);
        boolean boolean74 = constableBloomFilter43.contains((java.lang.constant.Constable) 100);
        constableBloomFilter43.insert((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass77 = constableBloomFilter43.getClass();
        boolean boolean78 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass77);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable9 = null;
        constableBloomFilter8.insert(constable9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass14 = constableBloomFilter13.getClass();
        boolean boolean15 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass14);
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass14);
        boolean boolean17 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass17 = constableBloomFilter10.getClass();
        boolean boolean18 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass35 = wildcardClassOfFieldBloomFilter34.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass50 = constableBloomFilter43.getClass();
        boolean boolean51 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter40.getClass();
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(1, (int) '4');
        java.lang.Class<?> wildcardClass57 = constableBloomFilterBloomFilter56.getClass();
        boolean boolean58 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter64.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass73 = wildcardClassOfFieldBloomFilter72.getClass();
        constableBloomFilter69.insert((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter78.getClass();
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass79);
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass79);
        boolean boolean82 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter14.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        java.lang.Class<?> wildcardClass20 = constableBloomFilter19.getClass();
        boolean boolean21 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass20);
        boolean boolean22 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter25.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean29 = constableBloomFilter25.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter25.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean33 = constableBloomFilter25.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter39.getClass();
        boolean boolean47 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass57);
        boolean boolean59 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass57);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter25.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean66 = constableBloomFilter64.contains((java.lang.constant.Constable) 0L);
        boolean boolean68 = constableBloomFilter64.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter64.insert((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 10, 0);
        java.lang.Class<?> wildcardClass74 = typeBloomFilter73.getClass();
        boolean boolean75 = constableBloomFilter64.contains((java.lang.constant.Constable) wildcardClass74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>((int) (byte) 1, (int) (short) 100);
        java.lang.Class<?> wildcardClass79 = wildcardClassBloomFilter78.getClass();
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass79);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter64.getClass();
        boolean boolean82 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) (short) -1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 0);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>(0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass6 = strBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>((int) '4', 1);
        java.lang.Class<?> wildcardClass11 = wildcardClassBloomFilter10.getClass();
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) '#', (int) ' ');
        java.lang.Class<?> wildcardClass3 = strBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) ' ');
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        java.lang.Class<?> wildcardClass5 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter8.insert((java.lang.constant.Constable) 10);
        boolean boolean12 = constableBloomFilter8.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass16 = wildcardClassOfFieldBloomFilter15.getClass();
        boolean boolean17 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter20.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter20.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter29.insert((java.lang.constant.Constable) 10);
        boolean boolean33 = constableBloomFilter29.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter29.contains(constable34);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter29.getClass();
        boolean boolean37 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter8.insert((java.lang.constant.Constable) boolean37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter44.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter44.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter44.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter44.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter55.insert((java.lang.constant.Constable) 10);
        boolean boolean59 = constableBloomFilter55.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter55.contains(constable60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter69.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter69.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter69.insert((java.lang.constant.Constable) (-1L));
        boolean boolean77 = constableBloomFilter69.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter69.getClass();
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass78);
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass78);
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass78);
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass78);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass78);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass78);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass19 = wildcardClassOfFieldBloomFilter18.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass19);
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter24.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass25);
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass25);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean33 = constableBloomFilter31.contains((java.lang.constant.Constable) 0L);
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter41.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter41.insert((java.lang.constant.Constable) (-1L));
        boolean boolean49 = constableBloomFilter41.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter41.getClass();
        boolean boolean51 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean62 = constableBloomFilter60.contains((java.lang.constant.Constable) ' ');
        boolean boolean64 = constableBloomFilter60.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter60.getClass();
        boolean boolean66 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable70 = null;
        boolean boolean71 = constableBloomFilter69.contains(constable70);
        constableBloomFilter69.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean75 = constableBloomFilter69.contains((java.lang.constant.Constable) 'a');
        boolean boolean77 = constableBloomFilter69.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter69.getClass();
        boolean boolean79 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass78);
        boolean boolean80 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass78);
        constableBloomFilter38.insert((java.lang.constant.Constable) boolean80);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean86 = constableBloomFilter84.contains((java.lang.constant.Constable) 0L);
        boolean boolean88 = constableBloomFilter84.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter84.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter84.getClass();
        boolean boolean92 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass91);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter38.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass93);
        boolean boolean95 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass93);
        java.lang.constant.Constable constable96 = null;
        constableBloomFilter2.insert(constable96);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass12 = wildcardClassOfFieldBloomFilter11.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass15);
        boolean boolean18 = constableBloomFilter8.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass26 = constableBloomFilter21.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        constableBloomFilter30.insert(constable31);
        java.lang.Class<?> wildcardClass33 = constableBloomFilter30.getClass();
        boolean boolean34 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter8.getClass();
        boolean boolean36 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter39.insert((java.lang.constant.Constable) 10);
        boolean boolean43 = constableBloomFilter39.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter46.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass55 = wildcardClassOfFieldBloomFilter54.getClass();
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass55);
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass55);
        boolean boolean58 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass55);
        constableBloomFilter39.insert((java.lang.constant.Constable) (short) -1);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter39.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass61);
        boolean boolean63 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) (short) 0, (int) 'a');
        java.lang.Class<?> wildcardClass3 = genericDeclarationBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean20 = constableBloomFilter18.contains((java.lang.constant.Constable) 0L);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter18.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass33 = typeDescriptorBloomFilter32.getClass();
        boolean boolean34 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass41 = constableBloomFilterBloomFilter40.getClass();
        boolean boolean42 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass41);
        boolean boolean43 = constableBloomFilter29.contains((java.lang.constant.Constable) boolean42);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter29.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter5.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = constableBloomFilterBloomFilter32.getClass();
        boolean boolean34 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter39.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean54 = constableBloomFilter50.contains((java.lang.constant.Constable) 100L);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable63 = null;
        boolean boolean64 = constableBloomFilter62.contains(constable63);
        constableBloomFilter62.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean68 = constableBloomFilter62.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass69 = constableBloomFilter62.getClass();
        boolean boolean70 = constableBloomFilter59.contains((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        constableBloomFilter73.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean79 = constableBloomFilter73.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass80 = constableBloomFilter73.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass80);
        boolean boolean82 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass80);
        boolean boolean83 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass80);
        boolean boolean84 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean83);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter5.getClass();
        boolean boolean86 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass85);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter11.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter11.insert((java.lang.constant.Constable) (-1L));
        boolean boolean19 = constableBloomFilter11.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter11.getClass();
        boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter27.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable32 = null;
        constableBloomFilter27.insert(constable32);
        boolean boolean35 = constableBloomFilter27.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass39 = wildcardClassOfFieldBloomFilter38.getClass();
        boolean boolean40 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass39);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter24.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter46.insert((java.lang.constant.Constable) 10);
        boolean boolean50 = constableBloomFilter46.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter46.contains(constable51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter55.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter55.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter55.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter55.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter55.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter71.getClass();
        boolean boolean73 = constableBloomFilter68.contains((java.lang.constant.Constable) wildcardClass72);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter68.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass74);
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass74);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) '4', (int) (short) 1);
        java.lang.Class<?> wildcardClass3 = objBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        constableBloomFilter5.insert((java.lang.constant.Constable) 100.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass14 = wildcardClassOfFieldBloomFilter13.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass17);
        boolean boolean20 = constableBloomFilter10.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        constableBloomFilter23.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean29 = constableBloomFilter23.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        boolean boolean43 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean55 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter58.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter58.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter58.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass65 = constableBloomFilter58.getClass();
        boolean boolean66 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass65);
        boolean boolean67 = constableBloomFilter10.contains((java.lang.constant.Constable) boolean66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable71 = null;
        constableBloomFilter70.insert(constable71);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter70.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(10, (int) (short) 0);
        java.lang.Class<?> wildcardClass79 = typeDescriptorBloomFilter78.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass79);
        // The following exception was thrown during execution in test generation
        try {
            constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (short) 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable10 = null;
        boolean boolean11 = constableBloomFilter9.contains(constable10);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean21 = constableBloomFilter19.contains((java.lang.constant.Constable) ' ');
        boolean boolean23 = constableBloomFilter19.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter19.getClass();
        boolean boolean25 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter29.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter29.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean37 = constableBloomFilter29.contains((java.lang.constant.Constable) 0L);
        boolean boolean39 = constableBloomFilter29.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean48 = constableBloomFilter42.contains((java.lang.constant.Constable) 'a');
        boolean boolean50 = constableBloomFilter42.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter42.getClass();
        boolean boolean52 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass51);
        constableBloomFilter29.insert((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) 'a', (int) (short) 0);
        java.lang.Class<?> wildcardClass58 = charSequenceBloomFilter57.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass58);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) '4');
        java.lang.Class<?> wildcardClass64 = constableBloomFilter63.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass64);
        java.lang.Class<?> wildcardClass66 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter5.contains((java.lang.constant.Constable) 1L);
        boolean boolean31 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter34.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter34.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean42 = constableBloomFilter34.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter34.getClass();
        boolean boolean44 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) (byte) 1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass3 = genericDeclarationBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter15.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        boolean boolean23 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, 0);
        java.lang.Class<?> wildcardClass27 = constantDescBloomFilter26.getClass();
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        constableBloomFilter31.insert(constable32);
        constableBloomFilter31.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean40 = constableBloomFilter38.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter38.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter31.getClass();
        boolean boolean44 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 1, 100);
        java.lang.Class<?> wildcardClass48 = typeDescriptorBloomFilter47.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, 1);
        constableBloomFilter52.insert((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter57.getClass();
        boolean boolean59 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '#');
        java.lang.Class<?> wildcardClass63 = constableBloomFilter62.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable71 = null;
        boolean boolean72 = constableBloomFilter70.contains(constable71);
        constableBloomFilter70.insert((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass78 = constantDescBloomFilter77.getClass();
        boolean boolean79 = constableBloomFilter70.contains((java.lang.constant.Constable) wildcardClass78);
        constableBloomFilter67.insert((java.lang.constant.Constable) wildcardClass78);
        boolean boolean81 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass78);
        boolean boolean82 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass78);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(10, (int) 'a');
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>((int) '#', 100);
        java.lang.Class<?> wildcardClass16 = wildcardClassBloomFilter15.getClass();
        boolean boolean17 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass16);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter2.contains(constable18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass14 = wildcardClassOfFieldBloomFilter13.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        java.lang.constant.Constable constable16 = null;
        constableBloomFilter2.insert(constable16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean22 = constableBloomFilter20.contains((java.lang.constant.Constable) 0L);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean31 = constableBloomFilter27.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter27.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean35 = constableBloomFilter27.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter27.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter43.getClass();
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass44);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter20.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable52 = null;
        boolean boolean53 = constableBloomFilter51.contains(constable52);
        boolean boolean55 = constableBloomFilter51.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable62 = null;
        boolean boolean63 = constableBloomFilter61.contains(constable62);
        constableBloomFilter61.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable69 = null;
        boolean boolean70 = constableBloomFilter68.contains(constable69);
        java.lang.Class<?> wildcardClass71 = constableBloomFilter68.getClass();
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass71);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable76 = null;
        boolean boolean77 = constableBloomFilter75.contains(constable76);
        constableBloomFilter75.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable83 = null;
        boolean boolean84 = constableBloomFilter82.contains(constable83);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter82.getClass();
        constableBloomFilter75.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean87 = constableBloomFilter61.contains((java.lang.constant.Constable) wildcardClass85);
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass85);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter91 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter91.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass92);
        boolean boolean94 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter51.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter9.insert((java.lang.constant.Constable) 10);
        boolean boolean13 = constableBloomFilter9.contains((java.lang.constant.Constable) true);
        boolean boolean15 = constableBloomFilter9.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean50 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass48);
        boolean boolean51 = constableBloomFilter9.contains((java.lang.constant.Constable) boolean50);
        constableBloomFilter9.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable57 = null;
        boolean boolean58 = constableBloomFilter56.contains(constable57);
        constableBloomFilter56.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter56.getClass();
        boolean boolean62 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass61);
        boolean boolean63 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(1, (int) ' ');
        java.lang.Class<?> wildcardClass67 = serializableBloomFilter66.getClass();
        boolean boolean68 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass12 = typeDescriptorBloomFilter11.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        constableBloomFilter22.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean28 = constableBloomFilter22.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter22.getClass();
        boolean boolean30 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter19.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean37 = constableBloomFilter35.contains((java.lang.constant.Constable) 0L);
        boolean boolean39 = constableBloomFilter35.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean45 = constableBloomFilter19.contains((java.lang.constant.Constable) (-1.0f));
        java.lang.Class<?> wildcardClass46 = constableBloomFilter19.getClass();
        boolean boolean47 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) (short) 1);
        java.lang.Class<?> wildcardClass51 = constableBloomFilterBloomFilter50.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass51);
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass51);
        java.lang.constant.Constable constable54 = null;
        constableBloomFilter2.insert(constable54);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = constableBloomFilterBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter12.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass18 = genericDeclarationBloomFilter17.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter12.getClass();
        boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        boolean boolean36 = constableBloomFilter32.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter32.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter27.getClass();
        boolean boolean40 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean40);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass17 = constableBloomFilter10.getClass();
        boolean boolean18 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.constant.Constable constable24 = null;
        constableBloomFilter23.insert(constable24);
        constableBloomFilter23.insert((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter30.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter30.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter30.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter30.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter30.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter46.getClass();
        boolean boolean48 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter43.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) (short) 0);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>(10, (int) ' ');
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = constableBloomFilter8.getClass();
        boolean boolean10 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass9);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter24.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        boolean boolean33 = constableBloomFilter31.contains(constable32);
        constableBloomFilter31.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter38.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass41);
        boolean boolean43 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass41);
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass41);
        boolean boolean45 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        constableBloomFilter54.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter54.getClass();
        boolean boolean62 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter65.contains(constable66);
        constableBloomFilter65.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean71 = constableBloomFilter65.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass72 = constableBloomFilter65.getClass();
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass72);
        boolean boolean75 = constableBloomFilter51.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable79 = null;
        boolean boolean80 = constableBloomFilter78.contains(constable79);
        constableBloomFilter78.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter78.getClass();
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass83);
        java.lang.Class<?> wildcardClass86 = constableBloomFilter48.getClass();
        boolean boolean87 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (short) 10, (int) 'a');
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) ' ');
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter5.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 1);
        java.lang.constant.Constable constable15 = null;
        constableBloomFilter14.insert(constable15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter14.getClass();
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass17);
        java.lang.constant.Constable constable19 = null;
        constableBloomFilter2.insert(constable19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter23.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean27 = constableBloomFilter23.contains((java.lang.constant.Constable) 100L);
        boolean boolean29 = constableBloomFilter23.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        boolean boolean43 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean55 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter58.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter58.insert((java.lang.constant.Constable) ' ');
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        constableBloomFilter73.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean79 = constableBloomFilter73.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass80 = constableBloomFilter73.getClass();
        boolean boolean81 = constableBloomFilter70.contains((java.lang.constant.Constable) wildcardClass80);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter70.getClass();
        boolean boolean83 = constableBloomFilter67.contains((java.lang.constant.Constable) wildcardClass82);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter67.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass84);
        java.lang.Class<?> wildcardClass86 = constableBloomFilter58.getClass();
        boolean boolean87 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass86);
        boolean boolean88 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean87);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass11 = wildcardClassOfFieldBloomFilter10.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass11);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass25 = wildcardClassOfFieldBloomFilter24.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter21.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter34.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean46 = constableBloomFilter44.contains((java.lang.constant.Constable) 0L);
        boolean boolean48 = constableBloomFilter44.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter53.insert((java.lang.constant.Constable) 10);
        constableBloomFilter53.insert((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter53.getClass();
        boolean boolean59 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass58);
        boolean boolean60 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass64 = constableBloomFilterBloomFilter63.getClass();
        boolean boolean65 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass64);
        java.lang.Class<?> wildcardClass66 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (short) 1, 100);
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter18.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter32.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass35);
        boolean boolean38 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass50 = wildcardClassOfFieldBloomFilter49.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass50);
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass50);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass50);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass17 = wildcardClassOfFieldBloomFilter16.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass20);
        boolean boolean23 = constableBloomFilter13.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        constableBloomFilter26.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter26.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        boolean boolean46 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean55 = constableBloomFilter49.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass56 = constableBloomFilter49.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean59 = constableBloomFilter35.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass63 = wildcardClassOfFieldBloomFilter62.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass63);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass63);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass73 = constableBloomFilter72.getClass();
        constableBloomFilter69.insert((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass85 = wildcardClassOfFieldBloomFilter84.getClass();
        constableBloomFilter81.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean87 = constableBloomFilter78.contains((java.lang.constant.Constable) wildcardClass85);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter78.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass88);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 10);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter7.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter7.insert((java.lang.constant.Constable) ' ');
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        constableBloomFilter22.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean28 = constableBloomFilter22.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter22.getClass();
        boolean boolean30 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass29);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter19.getClass();
        boolean boolean32 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = constableBloomFilter16.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        constableBloomFilter37.insert(constable38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean48 = constableBloomFilter42.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass55 = wildcardClassOfFieldBloomFilter54.getClass();
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass58);
        boolean boolean61 = constableBloomFilter51.contains((java.lang.constant.Constable) '#');
        constableBloomFilter51.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass64 = constableBloomFilter51.getClass();
        boolean boolean65 = constableBloomFilter42.contains((java.lang.constant.Constable) wildcardClass64);
        boolean boolean66 = constableBloomFilter37.contains((java.lang.constant.Constable) boolean65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass70 = wildcardClassOfFieldBloomFilter69.getClass();
        boolean boolean71 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass70);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass75 = typeDescriptorBloomFilter74.getClass();
        boolean boolean76 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass75);
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass75);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter80.getClass();
        boolean boolean82 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass81);
        boolean boolean83 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass81);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter86.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean90 = constableBloomFilter86.contains((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter93 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(0, 0);
        java.lang.Class<?> wildcardClass94 = serializableBloomFilter93.getClass();
        boolean boolean95 = constableBloomFilter86.contains((java.lang.constant.Constable) wildcardClass94);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean34 = constableBloomFilter32.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter32.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean45 = constableBloomFilter43.contains((java.lang.constant.Constable) 0L);
        boolean boolean47 = constableBloomFilter43.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean54 = constableBloomFilter50.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter50.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean58 = constableBloomFilter50.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter50.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter63.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean67 = constableBloomFilter63.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter63.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean71 = constableBloomFilter63.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter63.getClass();
        boolean boolean73 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass72);
        boolean boolean74 = constableBloomFilter40.contains((java.lang.constant.Constable) boolean73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter80.getClass();
        boolean boolean82 = constableBloomFilter77.contains((java.lang.constant.Constable) wildcardClass81);
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass81);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass81);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass12 = wildcardClassOfFieldBloomFilter11.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass15);
        boolean boolean18 = constableBloomFilter8.contains((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass19 = constableBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass19);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass19);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass24 = constableBloomFilter17.getClass();
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter40.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter40.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter40.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass47 = constableBloomFilter40.getClass();
        boolean boolean48 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        boolean boolean63 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        boolean boolean68 = constableBloomFilter66.contains(constable67);
        constableBloomFilter66.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean72 = constableBloomFilter66.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass73 = constableBloomFilter66.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass73);
        boolean boolean76 = constableBloomFilter52.contains((java.lang.constant.Constable) 1L);
        boolean boolean78 = constableBloomFilter52.contains((java.lang.constant.Constable) (byte) 1);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter52.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = constableBloomFilterBloomFilter13.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean20 = constableBloomFilter18.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter23.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean27 = constableBloomFilter23.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter23.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean31 = constableBloomFilter23.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass35 = constantDescBloomFilter34.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass35);
        boolean boolean38 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter44.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 1);
        java.lang.constant.Constable constable7 = null;
        boolean boolean8 = constableBloomFilter2.contains(constable7);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter14.insert((java.lang.constant.Constable) 10);
        constableBloomFilter14.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean23 = constableBloomFilter21.contains((java.lang.constant.Constable) 0L);
        boolean boolean25 = constableBloomFilter21.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter28.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean32 = constableBloomFilter28.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter28.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean36 = constableBloomFilter28.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter28.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass37);
        boolean boolean40 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter44.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean48 = constableBloomFilter44.contains((java.lang.constant.Constable) 100L);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable57 = null;
        boolean boolean58 = constableBloomFilter56.contains(constable57);
        constableBloomFilter56.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean62 = constableBloomFilter56.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass63 = constableBloomFilter56.getClass();
        boolean boolean64 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean73 = constableBloomFilter67.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass74 = constableBloomFilter67.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass74);
        boolean boolean76 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable83 = null;
        boolean boolean84 = constableBloomFilter82.contains(constable83);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable88 = null;
        boolean boolean89 = constableBloomFilter87.contains(constable88);
        boolean boolean91 = constableBloomFilter87.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter87.getClass();
        constableBloomFilter82.insert((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter82.getClass();
        constableBloomFilter79.insert((java.lang.constant.Constable) wildcardClass94);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter79.getClass();
        boolean boolean97 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass96);
        boolean boolean98 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean97);
        java.lang.Class<?> wildcardClass99 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass12 = wildcardClassOfFieldBloomFilter11.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean14 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass24);
        boolean boolean27 = constableBloomFilter17.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter17.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter33.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter33.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter33.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.constant.Constable constable43 = null;
        constableBloomFilter42.insert(constable43);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter42.getClass();
        boolean boolean46 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass45);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter50.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter55.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter55.insert((java.lang.constant.Constable) (-1));
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter55.contains(constable66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter70.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter70.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter70.insert((java.lang.constant.Constable) (-1L));
        boolean boolean78 = constableBloomFilter70.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter70.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter70.getClass();
        boolean boolean82 = constableBloomFilter55.contains((java.lang.constant.Constable) wildcardClass81);
        boolean boolean83 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean82);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        java.lang.constant.Constable constable12 = null;
        constableBloomFilter2.insert(constable12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass24 = constantDescBloomFilter23.getClass();
        boolean boolean25 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass24);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter2.contains(constable27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass35 = wildcardClassOfFieldBloomFilter34.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass38);
        boolean boolean41 = constableBloomFilter31.contains((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter31.getClass();
        boolean boolean43 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter46.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable52 = null;
        constableBloomFilter51.insert(constable52);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter51.getClass();
        boolean boolean55 = constableBloomFilter46.contains((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter58.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter58.getClass();
        boolean boolean66 = constableBloomFilter46.contains((java.lang.constant.Constable) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter46.getClass();
        boolean boolean68 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(10, 100);
        java.lang.Class<?> wildcardClass3 = constableBloomFilterBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter5.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) 100L);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean50 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean57 = constableBloomFilter53.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter53.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean61 = constableBloomFilter53.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass65 = constantDescBloomFilter64.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter70.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean74 = constableBloomFilter70.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter70.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean78 = constableBloomFilter70.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter70.getClass();
        boolean boolean80 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass79);
        constableBloomFilter5.insert((java.lang.constant.Constable) boolean80);
        java.lang.constant.Constable constable82 = null;
        constableBloomFilter5.insert(constable82);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass93 = wildcardClassOfFieldBloomFilter92.getClass();
        boolean boolean94 = constableBloomFilter89.contains((java.lang.constant.Constable) wildcardClass93);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter89.getClass();
        constableBloomFilter86.insert((java.lang.constant.Constable) wildcardClass95);
        boolean boolean97 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass95);
        boolean boolean98 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter9.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass15 = genericDeclarationBloomFilter14.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass15);
        boolean boolean17 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean22 = constableBloomFilter20.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass29 = constableBloomFilterBloomFilter28.getClass();
        boolean boolean30 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter34.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean48 = constableBloomFilter42.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass49 = constableBloomFilter42.getClass();
        boolean boolean50 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable54 = null;
        boolean boolean55 = constableBloomFilter53.contains(constable54);
        constableBloomFilter53.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean59 = constableBloomFilter53.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass60 = constableBloomFilter53.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass60);
        boolean boolean63 = constableBloomFilter39.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter39.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass64);
        boolean boolean66 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter69.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter69.insert((java.lang.constant.Constable) 1.0f);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter69.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>(1, (int) '4');
        java.lang.Class<?> wildcardClass79 = strBloomFilter78.getClass();
        boolean boolean80 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass79);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter23.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter29.insert((java.lang.constant.Constable) 10);
        boolean boolean33 = constableBloomFilter29.contains((java.lang.constant.Constable) true);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        boolean boolean58 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable62 = null;
        boolean boolean63 = constableBloomFilter61.contains(constable62);
        constableBloomFilter61.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean67 = constableBloomFilter61.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass68 = constableBloomFilter61.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean70 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass68);
        boolean boolean71 = constableBloomFilter29.contains((java.lang.constant.Constable) boolean70);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean76 = constableBloomFilter74.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass77 = constableBloomFilter74.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass77);
        boolean boolean79 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass77);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass83 = serializableBloomFilter82.getClass();
        boolean boolean84 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass83);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, 0);
        java.lang.Class<?> wildcardClass88 = charSequenceBloomFilter87.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass88);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((-1), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) 'a', (int) (short) 100);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>(1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass10 = wildcardClassOfFieldBloomFilter9.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter14.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter14.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter14.insert((java.lang.constant.Constable) (-1L));
        boolean boolean22 = constableBloomFilter14.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean27 = constableBloomFilter25.contains((java.lang.constant.Constable) 0L);
        boolean boolean29 = constableBloomFilter25.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter25.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass40 = wildcardClassOfFieldBloomFilter39.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter36.insert((java.lang.constant.Constable) (byte) -1);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter36.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass44);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        boolean boolean10 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter15.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter20.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean28 = constableBloomFilter20.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        boolean boolean42 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean54 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass52);
        boolean boolean55 = constableBloomFilter15.contains((java.lang.constant.Constable) boolean54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean63 = constableBloomFilter61.contains((java.lang.constant.Constable) ' ');
        boolean boolean65 = constableBloomFilter61.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass66 = constableBloomFilter61.getClass();
        boolean boolean67 = constableBloomFilter58.contains((java.lang.constant.Constable) wildcardClass66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable71 = null;
        boolean boolean72 = constableBloomFilter70.contains(constable71);
        constableBloomFilter70.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean76 = constableBloomFilter70.contains((java.lang.constant.Constable) 'a');
        boolean boolean78 = constableBloomFilter70.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter70.getClass();
        boolean boolean80 = constableBloomFilter58.contains((java.lang.constant.Constable) wildcardClass79);
        boolean boolean81 = constableBloomFilter15.contains((java.lang.constant.Constable) boolean80);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter15.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass82);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) (short) 1, 0);
        java.lang.Class<?> wildcardClass87 = strBloomFilter86.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass6 = serializableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', (int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = constableBloomFilter10.getClass();
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter18.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter25.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter25.getClass();
        boolean boolean29 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass28);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter18.contains(constable30);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter18.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean38 = constableBloomFilter36.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter41.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass55 = wildcardClassOfFieldBloomFilter54.getClass();
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass55);
        boolean boolean57 = constableBloomFilter48.contains((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass64 = wildcardClassOfFieldBloomFilter63.getClass();
        constableBloomFilter60.insert((java.lang.constant.Constable) wildcardClass64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        constableBloomFilter60.insert((java.lang.constant.Constable) wildcardClass67);
        boolean boolean70 = constableBloomFilter60.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass71 = constableBloomFilter60.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass71);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter48.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass73);
        boolean boolean75 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean75);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) '#');
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter2.contains(constable15);
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) false);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter21.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter21.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable26 = null;
        constableBloomFilter21.insert(constable26);
        boolean boolean29 = constableBloomFilter21.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass33 = wildcardClassOfFieldBloomFilter32.getClass();
        boolean boolean34 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter37.getClass();
        boolean boolean39 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass38);
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 1, 100);
        java.lang.Class<?> wildcardClass47 = typeDescriptorBloomFilter46.getClass();
        boolean boolean48 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter43.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (short) -1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter23.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter29.getClass();
        boolean boolean35 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter38.getClass();
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (byte) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter26.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass27);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter32.getClass();
        boolean boolean38 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter41.getClass();
        boolean boolean43 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass42);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean43);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (short) 100, (int) '4');
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        constableBloomFilter16.insert(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean25 = constableBloomFilter23.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter23.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter30.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean34 = constableBloomFilter30.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter30.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean38 = constableBloomFilter30.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter30.getClass();
        boolean boolean40 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter44.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean48 = constableBloomFilter44.contains((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass52 = constantDescBloomFilter51.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass52);
        java.lang.Class<?> wildcardClass55 = constableBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter16.getClass();
        boolean boolean30 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean30);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 0, (int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = serializableBloomFilter36.getClass();
        boolean boolean38 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) ' ', 100);
        java.lang.Class<?> wildcardClass42 = charSequenceBloomFilter41.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter49.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter49.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean55 = constableBloomFilter49.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean57 = constableBloomFilter49.contains((java.lang.constant.Constable) 0L);
        boolean boolean59 = constableBloomFilter49.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable63 = null;
        boolean boolean64 = constableBloomFilter62.contains(constable63);
        constableBloomFilter62.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean68 = constableBloomFilter62.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter62.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter62.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable76 = null;
        boolean boolean77 = constableBloomFilter75.contains(constable76);
        constableBloomFilter75.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable83 = null;
        boolean boolean84 = constableBloomFilter82.contains(constable83);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter82.getClass();
        constableBloomFilter75.insert((java.lang.constant.Constable) wildcardClass85);
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass85);
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass85);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter49.getClass();
        boolean boolean90 = constableBloomFilter46.contains((java.lang.constant.Constable) wildcardClass89);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter46.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter8.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter8.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter8.insert((java.lang.constant.Constable) (-1L));
        boolean boolean16 = constableBloomFilter8.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean23 = constableBloomFilter21.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter21.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass24);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        constableBloomFilter32.insert(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean41 = constableBloomFilter39.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter39.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter46.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean50 = constableBloomFilter46.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter46.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean54 = constableBloomFilter46.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass55 = constableBloomFilter46.getClass();
        boolean boolean56 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass55);
        boolean boolean57 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass55);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter29.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean64 = constableBloomFilter62.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter67.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter67.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter67.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass74 = constableBloomFilter67.getClass();
        boolean boolean75 = constableBloomFilter62.contains((java.lang.constant.Constable) wildcardClass74);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean75);
        java.lang.Class<?> wildcardClass77 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 1, 0);
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass30);
        java.lang.constant.Constable constable32 = null;
        constableBloomFilter2.insert(constable32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter39.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter39.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter39.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter39.insert((java.lang.constant.Constable) 'a');
        boolean boolean49 = constableBloomFilter39.contains((java.lang.constant.Constable) 10.0f);
        boolean boolean51 = constableBloomFilter39.contains((java.lang.constant.Constable) 100.0d);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter39.getClass();
        boolean boolean53 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        constableBloomFilter57.insert(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass68 = wildcardClassOfFieldBloomFilter67.getClass();
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass71);
        boolean boolean74 = constableBloomFilter64.contains((java.lang.constant.Constable) '#');
        constableBloomFilter64.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass77 = constableBloomFilter64.getClass();
        boolean boolean78 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass77);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter57.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass79);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) 'a', (int) '4');
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) '#', (int) (byte) 100);
        java.lang.Class<?> wildcardClass3 = constableBloomFilterBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable13 = null;
        boolean boolean14 = constableBloomFilter12.contains(constable13);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter12.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean48 = constableBloomFilter24.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass52 = wildcardClassOfFieldBloomFilter51.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass52);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter5.contains(constable56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) '4');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter60.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 10);
        java.lang.Class<?> wildcardClass66 = constableBloomFilter65.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass66);
        boolean boolean68 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        constableBloomFilter11.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean29 = constableBloomFilter27.contains((java.lang.constant.Constable) 0L);
        boolean boolean31 = constableBloomFilter27.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass34);
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(1, (int) '4');
        java.lang.Class<?> wildcardClass40 = constableBloomFilterBloomFilter39.getClass();
        boolean boolean41 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter44.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter44.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) (short) 100);
        constableBloomFilter44.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter44.getClass();
        boolean boolean54 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass53);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) '#');
        java.lang.constant.Constable constable59 = null;
        constableBloomFilter58.insert(constable59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter66.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter66.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable71 = null;
        constableBloomFilter66.insert(constable71);
        boolean boolean74 = constableBloomFilter66.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass78 = wildcardClassOfFieldBloomFilter77.getClass();
        boolean boolean79 = constableBloomFilter66.contains((java.lang.constant.Constable) wildcardClass78);
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass78);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter63.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass81);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass81);
        boolean boolean84 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass81);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, (int) (byte) 100);
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = constableBloomFilterBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) (-1.0f));
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass18 = constableBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        boolean boolean20 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter26.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter26.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter26.insert((java.lang.constant.Constable) (-1L));
        boolean boolean34 = constableBloomFilter26.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean39 = constableBloomFilter37.contains((java.lang.constant.Constable) 0L);
        boolean boolean41 = constableBloomFilter37.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter37.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter37.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass52 = wildcardClassOfFieldBloomFilter51.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter48.insert((java.lang.constant.Constable) (byte) -1);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter48.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass56);
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass56);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (short) 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter14.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean18 = constableBloomFilter14.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter21.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter35.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter41.getClass();
        boolean boolean47 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        boolean boolean58 = constableBloomFilter50.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter50.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass59);
        boolean boolean61 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass59);
        boolean boolean62 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass59);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) ' ', (int) 'a');
        java.lang.Class<?> wildcardClass17 = genericDeclarationBloomFilter16.getClass();
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter21.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean25 = constableBloomFilter21.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter21.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean29 = constableBloomFilter21.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        boolean boolean43 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean55 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass53);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter21.getClass();
        boolean boolean57 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass14 = constableBloomFilterBloomFilter13.getClass();
        boolean boolean15 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass14);
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter19.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean48 = constableBloomFilter24.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter24.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass49);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter13.contains(constable14);
        constableBloomFilter13.insert((java.lang.constant.Constable) 100);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter22.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter22.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable27 = null;
        constableBloomFilter22.insert(constable27);
        boolean boolean30 = constableBloomFilter22.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass37 = wildcardClassOfFieldBloomFilter36.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass40);
        boolean boolean43 = constableBloomFilter33.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter46.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass65 = constableBloomFilter58.getClass();
        boolean boolean66 = constableBloomFilter55.contains((java.lang.constant.Constable) wildcardClass65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable70 = null;
        boolean boolean71 = constableBloomFilter69.contains(constable70);
        constableBloomFilter69.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean75 = constableBloomFilter69.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass76 = constableBloomFilter69.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass76);
        boolean boolean79 = constableBloomFilter55.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass83 = wildcardClassOfFieldBloomFilter82.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass83);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter13.insert((java.lang.constant.Constable) 10);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) true);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        constableBloomFilter22.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean28 = constableBloomFilter22.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        boolean boolean42 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean54 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass52);
        boolean boolean55 = constableBloomFilter13.contains((java.lang.constant.Constable) boolean54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        boolean boolean67 = constableBloomFilter63.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter63.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean71 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass68);
        java.lang.constant.Constable constable72 = null;
        boolean boolean73 = constableBloomFilter2.contains(constable72);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter76.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter76.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter76.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter76.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter76.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter92.getClass();
        boolean boolean94 = constableBloomFilter89.contains((java.lang.constant.Constable) wildcardClass93);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter89.getClass();
        constableBloomFilter76.insert((java.lang.constant.Constable) wildcardClass95);
        java.lang.Class<?> wildcardClass97 = constableBloomFilter76.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass97);
        java.lang.Class<?> wildcardClass99 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>(0, (int) '#');
        java.lang.Class<?> wildcardClass6 = annotatedElementBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        java.lang.constant.Constable constable8 = null;
        constableBloomFilter2.insert(constable8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable21 = null;
        boolean boolean22 = constableBloomFilter20.contains(constable21);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter20.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter15.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.constant.Constable constable32 = null;
        constableBloomFilter31.insert(constable32);
        constableBloomFilter31.insert((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter38.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter38.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter38.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter38.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter38.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass55 = constableBloomFilter54.getClass();
        boolean boolean56 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter51.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass57);
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass57);
        boolean boolean60 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass57);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass21);
        boolean boolean24 = constableBloomFilter14.contains((java.lang.constant.Constable) '#');
        constableBloomFilter14.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter29.insert((java.lang.constant.Constable) 10);
        boolean boolean33 = constableBloomFilter29.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter36.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass45 = wildcardClassOfFieldBloomFilter44.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass45);
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean48 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass45);
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter52.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean56 = constableBloomFilter52.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter52.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean60 = constableBloomFilter52.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter52.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter14.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter70.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter70.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter70.insert((java.lang.constant.Constable) (-1L));
        boolean boolean78 = constableBloomFilter70.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter70.getClass();
        boolean boolean80 = constableBloomFilter67.contains((java.lang.constant.Constable) wildcardClass79);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean80);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) (short) 10, 1);
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean15 = constableBloomFilter9.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass16 = constableBloomFilter9.getClass();
        boolean boolean17 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        constableBloomFilter23.insert((java.lang.constant.Constable) 100);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter23.getClass();
        boolean boolean29 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass28);
        boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean29);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass40 = wildcardClassOfFieldBloomFilter39.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter36.contains((java.lang.constant.Constable) '#');
        constableBloomFilter36.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass49 = constableBloomFilter36.getClass();
        boolean boolean50 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass58 = wildcardClassOfFieldBloomFilter57.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass61);
        boolean boolean64 = constableBloomFilter54.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter67.getClass();
        boolean boolean73 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass72);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2369");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (short) 100);
        java.lang.Class<?> wildcardClass8 = constableBloomFilter7.getClass();
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 0);
        java.lang.Class<?> wildcardClass13 = constableBloomFilter12.getClass();
        boolean boolean14 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean21 = constableBloomFilter17.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter17.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean25 = constableBloomFilter17.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass29 = constantDescBloomFilter28.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean35 = constableBloomFilter33.contains((java.lang.constant.Constable) ' ');
        boolean boolean37 = constableBloomFilter33.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter33.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean48 = constableBloomFilter42.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass49 = constableBloomFilter42.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>(100, (int) (byte) 10);
        java.lang.Class<?> wildcardClass54 = wildcardClassBloomFilter53.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass54);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2370");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2371");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass11 = wildcardClassOfFieldBloomFilter10.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass11);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass11);
        java.lang.Class<?> wildcardClass14 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2372");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass9 = constableBloomFilterBloomFilter8.getClass();
        boolean boolean10 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter5.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass16 = constableBloomFilter15.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass16);
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) '4', (int) 'a');
        java.lang.Class<?> wildcardClass25 = constableBloomFilterBloomFilter24.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter29.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean33 = constableBloomFilter29.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter29.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean37 = constableBloomFilter29.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass41 = constantDescBloomFilter40.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter45.insert((java.lang.constant.Constable) 10);
        constableBloomFilter45.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        constableBloomFilter52.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean58 = constableBloomFilter52.contains((java.lang.constant.Constable) 'a');
        boolean boolean60 = constableBloomFilter52.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter52.getClass();
        boolean boolean62 = constableBloomFilter45.contains((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        boolean boolean68 = constableBloomFilter66.contains(constable67);
        constableBloomFilter66.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean72 = constableBloomFilter66.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass79 = constableBloomFilterBloomFilter78.getClass();
        boolean boolean80 = constableBloomFilter75.contains((java.lang.constant.Constable) wildcardClass79);
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass79);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter84.getClass();
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean87 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass85);
        boolean boolean88 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass85);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter21.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2373");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass15 = wildcardClassOfFieldBloomFilter14.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass18);
        boolean boolean21 = constableBloomFilter11.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter24.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 1, 100);
        java.lang.Class<?> wildcardClass41 = typeDescriptorBloomFilter40.getClass();
        boolean boolean42 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass41);
        boolean boolean43 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass41);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean49 = constableBloomFilter47.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter52.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter52.insert((java.lang.constant.Constable) ' ');
        boolean boolean58 = constableBloomFilter52.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass65 = wildcardClassOfFieldBloomFilter64.getClass();
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean71 = constableBloomFilter61.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable75 = null;
        boolean boolean76 = constableBloomFilter74.contains(constable75);
        constableBloomFilter74.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter74.getClass();
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass79);
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass79);
        boolean boolean82 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass79);
        boolean boolean84 = constableBloomFilter47.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass88 = constableBloomFilter87.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass88);
        java.lang.constant.Constable constable90 = null;
        constableBloomFilter47.insert(constable90);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter94 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 100);
        java.lang.constant.Constable constable95 = null;
        boolean boolean96 = constableBloomFilter94.contains(constable95);
        java.lang.Class<?> wildcardClass97 = constableBloomFilter94.getClass();
        boolean boolean98 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass97);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2374");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter5.getClass();
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass22 = constableBloomFilter21.getClass();
        boolean boolean23 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        boolean boolean33 = constableBloomFilter31.contains(constable32);
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter31.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter40.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter40.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean46 = constableBloomFilter40.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean48 = constableBloomFilter40.contains((java.lang.constant.Constable) 0L);
        boolean boolean50 = constableBloomFilter40.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable54 = null;
        boolean boolean55 = constableBloomFilter53.contains(constable54);
        constableBloomFilter53.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable61 = null;
        boolean boolean62 = constableBloomFilter60.contains(constable61);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter60.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable75 = null;
        boolean boolean76 = constableBloomFilter74.contains(constable75);
        java.lang.Class<?> wildcardClass77 = constableBloomFilter74.getClass();
        constableBloomFilter67.insert((java.lang.constant.Constable) wildcardClass77);
        boolean boolean79 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass77);
        boolean boolean80 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass77);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable84 = null;
        boolean boolean85 = constableBloomFilter83.contains(constable84);
        java.lang.Class<?> wildcardClass86 = constableBloomFilter83.getClass();
        boolean boolean87 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass86);
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass86);
        boolean boolean89 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2375");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(10, 100);
    }

    @Test
    public void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2376");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter13.contains(constable14);
        constableBloomFilter13.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass20 = constableBloomFilter13.getClass();
        boolean boolean21 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass31);
        boolean boolean34 = constableBloomFilter10.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass38 = wildcardClassOfFieldBloomFilter37.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass38);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        boolean boolean54 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = constableBloomFilter43.getClass();
        boolean boolean56 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass55);
        boolean boolean57 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass55);
        java.lang.constant.Constable constable58 = null;
        constableBloomFilter2.insert(constable58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable63 = null;
        boolean boolean64 = constableBloomFilter62.contains(constable63);
        boolean boolean66 = constableBloomFilter62.contains((java.lang.constant.Constable) (byte) 1);
        java.lang.constant.Constable constable67 = null;
        constableBloomFilter62.insert(constable67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter71.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean75 = constableBloomFilter71.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter78.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass87 = wildcardClassOfFieldBloomFilter86.getClass();
        constableBloomFilter83.insert((java.lang.constant.Constable) wildcardClass87);
        constableBloomFilter78.insert((java.lang.constant.Constable) wildcardClass87);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter92.getClass();
        constableBloomFilter78.insert((java.lang.constant.Constable) wildcardClass93);
        constableBloomFilter71.insert((java.lang.constant.Constable) wildcardClass93);
        boolean boolean96 = constableBloomFilter62.contains((java.lang.constant.Constable) wildcardClass93);
        java.lang.Class<?> wildcardClass97 = constableBloomFilter62.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2377");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) '4', (int) (byte) 1);
    }

    @Test
    public void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2378");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) 'a', (int) (short) 0);
    }

    @Test
    public void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2379");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable13 = null;
        boolean boolean14 = constableBloomFilter12.contains(constable13);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter12.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter26.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        boolean boolean38 = constableBloomFilter34.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter34.getClass();
        boolean boolean40 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass56 = wildcardClassOfFieldBloomFilter55.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass59);
        boolean boolean62 = constableBloomFilter52.contains((java.lang.constant.Constable) '#');
        constableBloomFilter52.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass65 = constableBloomFilter52.getClass();
        boolean boolean66 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter5.insert((java.lang.constant.Constable) boolean66);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass68);
        java.lang.constant.Constable constable70 = null;
        constableBloomFilter2.insert(constable70);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2380");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (byte) 0, 0);
        java.lang.Class<?> wildcardClass3 = strComparableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2381");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) '#');
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter2.contains(constable15);
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) false);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter21.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter21.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable26 = null;
        constableBloomFilter21.insert(constable26);
        boolean boolean29 = constableBloomFilter21.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass33 = wildcardClassOfFieldBloomFilter32.getClass();
        boolean boolean34 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter37.getClass();
        boolean boolean39 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass38);
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean39);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter2.contains(constable41);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2382");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean13 = constableBloomFilter9.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean17 = constableBloomFilter9.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter22.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean26 = constableBloomFilter22.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter22.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean30 = constableBloomFilter22.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter22.getClass();
        boolean boolean32 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 10);
        constableBloomFilter35.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (short) 10, 0);
        java.lang.Class<?> wildcardClass41 = typeDescriptorBloomFilter40.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass41);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter46.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2383");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass8 = constableBloomFilter7.getClass();
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter18.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter29.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean33 = constableBloomFilter29.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter36.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass45 = wildcardClassOfFieldBloomFilter44.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass45);
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter50.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass51);
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass51);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass51);
        java.lang.Class<?> wildcardClass55 = constableBloomFilter18.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass55);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass55);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2384");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 10, (int) (short) 1);
        java.lang.Class<?> wildcardClass3 = charSequenceBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2385");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) '4', 100);
        java.lang.Class<?> wildcardClass3 = strBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2386");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass9 = serializableBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = constableBloomFilter5.getClass();
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean17 = constableBloomFilter15.contains((java.lang.constant.Constable) 0L);
        boolean boolean19 = constableBloomFilter15.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter22.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter22.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean28 = constableBloomFilter22.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter22.getClass();
        boolean boolean30 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter33.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass42 = serializableBloomFilter41.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', (int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter46.getClass();
        boolean boolean48 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter57.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean64 = constableBloomFilter62.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        java.lang.Class<?> wildcardClass70 = constableBloomFilter67.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter62.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass72);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter38.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass76);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>(100, (int) ' ');
        java.lang.Class<?> wildcardClass81 = charSequenceBloomFilter80.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass81);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2387");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass18);
        boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter24.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean32 = constableBloomFilter24.contains((java.lang.constant.Constable) 0L);
        boolean boolean34 = constableBloomFilter24.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter24.getClass();
        boolean boolean36 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        constableBloomFilter39.insert(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass50 = wildcardClassOfFieldBloomFilter49.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean56 = constableBloomFilter46.contains((java.lang.constant.Constable) '#');
        constableBloomFilter46.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass59 = constableBloomFilter46.getClass();
        boolean boolean60 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass59);
        constableBloomFilter39.insert((java.lang.constant.Constable) 10.0f);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter39.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2388");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass23 = wildcardClassOfFieldBloomFilter22.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter19.contains((java.lang.constant.Constable) '#');
        constableBloomFilter19.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter19.getClass();
        boolean boolean33 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass38 = wildcardClassOfFieldBloomFilter37.getClass();
        boolean boolean39 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass43 = typeBloomFilter42.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass51 = wildcardClassOfFieldBloomFilter50.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass54);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass60 = genericDeclarationBloomFilter59.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable65 = null;
        boolean boolean66 = constableBloomFilter64.contains(constable65);
        boolean boolean68 = constableBloomFilter64.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass72 = wildcardClassOfFieldBloomFilter71.getClass();
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass72);
        boolean boolean74 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass72);
        boolean boolean75 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable82 = null;
        boolean boolean83 = constableBloomFilter81.contains(constable82);
        constableBloomFilter81.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter88 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable89 = null;
        boolean boolean90 = constableBloomFilter88.contains(constable89);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter88.getClass();
        constableBloomFilter81.insert((java.lang.constant.Constable) wildcardClass91);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter81.getClass();
        boolean boolean94 = constableBloomFilter78.contains((java.lang.constant.Constable) wildcardClass93);
        boolean boolean95 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean94);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2389");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>(0, 0);
    }

    @Test
    public void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2390");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((-1), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2391");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean16 = constableBloomFilter14.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass23 = constableBloomFilterBloomFilter22.getClass();
        boolean boolean24 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass23);
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean25);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter5.getClass();
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 10);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter31.getClass();
        boolean boolean33 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        constableBloomFilter36.insert(constable37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass54 = wildcardClassOfFieldBloomFilter53.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass57);
        boolean boolean60 = constableBloomFilter50.contains((java.lang.constant.Constable) '#');
        constableBloomFilter50.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass63 = constableBloomFilter50.getClass();
        boolean boolean64 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass63);
        boolean boolean65 = constableBloomFilter36.contains((java.lang.constant.Constable) boolean64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass69 = wildcardClassOfFieldBloomFilter68.getClass();
        boolean boolean70 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass69);
        boolean boolean71 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass69);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2392");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>(0, (int) (short) 100);
    }

    @Test
    public void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2393");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass17 = constableBloomFilter10.getClass();
        boolean boolean18 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        constableBloomFilter36.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter36.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (short) 100);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter48.getClass();
        constableBloomFilter45.insert((java.lang.constant.Constable) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter45.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2394");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(100, (int) (byte) 1);
    }

    @Test
    public void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2395");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter21.insert((java.lang.constant.Constable) 10);
        boolean boolean25 = constableBloomFilter21.contains((java.lang.constant.Constable) true);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean48 = constableBloomFilter42.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass49 = constableBloomFilter42.getClass();
        boolean boolean50 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable54 = null;
        boolean boolean55 = constableBloomFilter53.contains(constable54);
        constableBloomFilter53.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean59 = constableBloomFilter53.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass60 = constableBloomFilter53.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass60);
        boolean boolean62 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass60);
        boolean boolean63 = constableBloomFilter21.contains((java.lang.constant.Constable) boolean62);
        constableBloomFilter21.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable69 = null;
        boolean boolean70 = constableBloomFilter68.contains(constable69);
        constableBloomFilter68.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter68.getClass();
        boolean boolean74 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass73);
        boolean boolean75 = constableBloomFilter14.contains((java.lang.constant.Constable) boolean74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter81.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass90 = wildcardClassOfFieldBloomFilter89.getClass();
        constableBloomFilter86.insert((java.lang.constant.Constable) wildcardClass90);
        constableBloomFilter81.insert((java.lang.constant.Constable) wildcardClass90);
        constableBloomFilter78.insert((java.lang.constant.Constable) wildcardClass90);
        boolean boolean94 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass90);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter14.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2396");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (short) 1);
        java.lang.Class<?> wildcardClass13 = constableBloomFilter12.getClass();
        boolean boolean14 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean27 = constableBloomFilter25.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        constableBloomFilter33.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean39 = constableBloomFilter33.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass40 = constableBloomFilter33.getClass();
        boolean boolean41 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass51 = constableBloomFilter44.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass51);
        boolean boolean53 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass51);
        constableBloomFilter17.insert((java.lang.constant.Constable) boolean53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable61 = null;
        boolean boolean62 = constableBloomFilter60.contains(constable61);
        constableBloomFilter60.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean66 = constableBloomFilter60.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass67 = constableBloomFilter60.getClass();
        boolean boolean68 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable72 = null;
        boolean boolean73 = constableBloomFilter71.contains(constable72);
        constableBloomFilter71.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean77 = constableBloomFilter71.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass78 = constableBloomFilter71.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass78);
        boolean boolean81 = constableBloomFilter57.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter57.getClass();
        boolean boolean83 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass82);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter17.getClass();
        boolean boolean85 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass84);
        boolean boolean86 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass84);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2397");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) '4', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2398");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 100);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2399");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(10, (int) (short) 10);
        java.lang.Class<?> wildcardClass3 = genericDeclarationBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2400");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 100);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2401");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 10);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean12 = constableBloomFilter10.contains((java.lang.constant.Constable) 0L);
        boolean boolean14 = constableBloomFilter10.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) '4');
        boolean boolean18 = constableBloomFilter10.contains((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter10.contains(constable19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter23.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2402");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter5.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 10);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (short) 1);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter42.getClass();
        boolean boolean44 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass43);
        boolean boolean45 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean44);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2403");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) (short) 1, (int) (byte) 1);
    }

    @Test
    public void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2404");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass22 = constableBloomFilter15.getClass();
        boolean boolean23 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        constableBloomFilter26.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean32 = constableBloomFilter26.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass33 = constableBloomFilter26.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter12.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass40 = wildcardClassOfFieldBloomFilter39.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass55 = constableBloomFilter48.getClass();
        boolean boolean56 = constableBloomFilter45.contains((java.lang.constant.Constable) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter45.getClass();
        boolean boolean58 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(1, (int) '4');
        java.lang.Class<?> wildcardClass62 = constableBloomFilterBloomFilter61.getClass();
        boolean boolean63 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean68 = constableBloomFilter66.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (short) 100);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter71.getClass();
        boolean boolean73 = constableBloomFilter66.contains((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter7.insert((java.lang.constant.Constable) boolean73);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2405");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter12.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter12.getClass();
        boolean boolean20 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass19);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 10);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter24.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2406");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) ' ', (int) 'a');
    }

    @Test
    public void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2407");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter7.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter7.insert((java.lang.constant.Constable) ' ');
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter29.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass34);
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass34);
        boolean boolean37 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass34);
        boolean boolean39 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter42.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean46 = constableBloomFilter42.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter49.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass58 = wildcardClassOfFieldBloomFilter57.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass58);
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter63.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass64);
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable70 = null;
        boolean boolean71 = constableBloomFilter69.contains(constable70);
        constableBloomFilter69.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter69.getClass();
        boolean boolean75 = constableBloomFilter42.contains((java.lang.constant.Constable) wildcardClass74);
        boolean boolean76 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean75);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 100, (int) (short) 10);
        java.lang.Class<?> wildcardClass80 = typeDescriptorBloomFilter79.getClass();
        boolean boolean81 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2408");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>(100, (int) (byte) 1);
        java.lang.Class<?> wildcardClass3 = typeBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2409");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter11.insert((java.lang.constant.Constable) 10);
        boolean boolean15 = constableBloomFilter11.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter11.contains(constable16);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter11.getClass();
        boolean boolean19 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass29 = constableBloomFilterBloomFilter28.getClass();
        boolean boolean30 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass29);
        boolean boolean32 = constableBloomFilter25.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass36 = constableBloomFilter35.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean38 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter41.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean49 = constableBloomFilter41.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter52.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean56 = constableBloomFilter52.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter52.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean60 = constableBloomFilter52.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        boolean boolean68 = constableBloomFilter66.contains(constable67);
        constableBloomFilter66.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean72 = constableBloomFilter66.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass73 = constableBloomFilter66.getClass();
        boolean boolean74 = constableBloomFilter63.contains((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable78 = null;
        boolean boolean79 = constableBloomFilter77.contains(constable78);
        constableBloomFilter77.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean83 = constableBloomFilter77.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass84 = constableBloomFilter77.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass84);
        boolean boolean86 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass84);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter52.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass87);
        boolean boolean89 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass87);
        boolean boolean91 = constableBloomFilter22.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass92 = constableBloomFilter22.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2410");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean13 = constableBloomFilter9.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean17 = constableBloomFilter9.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass18);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter2.contains(constable20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter24.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable29 = null;
        constableBloomFilter24.insert(constable29);
        boolean boolean32 = constableBloomFilter24.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass36 = wildcardClassOfFieldBloomFilter35.getClass();
        boolean boolean37 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        constableBloomFilter40.insert(constable41);
        constableBloomFilter40.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter47.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter47.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter47.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter47.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter58.insert((java.lang.constant.Constable) 10);
        boolean boolean62 = constableBloomFilter58.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable63 = null;
        boolean boolean64 = constableBloomFilter58.contains(constable63);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter58.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter72.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter72.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter72.insert((java.lang.constant.Constable) (-1L));
        boolean boolean80 = constableBloomFilter72.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter72.getClass();
        constableBloomFilter69.insert((java.lang.constant.Constable) wildcardClass81);
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass81);
        boolean boolean84 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass81);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter40.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass85);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter24.getClass();
        boolean boolean88 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2411");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass11 = wildcardClassOfFieldBloomFilter10.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter15.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean19 = constableBloomFilter15.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter22.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass31 = wildcardClassOfFieldBloomFilter30.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter36.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter42.getClass();
        boolean boolean48 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2412");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) (short) 1, (int) ' ');
    }

    @Test
    public void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2413");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 100, (int) 'a');
    }

    @Test
    public void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2414");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter11.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter11.insert((java.lang.constant.Constable) (-1L));
        boolean boolean19 = constableBloomFilter11.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter11.getClass();
        boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass37 = constableBloomFilterBloomFilter36.getClass();
        boolean boolean38 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter43.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter43.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter50.getClass();
        boolean boolean54 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass53);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter43.contains(constable55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean61 = constableBloomFilter59.contains((java.lang.constant.Constable) 0L);
        boolean boolean63 = constableBloomFilter59.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean65 = constableBloomFilter59.contains((java.lang.constant.Constable) '4');
        boolean boolean67 = constableBloomFilter59.contains((java.lang.constant.Constable) 1.0f);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter59.getClass();
        boolean boolean69 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass68);
        boolean boolean70 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        constableBloomFilter73.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter73.getClass();
        boolean boolean79 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass78);
        java.lang.constant.Constable constable80 = null;
        boolean boolean81 = constableBloomFilter2.contains(constable80);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2415");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) '#', 0);
    }

    @Test
    public void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2416");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass23 = wildcardClassOfFieldBloomFilter22.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter19.contains((java.lang.constant.Constable) '#');
        constableBloomFilter19.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter19.getClass();
        boolean boolean33 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass38 = wildcardClassOfFieldBloomFilter37.getClass();
        boolean boolean39 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass43 = typeBloomFilter42.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass51 = constableBloomFilterBloomFilter50.getClass();
        boolean boolean52 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter47.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = constableBloomFilter5.getClass();
        boolean boolean56 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(1, 10);
        java.lang.Class<?> wildcardClass60 = constableBloomFilterBloomFilter59.getClass();
        boolean boolean61 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2417");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter15.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean19 = constableBloomFilter15.contains((java.lang.constant.Constable) 100L);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean54 = constableBloomFilter50.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter50.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean58 = constableBloomFilter50.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass62 = constantDescBloomFilter61.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter67.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean71 = constableBloomFilter67.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter67.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean75 = constableBloomFilter67.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter67.getClass();
        boolean boolean77 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass76);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean77);
        java.lang.constant.Constable constable79 = null;
        constableBloomFilter2.insert(constable79);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass90 = wildcardClassOfFieldBloomFilter89.getClass();
        boolean boolean91 = constableBloomFilter86.contains((java.lang.constant.Constable) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter86.getClass();
        constableBloomFilter83.insert((java.lang.constant.Constable) wildcardClass92);
        boolean boolean94 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2418");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass15 = constableBloomFilterBloomFilter14.getClass();
        boolean boolean16 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass15);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean25 = constableBloomFilter23.contains((java.lang.constant.Constable) 0L);
        boolean boolean27 = constableBloomFilter23.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter30.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter30.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter41.insert((java.lang.constant.Constable) 10);
        boolean boolean45 = constableBloomFilter41.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter48.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass57 = wildcardClassOfFieldBloomFilter56.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass57);
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass57);
        boolean boolean60 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass57);
        constableBloomFilter23.insert((java.lang.constant.Constable) boolean60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter23.getClass();
        boolean boolean63 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean63);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2419");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean15 = constableBloomFilter13.contains((java.lang.constant.Constable) 0L);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 100);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter24.getClass();
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass33 = charSequenceBloomFilter32.getClass();
        boolean boolean34 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass33);
        boolean boolean35 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean43 = constableBloomFilter41.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass50 = constableBloomFilterBloomFilter49.getClass();
        boolean boolean51 = constableBloomFilter46.contains((java.lang.constant.Constable) wildcardClass50);
        boolean boolean52 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter55.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        constableBloomFilter63.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean69 = constableBloomFilter63.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass70 = constableBloomFilter63.getClass();
        boolean boolean71 = constableBloomFilter60.contains((java.lang.constant.Constable) wildcardClass70);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable75 = null;
        boolean boolean76 = constableBloomFilter74.contains(constable75);
        constableBloomFilter74.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean80 = constableBloomFilter74.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass81 = constableBloomFilter74.getClass();
        constableBloomFilter60.insert((java.lang.constant.Constable) wildcardClass81);
        boolean boolean84 = constableBloomFilter60.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter60.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean87 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass85);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter90 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter90.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter90.insert((java.lang.constant.Constable) 1.0f);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter90.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass95);
        boolean boolean97 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass95);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass95);
        java.lang.Class<?> wildcardClass99 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2420");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter17.insert((java.lang.constant.Constable) 10);
        boolean boolean21 = constableBloomFilter17.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass33 = wildcardClassOfFieldBloomFilter32.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter40.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean44 = constableBloomFilter40.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter40.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean48 = constableBloomFilter40.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter40.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass54 = constableBloomFilterBloomFilter53.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass54);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2421");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter13.insert((java.lang.constant.Constable) 10);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) true);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        constableBloomFilter22.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean28 = constableBloomFilter22.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        boolean boolean42 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean54 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass52);
        boolean boolean55 = constableBloomFilter13.contains((java.lang.constant.Constable) boolean54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        boolean boolean67 = constableBloomFilter63.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter63.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean71 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean76 = constableBloomFilter74.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable80 = null;
        boolean boolean81 = constableBloomFilter79.contains(constable80);
        constableBloomFilter79.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter79.getClass();
        boolean boolean85 = constableBloomFilter74.contains((java.lang.constant.Constable) wildcardClass84);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass84);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter91 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (short) 0, 10);
        java.lang.Class<?> wildcardClass92 = charSequenceBloomFilter91.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass92);
        java.lang.constant.Constable constable94 = null;
        constableBloomFilter2.insert(constable94);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2422");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable9 = null;
        constableBloomFilter8.insert(constable9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass14 = constableBloomFilter13.getClass();
        boolean boolean15 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass14);
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass14);
        boolean boolean17 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) '4');
        java.lang.Class<?> wildcardClass24 = constableBloomFilter23.getClass();
        boolean boolean25 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2423");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter18.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter18.insert((java.lang.constant.Constable) (-1L));
        boolean boolean26 = constableBloomFilter18.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter18.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        boolean boolean42 = constableBloomFilter38.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter38.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean45 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean54 = constableBloomFilter52.contains((java.lang.constant.Constable) 0L);
        boolean boolean56 = constableBloomFilter52.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter59.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter59.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean65 = constableBloomFilter59.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass66 = constableBloomFilter59.getClass();
        boolean boolean67 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass66);
        constableBloomFilter49.insert((java.lang.constant.Constable) boolean67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 10);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter71.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass72);
        boolean boolean74 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2424");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>((int) (short) 100, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2425");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean11 = constableBloomFilter9.contains((java.lang.constant.Constable) 0L);
        boolean boolean13 = constableBloomFilter9.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean15 = constableBloomFilter9.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter18.insert((java.lang.constant.Constable) 10);
        constableBloomFilter18.insert((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter18.getClass();
        boolean boolean24 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass23);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass35 = constableBloomFilterBloomFilter34.getClass();
        boolean boolean36 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass35);
        boolean boolean38 = constableBloomFilter31.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter41.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean44 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter47.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter47.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean53 = constableBloomFilter47.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean55 = constableBloomFilter47.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter58.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean62 = constableBloomFilter58.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter58.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean66 = constableBloomFilter58.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable73 = null;
        boolean boolean74 = constableBloomFilter72.contains(constable73);
        constableBloomFilter72.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean78 = constableBloomFilter72.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass79 = constableBloomFilter72.getClass();
        boolean boolean80 = constableBloomFilter69.contains((java.lang.constant.Constable) wildcardClass79);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable84 = null;
        boolean boolean85 = constableBloomFilter83.contains(constable84);
        constableBloomFilter83.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean89 = constableBloomFilter83.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass90 = constableBloomFilter83.getClass();
        constableBloomFilter69.insert((java.lang.constant.Constable) wildcardClass90);
        boolean boolean92 = constableBloomFilter58.contains((java.lang.constant.Constable) wildcardClass90);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter58.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass93);
        boolean boolean95 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass93);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter28.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2426");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, 0);
        java.lang.Class<?> wildcardClass3 = wildcardClassOfFieldBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2427");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter13.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean21 = constableBloomFilter13.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass45);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 1, (int) (short) 1);
        java.lang.Class<?> wildcardClass53 = serializableBloomFilter52.getClass();
        boolean boolean54 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2428");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 100, (int) (byte) 10);
    }

    @Test
    public void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2429");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) ' ', (int) ' ');
        java.lang.Class<?> wildcardClass6 = serializableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean15 = constableBloomFilter13.contains((java.lang.constant.Constable) ' ');
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter13.getClass();
        boolean boolean19 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 1);
        java.lang.constant.Constable constable23 = null;
        constableBloomFilter22.insert(constable23);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter22.getClass();
        boolean boolean26 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass30 = charSequenceBloomFilter29.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        boolean boolean36 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2430");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 1, 100);
        java.lang.Class<?> wildcardClass9 = typeDescriptorBloomFilter8.getClass();
        boolean boolean10 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass9);
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter14.insert((java.lang.constant.Constable) 10);
        boolean boolean18 = constableBloomFilter14.contains((java.lang.constant.Constable) true);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        constableBloomFilter23.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean29 = constableBloomFilter23.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        boolean boolean43 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean55 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass53);
        boolean boolean56 = constableBloomFilter14.contains((java.lang.constant.Constable) boolean55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter59.contains(constable60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable65 = null;
        boolean boolean66 = constableBloomFilter64.contains(constable65);
        boolean boolean68 = constableBloomFilter64.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter64.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass69);
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter74.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter74.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter74.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter74.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter74.insert((java.lang.constant.Constable) (-1.0f));
        java.lang.Class<?> wildcardClass85 = constableBloomFilter74.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass85);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter14.getClass();
        boolean boolean88 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2431");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(10, (int) '#');
    }

    @Test
    public void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2432");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass21);
        boolean boolean24 = constableBloomFilter14.contains((java.lang.constant.Constable) '#');
        constableBloomFilter14.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter29.insert((java.lang.constant.Constable) 10);
        boolean boolean33 = constableBloomFilter29.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter36.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass45 = wildcardClassOfFieldBloomFilter44.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass45);
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean48 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass45);
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter52.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean56 = constableBloomFilter52.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter52.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean60 = constableBloomFilter52.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter52.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter14.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        java.lang.constant.Constable constable65 = null;
        constableBloomFilter2.insert(constable65);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2433");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter2.contains(constable9);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2434");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter5.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass41 = wildcardClassOfFieldBloomFilter40.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean47 = constableBloomFilter37.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass55 = constableBloomFilter50.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable60 = null;
        constableBloomFilter59.insert(constable60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter59.getClass();
        boolean boolean63 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter37.getClass();
        boolean boolean65 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter68.insert((java.lang.constant.Constable) 10);
        boolean boolean72 = constableBloomFilter68.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter75.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass84 = wildcardClassOfFieldBloomFilter83.getClass();
        constableBloomFilter80.insert((java.lang.constant.Constable) wildcardClass84);
        constableBloomFilter75.insert((java.lang.constant.Constable) wildcardClass84);
        boolean boolean87 = constableBloomFilter68.contains((java.lang.constant.Constable) wildcardClass84);
        constableBloomFilter68.insert((java.lang.constant.Constable) (short) -1);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter68.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass90);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter94 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) ' ', (int) '4');
        java.lang.Class<?> wildcardClass95 = constantDescBloomFilter94.getClass();
        boolean boolean96 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass95);
        boolean boolean97 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean96);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2435");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean14 = constableBloomFilter10.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass26 = wildcardClassOfFieldBloomFilter25.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass26);
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter31.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass32);
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean35 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass32);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter7.getClass();
        boolean boolean37 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass36);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter2.contains(constable38);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2436");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(0, 1);
    }

    @Test
    public void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2437");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass14 = constantDescBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter18.insert((java.lang.constant.Constable) 10);
        constableBloomFilter18.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        boolean boolean33 = constableBloomFilter25.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter25.getClass();
        boolean boolean35 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass34);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass52 = constableBloomFilterBloomFilter51.getClass();
        boolean boolean53 = constableBloomFilter48.contains((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter57.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass58);
        boolean boolean60 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass58);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2438");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(100, (int) (short) 100);
    }

    @Test
    public void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2439");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass14 = wildcardClassOfFieldBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter18.getClass();
        boolean boolean20 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter26.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter26.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean32 = constableBloomFilter26.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean34 = constableBloomFilter26.contains((java.lang.constant.Constable) 0L);
        boolean boolean36 = constableBloomFilter26.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter39.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter39.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        constableBloomFilter52.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter59.contains(constable60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter59.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass62);
        java.lang.Class<?> wildcardClass66 = constableBloomFilter26.getClass();
        boolean boolean67 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass66);
        boolean boolean68 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass66);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2440");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass10 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2441");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2442");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        constableBloomFilter47.insert(constable48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        constableBloomFilter52.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean58 = constableBloomFilter52.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass65 = wildcardClassOfFieldBloomFilter64.getClass();
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean71 = constableBloomFilter61.contains((java.lang.constant.Constable) '#');
        constableBloomFilter61.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass74 = constableBloomFilter61.getClass();
        boolean boolean75 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass74);
        boolean boolean76 = constableBloomFilter47.contains((java.lang.constant.Constable) boolean75);
        constableBloomFilter47.insert((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass79 = constableBloomFilter47.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass79);
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass79);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2443");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass23 = wildcardClassOfFieldBloomFilter22.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter19.contains((java.lang.constant.Constable) '#');
        constableBloomFilter19.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter19.getClass();
        boolean boolean33 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean33);
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass37 = constableBloomFilter5.getClass();
        boolean boolean38 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable45 = null;
        constableBloomFilter44.insert(constable45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter52.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass61 = wildcardClassOfFieldBloomFilter60.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter66.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass67);
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass67);
        boolean boolean70 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass67);
        java.lang.Class<?> wildcardClass71 = constableBloomFilter44.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass71);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean80 = constableBloomFilter78.contains((java.lang.constant.Constable) ' ');
        boolean boolean82 = constableBloomFilter78.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter78.getClass();
        boolean boolean84 = constableBloomFilter75.contains((java.lang.constant.Constable) wildcardClass83);
        boolean boolean85 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass83);
        boolean boolean86 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean85);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2444");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter5.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = constableBloomFilterBloomFilter32.getClass();
        boolean boolean34 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter40.getClass();
        boolean boolean42 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter37.getClass();
        boolean boolean44 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass43);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter51.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean55 = constableBloomFilter51.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter58.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass67 = wildcardClassOfFieldBloomFilter66.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass67);
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter72.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable79 = null;
        boolean boolean80 = constableBloomFilter78.contains(constable79);
        constableBloomFilter78.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter78.getClass();
        boolean boolean84 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass83);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable88 = null;
        boolean boolean89 = constableBloomFilter87.contains(constable88);
        constableBloomFilter87.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean93 = constableBloomFilter87.contains((java.lang.constant.Constable) 'a');
        boolean boolean95 = constableBloomFilter87.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter87.getClass();
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass96);
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass96);
        boolean boolean99 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2445");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>(0, (int) '#');
        java.lang.Class<?> wildcardClass6 = annotatedElementBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter13.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass22 = constableBloomFilter21.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass22);
        boolean boolean24 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass22);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter13.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '#');
        java.lang.Class<?> wildcardClass30 = constableBloomFilter29.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass30);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass30);
        boolean boolean34 = constableBloomFilter2.contains((java.lang.constant.Constable) 10L);
        constableBloomFilter2.insert((java.lang.constant.Constable) "");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2446");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter22.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass25);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) '4', (int) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilterBloomFilter33.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass34);
        boolean boolean36 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) (short) 10);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter39.getClass();
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean46 = constableBloomFilter44.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter49.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass63 = wildcardClassOfFieldBloomFilter62.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass63);
        boolean boolean65 = constableBloomFilter56.contains((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass72 = wildcardClassOfFieldBloomFilter71.getClass();
        constableBloomFilter68.insert((java.lang.constant.Constable) wildcardClass72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        constableBloomFilter68.insert((java.lang.constant.Constable) wildcardClass75);
        boolean boolean78 = constableBloomFilter68.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter68.getClass();
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass79);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter56.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass81);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter85 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter85.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean89 = constableBloomFilter85.contains((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass93 = constantDescBloomFilter92.getClass();
        constableBloomFilter85.insert((java.lang.constant.Constable) wildcardClass93);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter85.getClass();
        boolean boolean96 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass95);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean96);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2447");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter16.getClass();
        boolean boolean30 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass35 = wildcardClassOfFieldBloomFilter34.getClass();
        boolean boolean36 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass40 = typeBloomFilter39.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass48 = wildcardClassOfFieldBloomFilter47.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass51);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass57 = genericDeclarationBloomFilter56.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) (short) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass62 = strBloomFilter61.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        boolean boolean68 = constableBloomFilter66.contains(constable67);
        boolean boolean70 = constableBloomFilter66.contains((java.lang.constant.Constable) (byte) 1);
        java.lang.constant.Constable constable71 = null;
        constableBloomFilter66.insert(constable71);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, (int) 'a');
        java.lang.Class<?> wildcardClass79 = wildcardClassOfFieldBloomFilter78.getClass();
        constableBloomFilter75.insert((java.lang.constant.Constable) wildcardClass79);
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass79);
        boolean boolean82 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass79);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter85 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) (short) 0);
        java.lang.Class<?> wildcardClass86 = constableBloomFilter85.getClass();
        boolean boolean87 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2448");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean15 = constableBloomFilter11.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter11.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean19 = constableBloomFilter11.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass23 = constantDescBloomFilter22.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean25 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean33 = constableBloomFilter31.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter31.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) '#');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter38.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (byte) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass45 = objBloomFilter44.getClass();
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '4');
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (byte) 100);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter57.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass58);
        boolean boolean60 = constableBloomFilter49.contains((java.lang.constant.Constable) wildcardClass58);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter49.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2449");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) (byte) 10);
        java.lang.Class<?> wildcardClass14 = constableBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass14);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter2.contains(constable16);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2450");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>(1, (int) (byte) 0);
    }

    @Test
    public void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2451");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter12.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean20 = constableBloomFilter12.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter12.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter25.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean29 = constableBloomFilter25.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter25.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean33 = constableBloomFilter25.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter25.getClass();
        boolean boolean35 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass34);
        boolean boolean36 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean41 = constableBloomFilter39.contains((java.lang.constant.Constable) 0L);
        boolean boolean43 = constableBloomFilter39.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) '4');
        boolean boolean47 = constableBloomFilter39.contains((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter50.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter50.insert((java.lang.constant.Constable) (-1L));
        boolean boolean58 = constableBloomFilter50.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter50.getClass();
        boolean boolean62 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass61);
        boolean boolean64 = constableBloomFilter39.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean72 = constableBloomFilter70.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter70.getClass();
        constableBloomFilter67.insert((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass73);
        java.lang.constant.Constable constable76 = null;
        boolean boolean77 = constableBloomFilter39.contains(constable76);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass84 = wildcardClassOfFieldBloomFilter83.getClass();
        boolean boolean85 = constableBloomFilter80.contains((java.lang.constant.Constable) wildcardClass84);
        java.lang.Class<?> wildcardClass86 = constableBloomFilter80.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass86);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass86);
        java.lang.constant.Constable constable89 = null;
        boolean boolean90 = constableBloomFilter2.contains(constable89);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2452");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter13.insert((java.lang.constant.Constable) 10);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter13.contains(constable18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter27.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter27.insert((java.lang.constant.Constable) (-1L));
        boolean boolean35 = constableBloomFilter27.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter27.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass36);
        java.lang.constant.Constable constable39 = null;
        constableBloomFilter2.insert(constable39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter43.insert((java.lang.constant.Constable) 10);
        boolean boolean47 = constableBloomFilter43.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter43.contains(constable48);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter43.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2453");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        boolean boolean42 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter31.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass71 = constableBloomFilterBloomFilter70.getClass();
        boolean boolean72 = constableBloomFilter67.contains((java.lang.constant.Constable) wildcardClass71);
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass71);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter58.getClass();
        boolean boolean75 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass74);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2454");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(1, (int) ' ');
        java.lang.Class<?> wildcardClass3 = constantDescBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2455");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter37.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter37.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter37.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass44 = constableBloomFilter37.getClass();
        boolean boolean45 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass44);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter2.contains(constable46);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2456");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) '#', (int) (byte) 0);
    }

    @Test
    public void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2457");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass40 = wildcardClassOfFieldBloomFilter39.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter36.contains((java.lang.constant.Constable) '#');
        constableBloomFilter36.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass49 = constableBloomFilter36.getClass();
        boolean boolean50 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter54.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean58 = constableBloomFilter54.contains((java.lang.constant.Constable) 100L);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        boolean boolean68 = constableBloomFilter66.contains(constable67);
        constableBloomFilter66.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean72 = constableBloomFilter66.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass73 = constableBloomFilter66.getClass();
        boolean boolean74 = constableBloomFilter63.contains((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable78 = null;
        boolean boolean79 = constableBloomFilter77.contains(constable78);
        constableBloomFilter77.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean83 = constableBloomFilter77.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass84 = constableBloomFilter77.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass84);
        boolean boolean86 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass84);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter89.insert((java.lang.constant.Constable) 10);
        boolean boolean93 = constableBloomFilter89.contains((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter89.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass94);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter54.getClass();
        boolean boolean97 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass96);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2458");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) '4', (int) '#');
        java.lang.Class<?> wildcardClass3 = wildcardClassOfFieldBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2459");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        constableBloomFilter7.insert(constable8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter7.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter14.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean35 = constableBloomFilter25.contains((java.lang.constant.Constable) '#');
        constableBloomFilter25.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass38 = constableBloomFilter25.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2460");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean29 = constableBloomFilter27.contains((java.lang.constant.Constable) 0L);
        boolean boolean31 = constableBloomFilter27.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter34.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean38 = constableBloomFilter34.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter34.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean42 = constableBloomFilter34.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter34.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter27.getClass();
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2461");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter5.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter16.insert((java.lang.constant.Constable) 10);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) true);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass44 = constableBloomFilter37.getClass();
        boolean boolean45 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass55 = constableBloomFilter48.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass55);
        boolean boolean57 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass55);
        boolean boolean58 = constableBloomFilter16.contains((java.lang.constant.Constable) boolean57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable62 = null;
        boolean boolean63 = constableBloomFilter61.contains(constable62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        boolean boolean68 = constableBloomFilter66.contains(constable67);
        boolean boolean70 = constableBloomFilter66.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass71 = constableBloomFilter66.getClass();
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass71);
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass71);
        boolean boolean74 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass71);
        boolean boolean75 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass71);
        java.lang.constant.Constable constable76 = null;
        constableBloomFilter2.insert(constable76);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2462");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        constableBloomFilter11.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter38.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter38.insert((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass49 = constableBloomFilter38.getClass();
        boolean boolean50 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2463");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter13.insert((java.lang.constant.Constable) 10);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) true);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        constableBloomFilter22.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean28 = constableBloomFilter22.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        boolean boolean42 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean54 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass52);
        boolean boolean55 = constableBloomFilter13.contains((java.lang.constant.Constable) boolean54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        boolean boolean67 = constableBloomFilter63.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter63.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean71 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter74.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter74.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter74.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter83.insert((java.lang.constant.Constable) 10);
        boolean boolean87 = constableBloomFilter83.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable88 = null;
        boolean boolean89 = constableBloomFilter83.contains(constable88);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter83.getClass();
        boolean boolean91 = constableBloomFilter74.contains((java.lang.constant.Constable) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter74.getClass();
        boolean boolean93 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass92);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter96 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) '#', 100);
        java.lang.Class<?> wildcardClass97 = serializableBloomFilter96.getClass();
        boolean boolean98 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2464");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = constableBloomFilterBloomFilter29.getClass();
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter37.getClass();
        boolean boolean39 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter34.getClass();
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) '4', 100);
        java.lang.Class<?> wildcardClass45 = genericDeclarationBloomFilter44.getClass();
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2465");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) '#', (int) '#');
    }

    @Test
    public void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2466");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 10);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        boolean boolean19 = constableBloomFilter15.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter15.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean26 = constableBloomFilter24.contains((java.lang.constant.Constable) 0L);
        boolean boolean28 = constableBloomFilter24.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass34 = typeDescriptorBloomFilter33.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter38.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter38.insert((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass49 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.constant.Constable constable55 = null;
        constableBloomFilter54.insert(constable55);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter54.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter10.getClass();
        boolean boolean60 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2467");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass18 = constableBloomFilter11.getClass();
        boolean boolean19 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter8.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean26 = constableBloomFilter24.contains((java.lang.constant.Constable) 0L);
        boolean boolean28 = constableBloomFilter24.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter36.getClass();
        boolean boolean38 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass51 = serializableBloomFilter50.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass51);
        boolean boolean53 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean58 = constableBloomFilter56.contains((java.lang.constant.Constable) 0L);
        boolean boolean60 = constableBloomFilter56.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean62 = constableBloomFilter56.contains((java.lang.constant.Constable) '4');
        boolean boolean64 = constableBloomFilter56.contains((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter67.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter67.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter67.insert((java.lang.constant.Constable) (-1L));
        boolean boolean75 = constableBloomFilter67.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter67.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter67.getClass();
        boolean boolean79 = constableBloomFilter56.contains((java.lang.constant.Constable) wildcardClass78);
        boolean boolean81 = constableBloomFilter56.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean89 = constableBloomFilter87.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter87.getClass();
        constableBloomFilter84.insert((java.lang.constant.Constable) wildcardClass90);
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass90);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass90);
        boolean boolean94 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2468");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (short) 100);
        java.lang.Class<?> wildcardClass8 = constableBloomFilter7.getClass();
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 0);
        java.lang.Class<?> wildcardClass13 = constableBloomFilter12.getClass();
        boolean boolean14 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean22 = constableBloomFilter20.contains((java.lang.constant.Constable) ' ');
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass31 = wildcardClassOfFieldBloomFilter30.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass34);
        boolean boolean37 = constableBloomFilter27.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter40.contains(constable41);
        constableBloomFilter40.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean46 = constableBloomFilter40.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        constableBloomFilter52.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean58 = constableBloomFilter52.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass59 = constableBloomFilter52.getClass();
        boolean boolean60 = constableBloomFilter49.contains((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        constableBloomFilter63.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean69 = constableBloomFilter63.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass70 = constableBloomFilter63.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass70);
        boolean boolean72 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass70);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter75.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter75.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter75.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass82 = constableBloomFilter75.getClass();
        boolean boolean83 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass82);
        boolean boolean84 = constableBloomFilter27.contains((java.lang.constant.Constable) boolean83);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable88 = null;
        constableBloomFilter87.insert(constable88);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter87.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass90);
        boolean boolean92 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass90);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter20.getClass();
        boolean boolean94 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass93);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter17.getClass();
        boolean boolean96 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass95);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2469");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 10, (int) (byte) 1);
    }

    @Test
    public void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2470");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass13 = constableBloomFilterBloomFilter12.getClass();
        boolean boolean14 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable21 = null;
        boolean boolean22 = constableBloomFilter20.contains(constable21);
        constableBloomFilter20.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean26 = constableBloomFilter20.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass27 = constableBloomFilter20.getClass();
        boolean boolean28 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        boolean boolean33 = constableBloomFilter31.contains(constable32);
        constableBloomFilter31.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean37 = constableBloomFilter31.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass38 = constableBloomFilter31.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass38);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass38);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter9.getClass();
        boolean boolean42 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>(10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = wildcardClassBloomFilter45.getClass();
        boolean boolean47 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2471");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        boolean boolean23 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter26.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter26.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass37);
        boolean boolean39 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean48 = constableBloomFilter42.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass55 = constableBloomFilterBloomFilter54.getClass();
        boolean boolean56 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass55);
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass55);
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass55);
        boolean boolean59 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass55);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2472");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        constableBloomFilter5.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) 0L);
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter19.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean23 = constableBloomFilter19.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter19.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean27 = constableBloomFilter19.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter19.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass28);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 100);
        java.lang.constant.Constable constable35 = null;
        constableBloomFilter34.insert(constable35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter39.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean43 = constableBloomFilter39.contains((java.lang.constant.Constable) 100L);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter39.contains((java.lang.constant.Constable) "");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter50.insert((java.lang.constant.Constable) 10);
        boolean boolean54 = constableBloomFilter50.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter57.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass66 = wildcardClassOfFieldBloomFilter65.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass66);
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass66);
        boolean boolean69 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass66);
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass66);
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter74.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass75);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2473");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter23.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter29.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean33 = constableBloomFilter29.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter29.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter45.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        constableBloomFilter52.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter59.contains(constable60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter59.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass62);
        boolean boolean64 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass62);
        boolean boolean65 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 10, 0);
        java.lang.Class<?> wildcardClass73 = constantDescBloomFilter72.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2474");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass17 = constantDescBloomFilter16.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass17);
        boolean boolean20 = constableBloomFilter5.contains((java.lang.constant.Constable) 10.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter23.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        constableBloomFilter28.insert(constable29);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter28.getClass();
        boolean boolean32 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        boolean boolean58 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable62 = null;
        boolean boolean63 = constableBloomFilter61.contains(constable62);
        constableBloomFilter61.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean67 = constableBloomFilter61.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass68 = constableBloomFilter61.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean70 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter73.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter73.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter73.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass80 = constableBloomFilter73.getClass();
        boolean boolean81 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass80);
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass80);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter35.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass83);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2475");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass17 = wildcardClassOfFieldBloomFilter16.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass17);
        boolean boolean19 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass17);
        boolean boolean20 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass17);
        // The following exception was thrown during execution in test generation
        try {
            constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass17);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2476");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter7.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter7.insert((java.lang.constant.Constable) ' ');
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter29.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass34);
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass34);
        boolean boolean37 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass34);
        boolean boolean39 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean47 = constableBloomFilter45.contains((java.lang.constant.Constable) ' ');
        boolean boolean49 = constableBloomFilter45.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter45.getClass();
        boolean boolean51 = constableBloomFilter42.contains((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        constableBloomFilter54.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) 'a');
        boolean boolean62 = constableBloomFilter54.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter54.getClass();
        boolean boolean64 = constableBloomFilter42.contains((java.lang.constant.Constable) wildcardClass63);
        boolean boolean65 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass63);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter2.contains(constable66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable71 = null;
        boolean boolean72 = constableBloomFilter70.contains(constable71);
        constableBloomFilter70.insert((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass78 = constantDescBloomFilter77.getClass();
        boolean boolean79 = constableBloomFilter70.contains((java.lang.constant.Constable) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter70.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass80);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2477");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter37.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean41 = constableBloomFilter37.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter37.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean45 = constableBloomFilter37.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass49 = constantDescBloomFilter48.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (byte) 1, 10);
        java.lang.Class<?> wildcardClass55 = wildcardClassOfFieldBloomFilter54.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 1, 100);
        java.lang.Class<?> wildcardClass63 = typeDescriptorBloomFilter62.getClass();
        boolean boolean64 = constableBloomFilter59.contains((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter67.getClass();
        boolean boolean69 = constableBloomFilter59.contains((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass68);
        java.lang.Class<?> wildcardClass71 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2478");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(1, (int) (short) 100);
    }

    @Test
    public void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2479");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass17 = constableBloomFilter10.getClass();
        boolean boolean18 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        boolean boolean33 = constableBloomFilter7.contains((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter36.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter36.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean42 = constableBloomFilter36.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean44 = constableBloomFilter36.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter36.getClass();
        boolean boolean46 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass45);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass45);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2480");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter10.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean18 = constableBloomFilter10.contains((java.lang.constant.Constable) 0L);
        boolean boolean20 = constableBloomFilter10.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        constableBloomFilter23.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean29 = constableBloomFilter23.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter23.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter23.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        constableBloomFilter36.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter43.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass46);
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass46);
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass46);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter10.getClass();
        boolean boolean51 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass58 = constableBloomFilterBloomFilter57.getClass();
        boolean boolean59 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass58);
        boolean boolean61 = constableBloomFilter54.contains((java.lang.constant.Constable) (-1.0f));
        constableBloomFilter54.insert((java.lang.constant.Constable) 100.0d);
        boolean boolean65 = constableBloomFilter54.contains((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter71.insert((java.lang.constant.Constable) 10);
        boolean boolean75 = constableBloomFilter71.contains((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter71.getClass();
        boolean boolean77 = constableBloomFilter68.contains((java.lang.constant.Constable) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter68.getClass();
        boolean boolean79 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass78);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass78);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2481");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) '4', (int) 'a');
        java.lang.Class<?> wildcardClass6 = constableBloomFilterBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        boolean boolean18 = constableBloomFilter10.contains((java.lang.constant.Constable) 100.0f);
        constableBloomFilter10.insert((java.lang.constant.Constable) (short) 1);
        boolean boolean22 = constableBloomFilter10.contains((java.lang.constant.Constable) '4');
        constableBloomFilter10.insert((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter27.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter27.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter27.insert((java.lang.constant.Constable) 'a');
        boolean boolean37 = constableBloomFilter27.contains((java.lang.constant.Constable) 10.0f);
        boolean boolean39 = constableBloomFilter27.contains((java.lang.constant.Constable) 100.0d);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter27.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass40);
        boolean boolean42 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass40);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2482");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass13 = wildcardClassOfFieldBloomFilter12.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (short) 0, 10);
        java.lang.Class<?> wildcardClass23 = charSequenceBloomFilter22.getClass();
        boolean boolean24 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass23);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2483");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass17 = constableBloomFilter10.getClass();
        boolean boolean18 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        boolean boolean33 = constableBloomFilter7.contains((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter36.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter36.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean42 = constableBloomFilter36.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean44 = constableBloomFilter36.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter36.getClass();
        boolean boolean46 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass45);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter57.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass60);
        boolean boolean62 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2484");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass40 = wildcardClassOfFieldBloomFilter39.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter36.contains((java.lang.constant.Constable) '#');
        constableBloomFilter36.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass49 = constableBloomFilter36.getClass();
        boolean boolean50 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass58 = wildcardClassOfFieldBloomFilter57.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass61);
        boolean boolean64 = constableBloomFilter54.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter67.getClass();
        boolean boolean73 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass72);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(0, 0);
        java.lang.Class<?> wildcardClass78 = serializableBloomFilter77.getClass();
        boolean boolean79 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass78);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter85 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) ' ', (int) ' ');
        java.lang.Class<?> wildcardClass86 = serializableBloomFilter85.getClass();
        constableBloomFilter82.insert((java.lang.constant.Constable) wildcardClass86);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter82.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2485");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass30);
        java.lang.constant.Constable constable32 = null;
        constableBloomFilter2.insert(constable32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter36.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter36.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean42 = constableBloomFilter36.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter45.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter45.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter45.insert((java.lang.constant.Constable) (-1L));
        boolean boolean53 = constableBloomFilter45.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter45.getClass();
        boolean boolean55 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass71 = constableBloomFilterBloomFilter70.getClass();
        boolean boolean72 = constableBloomFilter67.contains((java.lang.constant.Constable) wildcardClass71);
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass71);
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass71);
        boolean boolean75 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2486");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter11.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter16.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean24 = constableBloomFilter16.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean50 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass48);
        boolean boolean51 = constableBloomFilter11.contains((java.lang.constant.Constable) boolean50);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter11.getClass();
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) '4', (int) '#');
        java.lang.Class<?> wildcardClass57 = typeBloomFilter56.getClass();
        boolean boolean58 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2487");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        constableBloomFilter14.insert(constable15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter14.getClass();
        boolean boolean18 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean23 = constableBloomFilter21.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass30 = constableBloomFilterBloomFilter29.getClass();
        boolean boolean31 = constableBloomFilter26.contains((java.lang.constant.Constable) wildcardClass30);
        boolean boolean32 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter35.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass50 = constableBloomFilter43.getClass();
        boolean boolean51 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        constableBloomFilter54.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter54.getClass();
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass61);
        boolean boolean64 = constableBloomFilter40.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter40.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass65);
        boolean boolean67 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter9.insert((java.lang.constant.Constable) boolean67);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter73.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass74);
        java.lang.constant.Constable constable76 = null;
        constableBloomFilter2.insert(constable76);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2488");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) (short) 1);
        java.lang.Class<?> wildcardClass10 = constableBloomFilterBloomFilter9.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2489");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass9 = constableBloomFilterBloomFilter8.getClass();
        boolean boolean10 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = constableBloomFilter5.getClass();
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2490");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) '4', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2491");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = charSequenceBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter10.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        boolean boolean33 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        constableBloomFilter36.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean42 = constableBloomFilter36.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass43 = constableBloomFilter36.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter22.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter22.getClass();
        boolean boolean48 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter19.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (short) 10, (int) '4');
        java.lang.Class<?> wildcardClass54 = charSequenceBloomFilter53.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass54);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass54);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2492");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (short) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2493");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter37.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter37.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter37.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass44 = constableBloomFilter37.getClass();
        boolean boolean45 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter48.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2494");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        constableBloomFilter2.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable10 = null;
        boolean boolean11 = constableBloomFilter9.contains(constable10);
        constableBloomFilter9.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean15 = constableBloomFilter9.contains((java.lang.constant.Constable) 'a');
        boolean boolean17 = constableBloomFilter9.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter9.getClass();
        boolean boolean19 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass18);
        boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass22 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2495");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass13 = wildcardClassOfFieldBloomFilter12.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass16);
        boolean boolean19 = constableBloomFilter9.contains((java.lang.constant.Constable) '#');
        constableBloomFilter9.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass22 = constableBloomFilter9.getClass();
        boolean boolean23 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass22);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter28.getClass();
        boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass29);
        java.lang.constant.Constable constable31 = null;
        constableBloomFilter2.insert(constable31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter42.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        constableBloomFilter49.insert(constable50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        constableBloomFilter54.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass67 = wildcardClassOfFieldBloomFilter66.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass70);
        boolean boolean73 = constableBloomFilter63.contains((java.lang.constant.Constable) '#');
        constableBloomFilter63.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass76 = constableBloomFilter63.getClass();
        boolean boolean77 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass76);
        boolean boolean78 = constableBloomFilter49.contains((java.lang.constant.Constable) boolean77);
        boolean boolean80 = constableBloomFilter49.contains((java.lang.constant.Constable) 100);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter49.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass81);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass81);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass90 = serializableBloomFilter89.getClass();
        constableBloomFilter86.insert((java.lang.constant.Constable) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter86.getClass();
        boolean boolean93 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2496");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (byte) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2497");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean11 = constableBloomFilter9.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter19.getClass();
        boolean boolean21 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass20);
        boolean boolean22 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean21);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2498");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 1);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean15 = constableBloomFilter11.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass27 = wildcardClassOfFieldBloomFilter26.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass27);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass33 = constableBloomFilter32.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter38.getClass();
        boolean boolean44 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter47.contains(constable48);
        constableBloomFilter47.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean53 = constableBloomFilter47.contains((java.lang.constant.Constable) 'a');
        boolean boolean55 = constableBloomFilter47.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter47.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, 0);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter60.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean67 = constableBloomFilter65.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable71 = null;
        boolean boolean72 = constableBloomFilter70.contains(constable71);
        constableBloomFilter70.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter70.getClass();
        boolean boolean76 = constableBloomFilter65.contains((java.lang.constant.Constable) wildcardClass75);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable80 = null;
        boolean boolean81 = constableBloomFilter79.contains(constable80);
        constableBloomFilter79.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean85 = constableBloomFilter79.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter88 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter91 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass92 = constableBloomFilterBloomFilter91.getClass();
        boolean boolean93 = constableBloomFilter88.contains((java.lang.constant.Constable) wildcardClass92);
        constableBloomFilter79.insert((java.lang.constant.Constable) wildcardClass92);
        constableBloomFilter65.insert((java.lang.constant.Constable) wildcardClass92);
        boolean boolean96 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass92);
        boolean boolean97 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean96);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2499");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(0, (int) ' ');
    }

    @Test
    public void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2500");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) '#', (int) '4');
    }
}

